{"version":3,"sources":["api/index.js","colors/index.js","progressbar/index.js","uploadView/uploadFileList/item.js","uploadView/uploadFileList/index.js","uploadView/uploadFinishView/index.js","alertViews/index.js","uploadView/sendView/index.js","text/index.js","uploadView/cancelView/index.js","helpers/roundFileSze.js","uploadView/index.js","helpers/getRange.js","downloadView/downloadFileList/item.js","downloadView/downloadFileList/index.js","downloadView/downloadMessView/index.js","infoViews/index.js","downloadView/index.js","AIR_1024px.png","background/index.js","App.js","index.js"],"names":["axios","defaults","xsrfHeaderName","xsrfCookieName","is_local","window","location","hostname","_url","process","configForm_","headers","api","create","baseURL","axiosRetry","retries","apis","upload_detail","id","get","download_delete_detail","sender","delete","create_major","form","post","is_major_detail","download_stream","downFileName","extensionName","config","AxiosStream","download","is_mail_detail","mail","create_ping","create_file","multi_part_create","remove_file_detail","filename","filed","count","multi_part_persigned","multi_part_complete","color","highBlue","grey","pink","green","orange","white","black","accentColor","olive","lila","red","pastellgreen","yellow","grey_blue","background1","background2","background3","background_white","ProgressBar","props","bgcolor","counter","containerStyles","height","width","backgroundColor","borderRadius","overflow","fillerStyles","display","justifyContent","alignItems","colors","labelStyles","position","left","textShadow","fontSize","fontWeight","style","Math","floor","Item","item","this","is_load","load","className","loading","size","origin_name","onClick","removeItem","React","Component","ListItem","value","FileList","create_list","lines","items","forEach","push","e","file_guid","map","indexOf","state","prevProps","length","showView","isLink","data-for","data-tip","data-event","navigator","clipboard","writeText","link","place","effect","globalEventOff","afterShow","mailConfirm","type","condition","setState","alertView","title","text","cancelBtn","okBtnText","cancelBtnText","Swal","fire","background","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","dismiss","DismissReason","cancel","cancelUploadSwal","a","newUploadSwal","sendAlerts","alert","cancelBoolean","answer","ViewText","reset_state","useUserMail","useLink","useMail","useDownload","handleInput","target","name","handleMail","is_used","handleDownload","radioSwitchMail","valueR","FormControl","FormLabel","RadioGroup","onChange","FormControlLabel","control","Radio","label","useLinkOrMail","mail_user","mail_to","radioSwitchDownload","Switch","checked","downloadOptionText","send_info","message","res","data","isSuccess","infos","send_option","visible","wrapper","createRef","open","mobile","placeholder","rows","close","blue","CancelView","uploadCancel","loopBreak","roundFileSize","kb_size","round","mb_size","SendViewStyles","content","top","right","bottom","marginRight","transform","border","overlay","CHUNK_SIZE","UploadView","resetUpload","showProgress","upload_success","timeout","ms","Promise","resolve","setTimeout","uploadIsCancel","file","majorId","console","log","newConnect","chunkCount","connect","ping","is","counterOfFile","newUpload","use_link","use_email","progressAction","progressEvent","fullCount","chunk","loaded","total","u","Array","from","values","reduce","acc","set","progress","getFileContext","files","file_arr","full_count","full_size","_file","_totalCount","ceil","_fileID","uuidv4","file_json","chunk_count","file_size","file_data","chunks","send","openSendView","createMajor","FormData","append","fileLoopBreak","upload_begin","upload_dispatcher","create_chunks","uploadCompleted","chunk_start","i","slice","promises_1","promises_2","countArr","start","end","_","j","countlist","parseInt","createFile","all","urlList","uploadFileToS3","bucket","split","s3","presignedPostData","formData","Object","keys","fields","key","onUploadProgress","retryCondition","_error","url","response","download_link","path","protocol","host","email","sended_mail","list","uploadFile","removed_list","filter","readyToSend","hidden","bottomView","upload_size","show_text","multiple","isOpen","onRequestClose","ariaHideApp","newOpen","Map","DownloadFileList","backcolor","htmlLayout","date","use_download","_size","ds","Date","is_mail","is_mail_to","is_use_download","is_use_link","toLocaleDateString","weekday","year","month","day","hour","infoView","html","downloadInfoView","htmlText","renderToString","DownloadView","majorInfo","checkLink","isContent","fileList","deleteBucket","file_loop","downloadFiles","isLocal","autori","configDownload","responseType","onDownloadProgress","percentage","method","messageView","infoBtnView","changeDownloadView","complete","match","params","openInfoView","MyImageComponent","_width","screen","_height","src","useImage","srcList","Appbackground","fallback","Beta","App","createPing","backend","routing","exact","render","addEventListener","updateWindowDimensions","innerHeight","innerWidth","document","documentElement","setProperty","removeEventListener","air","alt","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f7f62fa8.chunk.js","sourcesContent":["\n\n/*\n.catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\n  \n*/\n\n\nimport axios from 'axios'\nimport AxiosStream from \"axios-stream\";\nimport axiosRetry from 'axios-retry';\n\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\nconst is_local = window.location.hostname ==='localhost'\n\nconst hostUrl = process.env.REACT_APP_API_BASE_URL \nconst autori = is_local? 'local' : process.env.REACT_APP_AUTORI\nconst _url = is_local? 'http://127.0.0.1:8000/transmit/' : hostUrl \n\n\n\n\n\nconst configForm_ = {\n  headers: { \n    'Authorization': `${autori}`,\n    'Content-Type': 'multipart/form-data;boundary=boundary',\n    'Accept': 'application/json;text/plain'\n  }\n}\n\n\n\n\n\nconst api = axios.create({\n    baseURL: _url\n\n})\naxiosRetry(api, { retries: 3 });\nexport const create_ping = () => api.get(`ping/`, configForm_)\n\nexport const create_major = form => api.post(`major/`, form, configForm_)\nexport const is_major_detail = sender => api.get(`major/${sender}`, configForm_)\n\nexport const create_file = form => api.post(`file/`,form , configForm_)\nexport const multi_part_create = form => api.post(`multipartcreate/`,form , configForm_) // ....UNSUSED\nexport const multi_part_persigned = form => api.post(`multipartpersigned/`,form , configForm_) // ....UNSUSED\nexport const multi_part_complete = form => api.post(`multipartcomplete/`,form , configForm_) // ....UNSUSED\nexport const filed = (filename, count) => api.get(`file/${filename}-${count}`, configForm_)\n\nexport const upload_detail = id => api.get(`upload/${id}`, configForm_)\nexport const download_delete_detail = sender => api.delete(`remove/${sender}`, configForm_)\nexport const remove_file_detail = (id, filename) => api.delete(`removefile/${id}/${filename}`, configForm_)\nexport const is_mail_detail = mail => api.get(`mailvali/${mail}`, configForm_)\n\nexport const download_stream = (downFileName,extensionName, config) => AxiosStream.download(downFileName, extensionName, config);\n\n\n\n\n\nconst apis = {\n  upload_detail,\n  download_delete_detail,\n  create_major,\n  is_major_detail,\n  download_stream,\n  is_mail_detail,\n  create_ping,\n  create_file,\n  multi_part_create,\n  remove_file_detail,\n  filed,\n  multi_part_persigned,\n  multi_part_complete\n\n    \n}\n\n\nexport default apis","\n \n// colors\nconst highBlue = '#5ba3c7'\nconst grey = '#f0f0f0'\nconst pink = '#e8c8c8'\nconst green = '#a3c49f'\nconst orange = '#ebd7b7'\nconst white = '#ffffff'\nconst black = '#212121'\nconst olive = '#c4d184'\nconst lila = '#9397d9'\nconst red = '#d993a0'\nconst pastellgreen = '#98b8a7'\nconst yellow = '#f0df48'\nconst cosmos_grey = '#353535'\n//const accentColor =  '#ff757e' \nconst accentColor =  '#62bce3'//  '#819cdb'//'#84c4ba' \nconst background1 = '#505a66'\nconst background2 = '#404954'\nconst background3 = '#606b78'\nconst background_white = 'rgba(187, 187, 187, 0.886)'\nconst beige = '#baaea2'\nconst grey_blue = '#505a66'\nconst color = {\n    highBlue, \n    grey, \n    pink, \n    green, \n    orange, \n    white, \n    black, \n    accentColor, \n    olive, \n    lila, \n    red, \n    pastellgreen, \n    yellow , \n    grey_blue,\n    background1,\n    background2,\n    background3,\n    background_white\n} \n\nexport default color\n","\n/*\n\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n    */\n\nimport colors from './../colors'\nconst ProgressBar = (props) => {\n    const { bgcolor, counter } = props;\n  \n    const containerStyles = {\n      //position: 'absolute',\n      height: '6vh',\n      width: '90%',\n      backgroundColor: \"rgba(255, 255, 255, 0.512)\",\n      borderRadius: '0vh',\n      overflow: 'hidden',\n      borderRadius: '2px'\n      \n    }\n  \n    const fillerStyles = {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      height: '100%',\n      width: `${counter}%`,\n      backgroundColor: colors.black,\n      \n    }\n  \n    const labelStyles = {\n      position: 'absolute',\n      color: 'white',\n      height: '6vh',\n      width: 'auto',\n      left:'6%',\n      textShadow: `2px 2px ${colors.black}`,\n      //paddingLeft:'3vw',\n      fontSize: '150%',\n      //minWidth: '50px',\n      fontWeight: 'bold',\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      //marginRight: '5px',\n      //backgroundColor: \"rgba(255, 255, 255, 0.512)\"\n    }\n    \n    const progressDiv = {\n      height: '100%',\n      width: '94%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }\n    \n \n\n\n\n    return (\n      <div style={progressDiv}>\n        <div style={containerStyles}>\n          <div style={fillerStyles}>\n            <span style={labelStyles}>{`${Math.floor(counter)} %`}</span>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  export default ProgressBar;","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash } from \"react-icons/vsc\";\nimport SquareLoader from \"react-spinners/SquareLoader\";\n\n\n\n\nexport default class Item extends React.Component{\n\n    \n\n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const item =  this.props.item\n        const is_load = this.props.load\n\n        return(\n            <div className='download_item_frame'>\n                <div className='item_icon_div'>\n                    <div className='item_icon'>{is_load? <SquareLoader color={'#a6a6a6'} loading={true}  size={26} />:<VscFile size={30}/>}</div>\n                </div>\n                <div className='item_name_div'>\n                    <div className='item_name'>{item.origin_name}</div>\n                </div>\n                <div className='item_remove_div'>\n                    <button className='item_remove' onClick={()=>this.props.removeItem(item)}><VscTrash size ={18}/></button>\n                </div>\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport Item from './item'\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"list_item\">{props.value}</div>\n            </div>);\n}\n\nexport default class FileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      if(this.props.items.length !== prevProps.items.length){\n      }\n    }\n\n    create_list=()=>{\n        const lines = [] \n        this.props.items.forEach(item => {\n          \n            lines.push(\n              <Item \n                item={item}\n                removeItem={(e)=>this.props.removeItem(e)}\n                load={this.props.load===item.file_guid? true: false}\n\n                />\n              )\n        });\n\n\n\n\n        const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item) } />);\n        return listItems; \n\n        \n    }\n  \n  \n  \n    render(){\n      return (\n        <div className='File_list_frame'>{this.create_list()}</div>\n      )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport ReactTooltip from \"react-tooltip\";\n\n\nexport default class FileList extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      place: \"top\",\n      type: \"dark\",\n      effect: \"float\",\n      condition: false\n    };\n  }\n\n  changePlace(place) {\n    this.setState({\n      place: place\n    });\n  }\n\n  changeType(type) {\n    this.setState({\n      type: type\n    });\n  }\n\n  changeEffect(effect) {\n    this.setState({\n      effect: effect\n    });\n  }\n\n  _onClick() {\n    this.setState({\n      condition: true\n    });\n  }\n\n  \n  \n  showView = ()=>{\n    if(!this.props.isLink){\n      return(\n        <div className='div_link'>\n            <div className='link_text'>der Downloadlink wurde erfolgreich an </div>\n            <div className='email_text'>{this.props.mailConfirm} </div>\n            <div className='link_text'>gesendet. </div>\n            <div className='link_text_2'>dein Download bleibt 12 Stunden lang gespeichert</div>\n            <div className='link_text_2'>alle Daten werden nach ablauf unwiederuflich gelöscht</div>\n          </div>\n      )\n    }else{\n      return(\n        <div className='div_link'>\n            <div className='link_text'> hier ist der link zum kopieren</div>\n            <a className='link_copy'\n                  data-for=\"custom-event\"\n                  data-tip=\"link wurde kopiert\"\n                  data-event=\"click focus\"\n                  onClick={() => {navigator.clipboard.writeText(this.props.link)}}\n                >\n                  {this.props.link}\n                </a>\n                <ReactTooltip id=\"custom-event\" place=\"right\" effect=\"solid\" globalEventOff=\"click\" afterShow={()=>{navigator.clipboard.writeText(this.props.link)}} />\n                <div className='link_text_2'>dein Download bleibt 12 Stunden lang gespeichert</div>\n                <div className='link_text_2'>alle Daten werden nach ablauf unwiederuflich gelöscht</div>\n          </div>\n      )\n    }\n  }\n\n\n\n\n\n  \n  \n  render(){\n    return (\n        <div className='view_finish'>\n          {this.showView()}\n        </div>\n    )\n  }\n    \n  \n  \n  }","import Swal from 'sweetalert2'\nimport colors from './../colors'\n\n\n\n\n\n\n//background: rgba(187, 187, 187, 0.886);\nconst alertView = (title, text, cancelBtn, okBtnText, cancelBtnText)=>{\n\n    // Alert POP UP\n    //\n    const e = Swal.fire({\n        background: 'rgba(187, 187, 187, 0.886)',\n        title: title,\n        text: text,\n        icon: 'warning',\n        showCancelButton: cancelBtn,\n        cancelButtonColor: colors.red,\n        confirmButtonColor: colors.highBlue,\n        confirmButtonText: okBtnText,\n        cancelButtonText: cancelBtnText\n      }).then((result) => {\n        if (result.isConfirmed) {\n            return true\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n            return false\n        }\n      })\n      return e\n}\n\n\nexport const cancelUploadSwal=async()=>{\n  // Alert POP UP\n //\n const titel = 'Abbruch?'\n const text = 'sind Sie Sicher, das Sie den Upload abbrechen möchten !'\n const cancelBoolean = true\n const okBtnText = 'Ja, abbrechen'\n const cancelBtnText = 'Nein, weiter hochladen'\n\n const answer =  await alertView(titel, text, cancelBoolean, okBtnText, cancelBtnText)\n if(answer){\n     return true\n }\n \n}\n\nexport const newUploadSwal = async()=>{\n\n  // Alert POP UP\n  //\n  const titel = 'Neuer Upload?'\n  const text = 'sind Sie Sicher, Sie haben keine möglichkeit mehr an den Downloadlink zu kommen!'\n  const cancelBoolean = true\n  const okBtnText = 'Ja, ich habe den link kopiert'\n  const cancelBtnText = 'Nein, ich kopiere mir den link nochmal'\n\n  const answer =  await alertView(titel, text, cancelBoolean, okBtnText, cancelBtnText)\n  if(answer){\n      return true\n  }\n  \n}\n\n\nexport const sendAlerts = async(alert)=>{\n  const title = 'E-mail exestiert nicht'\n  const cancelBoolean = false\n  const okBtnText = 'Ok'\n\n  switch(alert){\n    case 'mailuser':\n      var text = 'bitte überprüfen deine    Absender    Adresse'\n      var answer =  await alertView(title, text, cancelBoolean,okBtnText, null) // alert View\n      return answer\n\n    case 'mailto':\n      var text = 'bitte überprüfen deine   Empfänger   Adresse'\n      var answer =  await alertView(title, text, cancelBoolean,okBtnText, null) // alert View\n      return answer\n\n    case 'empty':\n      var text = 'Pflichtfelder sind nicht ausgefüllt !'\n      const new_title = 'keine Eingabe'\n      var answer =  await alertView(new_title, text, cancelBoolean,okBtnText, null) // alert View\n      return answer\n  }\n}","import React from 'react';\nimport './index.css';\nimport Radio from '@material-ui/core/Radio';\nimport Switch from '@material-ui/core/Switch';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport {sendAlerts} from './../../alertViews';\nimport api from './../../api'\nimport {colors} from '@material-ui/core';\nimport {USE_DOWNLOAD, USE_NOT_DOWNLOAD, PLACEHOLDER_TEXT} from './../../text'\n\n\n\n\n\n\n\nexport class ViewText extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            useLink: true,\n            useDownload: false,\n            message: '',\n            mail_user: '',\n            mail_to: '',\n            send_option:'link',\n            visible: true\n\n        }\n        this.wrapper = React.createRef();\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.open !== prevProps.open) {\n            this.reset_state()\n        }\n    }\n\n    reset_state = () => {\n        this.setState({\n            useUserMail: false,\n            useLink: true,\n            useMail: false,\n            useDownload: true\n        })\n    }\n\n    handleInput = ({ target }) => {\n        this.setState({ [target.name]: target.value })\n\n        \n    }\n\n    handleMail = () => {\n        const is_used = this.state.useLink? false : true\n        this.setState({ useLink: is_used});\n    };\n\n    handleDownload = () => {\n        //const used = event.target.value\n        const is_used = this.state.useDownload? false : true\n        this.setState({useDownload: is_used});\n    };\n    \n\n\n\n\n\n\n\n\n\n\n\n    radioSwitchMail = ()=>{\n        const valueR = this.state.useLink? 'link' : 'mail'\n        return(\n            <div className='send_view_change_zone_div'>\n                <div className='send_view_radio_div'>\n                    <FormControl >\n                        <FormLabel className='send_view_formlabel'>Übermittlungsart</FormLabel>\n                        <RadioGroup  value={valueR} onChange={this.handleMail}>\n                            <FormControlLabel value=\"link\" control={<Radio color=\"default\"/>} label=\"Link\" />\n                            <FormControlLabel value=\"mail\" control={<Radio color=\"default\"/>} label=\"Link per mail\" />\n                        </RadioGroup>\n                    </FormControl>\n                </div>\n                {this.useLinkOrMail()}\n            </div>\n        )\n    }\n\n    useLinkOrMail = () => {\n        const { useLink } = this.state\n        if(!useLink){\n            return (\n                <div className='send_view_show_options'>\n                    <div className='send_view_div_input'>E-mail des Absenders:\n                        <input className='send_view_input' type='email' name='mail_user' value={this.state.mail_user} onChange={this.handleInput}></input>\n                    </div>\n                    <div className='send_view_div_input'>E-mail des Empfänger:\n                        <input className='send_view_input' type='email' name='mail_to' value={this.state.mail_to} onChange={this.handleInput}></input>\n                    </div>\n                    \n                </div>\n            )\n        }else{\n            return (\n                <div className='send_view_show_options'>\n                    <div className='send_view_div'>\n                        <div className='send_view_div_linktext'>Erhalte einen Link nach dem Upload</div>\n                    </div>\n                </div>\n            )\n        }\n                \n          \n    }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    radioSwitchDownload = ()=>{\n        return(\n            <div className='send_view_change_zone_div'>\n                <div className='send_view_radio_div'>\n                    <FormControl >\n                    <FormLabel className='send_view_formlabel'>Download</FormLabel>\n                    <FormControlLabel control={\n                        <Switch size=\"medium\" color='primary' checked={this.state.useDownload} onChange={this.handleDownload} />}\n                        label=\"einmaliger Download\"\n                        />\n                    </FormControl>\n                </div>\n                {this.downloadOptionText()}\n            </div>\n        )\n    }\n\n    downloadOptionText = () => {\n        const { useDownload } = this.state\n        if(useDownload){\n            return (\n                <div className='sendview_info_text'>{USE_DOWNLOAD}</div>\n            )\n        }else{\n            return (\n                <div className='sendview_info_text'>{USE_NOT_DOWNLOAD}</div>\n            )\n        }\n        \n    }\n\n\n\n\n\n\n\n\n\n    send_info = async()=>{\n        const { mail_to, mail_user, message, useDownload, useLink  } = this.state\n        // sending option => use mail\n        if(!useLink){\n            // validate.... no input im E-mail field\n            if(!mail_user || !mail_to){\n                let answer =  await sendAlerts('empty')\n                if(answer){\n                    return\n                }\n            }\n            // validate.... e-mail Absender\n            const is_mail_user = await api.is_mail_detail(mail_user).then(res=>{return res.data.isSuccess})\n            if(!is_mail_user){\n                let answer =  await sendAlerts('mailuser')\n                if(answer){\n                    return\n                }\n            }\n            // validate.... e-mail Empfänger\n            const is_mail_to = await api.is_mail_detail(mail_to).then(res=>{return res.data.isSuccess})\n            if(!is_mail_to){\n                let answer =  await sendAlerts('mailto')\n                if(answer){\n                    return\n                }\n            }\n        }\n        this.props.infos({ mail_user, mail_to, message, useDownload, useLink })\n\n    }\n\n\n    hide() {\n        this.setState({ visible: false });\n    }\n    \n\n    render() {\n        \n        return (\n            <div className={this.props.mobile?'send_view_dialog_mobile':'send_view_dialog'}>\n                <div className={this.props.mobile?'send_view_frame_mobile':'send_view_frame'}>\n                    <div className='send_view_title_div'>\n                        Datenübertragung\n                    </div>\n                    <div className='send_view_change_zone'>{this.radioSwitchDownload()}</div>\n                    <div className='send_view_change_zone'>{this.radioSwitchMail()}</div>\n                    <div className='send_view_div'>\n                        <textarea className='send_view_message' placeholder={PLACEHOLDER_TEXT} rows={6} type='text' name='message' value={this.state.message} onChange={this.handleInput}></textarea>\n                    </div>\n                    <div className='send_view_btn_div'>\n                        <button className='send_btn' onClick={() => this.props.close()}>abbruch</button>\n                        <button className='send_btn' style={{color: colors.blue}} onClick={() => this.send_info()}>senden</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ViewText;\n\n\n\n","// Fix strings in App\n\nexport const USE_DOWNLOAD = \" Nach dem ersten Dowload werden alle Daten der Übertragung gelöscht und es ist kein weiter Download mehr möglich! \"\nexport const USE_NOT_DOWNLOAD = \" Nach dem Upload werden alle deine Daten, 12 Std lang in einer Cloud gespeichert und können abgerufen werden!  \"\nexport const PLACEHOLDER_TEXT = '...schreibe eine Nachricht an den Empfänger ? '","\n  \nimport React from 'react';\nimport './index.css'\nimport { cancelUploadSwal, newUploadSwal } from './../../alertViews';\n\n\n\n\nexport default class CancelView extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={ \n            \n\n        }\n        \n    }\n  \n    \n    \n\n    \n\n    uploadCancel = async()=>{\n        const answer =  cancelUploadSwal\n        if(answer){\n            this.props.loopBreak()\n        }\n        \n    }\n\n    \n\n    \n\n    \n\n    \n\n\n\n    \n\n\n    render(){\n            return (\n                <div className='progressbar_btn_div'>\n                    <button onClick={()=>this.uploadCancel()}  className='upload_cancel'>STOP</button>\n                </div>\n            )\n    }\n      \n    \n  \n  \n  }\n\n\n","\nexport default function roundFileSize(size){\n    // kilo bytes\n    const kb_size = Math.round(size / 1000) \n    //mega bytes\n    if(kb_size > 1000){\n        const mb_size = Math.round(size / 100000) / 10 \n        // giga bytes\n        if(mb_size > 2000){\n            const gb_size = Math.round(size / 10000000) / 100 \n            return gb_size + '  GB'\n        }\n        return mb_size + '  MB'\n    }\n    return kb_size + '  KB'\n}","\n  \nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './index.css'\nimport api from './../api'\nimport ProgressBar from './../progressbar'\nimport Itemlist from './uploadFileList'\nimport FinishView from './uploadFinishView'\nimport SendView from './sendView'\nimport range from '../helpers/getRange';\nimport CancelView from './cancelView';\nimport colors from './../colors'\nimport { VscDiffAdded } from \"react-icons/vsc\";\nimport { cancelUploadSwal, newUploadSwal } from './../alertViews';\nimport Modal from 'react-modal';\nimport roundFileSize from '../helpers/roundFileSze';\nimport axios from 'axios'\nimport axiosRetry from 'axios-retry';\n\nconst SendViewStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      border: `1px solid ${colors.black}`,\n      borderRadius: '2px',\n      background: 'rgba(236, 236, 236, 0.668)'\n    },overlay: { background: 'rgba(64, 64, 64, 0.668)' } // blur background\n};\n\n\nconst CHUNK_SIZE = 1048576 * 2// 1MB \nconst BUCKET_COUNT = 110\nconst UPLOAD_THREAD = 120\n\nexport default class UploadView extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={ \n            files:[],\n            infos:{},\n            showProgress: false,\n            full_count: 0,\n            full_size: 0,\n            progress: 0,\n            openSendView: false,\n            mailConfirm: '',\n            upload_success: false,\n            visible: false,\n            link: '',\n            isLink: null,\n            fileLoopBreak: false,\n            majorId: null,\n            loaded: new Map(),\n            upload_begin: ''\n\n        }\n        \n    }\n  \n    \n    resetUpload = () => {\n        this.setState({\n            showProgress: false,\n            process: 0,\n            upload_success: false,\n        })\n    }\n\n    timeout=(ms)=> {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    \n\n    uploadIsCancel = async(id, file)=>{\n        const filename = file.file_guid\n        await api.remove_file_detail(id, filename).then(res=>{\n            const is_remove = res.data.isSuccess\n            if(is_remove){\n                this.removeItem(file)\n                this.setState({majorId: id})\n                console.log('file gelöscht............!')\n                this.resetUpload()\n            }\n        })\n\n    }\n\n    newConnect = async(file, id, count , chunkCount )=>{\n        var connect = true\n        while (connect){\n            console.log('wiederhole verbindung')\n                try{\n                    const ping = await api.create_ping()\n                    if(ping){\n                        console.log(ping.data.is)\n                        console.log('**** CONNECT *****')\n                        connect = false\n                        await this.counterOfFile(file, id, count , chunkCount )\n\n                    }\n                }catch{\n                    if(!this.state.showProgress){\n                        connect = false\n                    }\n                    await this.timeout(3000);\n                }\n        }\n    }\n    \n\n    newUpload = async()=>{\n        const answer =  await newUploadSwal()\n        if(answer){\n            this.setState({\n                upload_success: false, \n                use_link: null,\n                use_email: null\n            })\n        }\n    }\n\n    progressAction = (progressEvent, count, fullCount)=>{\n        const chunk = ((progressEvent.loaded/1000000) / (progressEvent.total/1000000)) * 100\n        console.log('chunk ',count,': ',Math.floor(progressEvent.loaded/1000000),  ' => ',Math.floor(progressEvent.total/1000000))\n        const add = (acc, a)=>{\n            return acc + a\n        }\n        const u = Array.from(this.state.loaded.values()).reduce(add, 0)\n        this.state.loaded.set(count , chunk)\n        this.setState({progress: u / fullCount})\n    }\n\n    // ********************\n    // *******FIIE*********\n    // ********************\n    getFileContext = (e) => {\n        const files = []\n        const file_arr = Array.from(e.target.files)\n        var full_count = 0\n        var full_size = this.state.full_size\n        file_arr.forEach(file=>{\n            const _file = file;\n            const _totalCount =  Math.ceil(file.size / CHUNK_SIZE) // counts of cjunks\n            const _fileID = uuidv4() \n            const file_json = {\n                chunk_count: _totalCount,\n                file_size: _file.size,\n                origin_name: _file.name,\n                file_guid: _fileID,\n                file_data: _file,\n                chunks: []\n            }\n            full_count = full_count + _totalCount\n            full_size = full_size + _file.size\n            files.push(file_json)\n        })\n        this.setState({files: [...this.state.files, ...files], full_count: this.state.full_count + full_count, full_size})\n        \n    }\n\n\n    // ACTION\n    // user send data........\n    //\n    send = (infos)=>{\n        const {files} = this.state\n        this.setState({openSendView: false, showProgress: true, infos}, ()=>{\n            this.createMajor(files, infos)\n        })\n    }\n\n\n\n    createMajor = async (files, infos) => {\n        let majorId = this.state.majorId\n        if(!majorId){\n            const form = new FormData()\n            form.append('mail_to', infos.mail_to)\n            form.append('mail_user', infos.mail_user)\n            form.append('message', infos.message)\n            form.append('use_download', infos.useDownload)\n            form.append('use_link', infos.useLink)\n            //\n            // create Major Model\n            //\n            //\n            //\n            majorId = await api.create_major(form).then(res=>{\n                //console.log('res => ceate ', res)\n                if(res.data.isSuccess){\n                    return res.data.id\n                }else{\n                    return null\n                }   \n            }) \n        }\n        \n        // start loop of  all chunks\n        if (majorId){\n            for (const file of files) {\n                if(this.state.fileLoopBreak){\n                    break\n                }\n                this.setState({upload_begin: file.file_guid})\n                await this.upload_dispatcher(this.create_chunks(file), majorId)\n            }\n        console.log('all finish')\n        this.uploadCompleted(majorId)\n        }\n    }\n\n\n    \n\n    create_chunks= (file)=>{\n        let chunk_start  = 0\n        for(let i = 1; i<=file.chunk_count; i++){\n            const chunk = file.file_data.slice(chunk_start, CHUNK_SIZE + chunk_start)\n            //console.log(max_chunk_size,'........ ',chunk.size)\n            file.chunks.push(chunk)\n            chunk_start = chunk_start + chunk.size\n        }\n        return file\n    }\n\n    \n    \n    upload_dispatcher = async(file, id)=>{\n        console.log(file)\n        const promises_1 = []\n        const promises_2 = []\n        const countArr = [...range(1, file.chunk_count)]\n        console.log(countArr)\n        var i,j, countlist, chunk = UPLOAD_THREAD;\n        for (i = 0,j = countArr.length; i < j; i += chunk) {\n            countlist =countArr.slice(i, i + chunk);\n            console.log(countlist)\n            for(let i of countlist){\n                const count = parseInt(i) + 1\n                promises_1.push(await this.createFile(file, id, count))\n            }\n            const urlList = await Promise.all(promises_1)\n            promises_1.length = 0 \n            for(let e of urlList){\n                promises_2.push(this.uploadFileToS3(e, file.chunks, parseInt(e.bucket), file.file_guid, id))\n            }\n            await Promise.all(promises_2)\n            promises_2.length = 0\n        }\n        console.log('finish')\n        this.removeItem(file)\n           \n    }\n\n    \n    createFile = async(file, id, count) => {\n        try {\n            const form = new FormData()\n            form.append('id', id)\n            form.append('chunks', count)\n            form.append('filename', file.file_guid)\n            form.append('file_size', file.file_size)\n            form.append('origin_name', file.origin_name)\n            form.append('extension', file.file_data.name.split('.').slice(-1)[0])\n            \n            return await api.create_file(form).then(res=>{\n                const presignedPostData = res.data.s3\n                return presignedPostData\n            })\n           \n        }catch (error) {\n            //debugger\n            console.log('error', error)\n        }\n    } \n \n  \n\n\n    uploadFileToS3 = async(presignedPostData, chunks, count, filename, id) => {\n        // create a form obj\n        const formData = new FormData();\n        // append the fields in presignedPostData in formData         \n        Object.keys(presignedPostData.fields).forEach(key => {\n                      formData.append(key, presignedPostData.fields[key]);\n                    });           \n        \n        // append the file\n        formData.append(\"file\", chunks[count - 1]);\n        // post the data on the s3 url\n        const config = {\n            onUploadProgress: progressEvent => this.progressAction(progressEvent, count, chunks.length)  /*console.log('chunk', count,' ',Math.floor(progressEvent.loaded/100000),  ' => ',Math.floor(progressEvent.total/100000))*/,\n            headers: {\n                'Content-Type': \"multipart/form-data\",\n             }\n        }\n        //console.log(presignedPostData.url)\n        axiosRetry(axios, { retries: 8, retryCondition: (_error) => true});\n        await axios.post(presignedPostData.url, formData, config).then(res=>{\n            console.log(' res ', count, ' : ', res)\n            \n            const isStorage = api.filed(filename,count).then(res=>{\n                console.log(count,' =>  ', res.data.isSuccess)\n            })\n        })         \n    }\n\n    uploadCompleted = async (id) => {\n        \n        if(this.state.fileLoopBreak){\n            this.setState({fileLoopBreak: false})\n            return\n        }\n        const response = await api.upload_detail(id)\n        const data = response.data;\n        if (data.isSuccess) {\n            if(data.link){\n                const download_link =  data.link\n                if (typeof window !== 'undefined') {\n                    const path = window.location.protocol + '//' + window.location.host +'/'+  download_link; \n                    //console.log('show download link ', download_link)\n                    this.setState({upload_success: true, link: path, isLink: true})\n                }\n            }\n            if(data.email){\n                const sended_mail =  data.email\n                console.log('show download email', sended_mail)\n                this.setState({upload_success: true, mailConfirm: sended_mail, isLink: false})\n            }\n            this.resetUpload()\n            this.setState({upload_success: true})\n        }else{\n            if(data.list){\n                console.log('... es wurde nicht alles gespeichert !!!!')\n                console.log(data.list)\n            }\n        }\n    }\n    \n      \n\n\n    \n\n    // removed item from list \n    // .file_guid = uuid name from upload file\n    // stste new list \n    removeItem = (uploadFile)=>{\n        let full_size = this.state.full_size\n        full_size = full_size - uploadFile.file_size\n        const fileList = this.state.files\n        const removed_list = fileList.filter(file=>{ \n            if(file.file_guid != uploadFile.file_guid){\n               return file\n           }\n        })\n        this.setState({files: removed_list, full_size, progress: 0})\n    }\n\n    \n\n    // if file in Upload list\n    // show button to open send menu\n    readyToSend = ()=>{\n        return(\n            <div className='ready_to_send_div'> \n                <button className='start_upload_btn' hidden={this.state.openSendView} onClick={()=>this.setState({openSendView: true})}>senden</button>\n            </div>\n        )\n    }\n\n    \n\n    bottomView = (files)=>{\n        const {full_size, upload_success} = this.state\n        const upload_size = 'gesamt '+ roundFileSize(full_size)\n        if(upload_success){\n            return(\n                <div className='div_input_upload' onClick={()=>this.newUpload()}>\n                    <label className='label_input_upload'>\n                        <VscDiffAdded size={50} color={colors.black}/>\n                    </label>\n                    <div className='text_input_upload'>hinzufügen von Dateien</div>\n                </div>\n            )\n        }else{\n            const show_text = files.length>0 ? upload_size : 'hinzufügen von Dateien'\n            return(\n                <div className='div_input_upload'>\n                    <label className='label_input_upload'>\n                        <input  className='input_upload'   type='file' multiple onChange={this.getFileContext} />\n                        <VscDiffAdded size={50} color={colors.black}/>\n                    </label>\n                    <div className='text_input_upload_size'>{show_text}</div>\n                    {files.length>0 ? this.readyToSend() : null}\n                    <div className='rodal_div' >\n                        <Modal\n                            style={SendViewStyles}\n                            isOpen={this.state.openSendView} \n                            onRequestClose={()=>this.setState({openSendView: false})}\n                            ariaHideApp={false}\n                \n                        >\n                            <SendView \n                                open={this.state.openSendView} \n                                close={()=>this.setState({openSendView: false})} \n                                infos={(infos)=>this.send(infos)} \n                                mobile={this.props.mobile} \n                                newOpen={()=>this.setState({openSendView: true})}\n                            />\n                        </Modal>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    \n\n\n    render(){\n        const {showProgress, files, progress, upload_begin, link, upload_success, mailConfirm, isLink} = this.state\n        return (\n            <div className='frame_input_upload'>\n                {!showProgress?\n                    this.bottomView(files)\n                    :\n                    <div>{!showProgress? null: \n                        <div className='progressbar_view'>\n                            <ProgressBar counter={progress} bgcolor={colors.accentColor}/>\n                            <CancelView loopBreak={()=>this.setState({fileLoopBreak: true})} />\n                        </div>}\n                    </div>\n                }\n                {files.length>0 ? <div className='upload_list'><Itemlist items={files} load={upload_begin} removeItem={(e)=>this.removeItem(e)}/></div> : null}\n                {upload_success ? <div className='upload_finish'><FinishView link={link} mailConfirm={mailConfirm} isLink={isLink} /></div> : null}    \n            </div>\n        )\n    }\n}\n\n\n","\nexport default function range(start, end){\n    return Array.from({ length: end - start + 1 }, (_, i) => i)\n}","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash } from \"react-icons/vsc\";\n\n\n\n\n\nexport default class Item extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n            filename: '',\n\n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n  \n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const item =  this.props.item\n        return(\n            <div className='download_item_frame'>\n                <div className='download_item_icon_div'>\n                    <div className='download_item_icon'><VscFile size={30}/></div>\n                </div>\n                <div className='download_item_name_div'>\n                    <div className='download_item_name'>{item.origin_name}</div>\n                </div>\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport Item from './item'\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"list_item\">{props.value}</div>\n            </div>);\n}\n\nexport default class DownloadFileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      //console.log(prevProps, '   prevprps')\n      if(this.props.items.length !== prevProps.items.length){\n        console.log('items length änderung')\n      }\n    }\n\n    create_list=()=>{\n        const lines = [] \n        this.props.items.forEach(item => {\n            lines.push(\n              <Item \n                item={item}\n\n                />\n              )\n        });\n\n\n\n\n        const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item) } />);\n        return listItems; \n\n        \n    }\n  \n  \n  \n    render(){\n      return (\n        <div className='File_list_frame'>{this.create_list()}</div>\n      )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\n\n\n\nexport default class DownloadFileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          backcolor: 'transparent'\n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    /*\n    setBackground = ()=>{\n      const color = this.state.backcolor = 'transparent' ? 'white' : 'transparent'\n      this.setState({backcolor: color})\n    }\n    */\n  \n  \n  \n    render(){\n      return (\n        <div className='download_mess_frame' >{this.props.message}</div>\n      )\n    }\n      \n    \n  \n  \n  }","import Swal from 'sweetalert2'\nimport colors from './../colors'\nimport { renderToString } from 'react-dom/server'\nimport roundFileSize from '../helpers/roundFileSze';\n\n\nconst htmlLayout = (infos)=>{\n  const { mail_to, mail_user, date, use_download, use_link, files } = infos\n  let _size = 0\n  for (const file of files) {\n    _size = _size + file.file_size\n  };\n  const upload_size = 'gesamt '+ roundFileSize(_size)\n  const options = { weekday: 'long', year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric' };\n  const ds = new Date(date)\n  const is_mail = mail_user ? mail_user : 'keine Angabe'\n  const is_mail_to = mail_to === [''] ? mail_to : 'keine Angabe'\n  const is_use_download = use_download ? 'einmailger Download': 'upload wird nach 12 Std gelöscht'\n  const is_use_link = use_link ? 'upload-Link' : 'E-mail Benachrichtung'\n  return(\n    <div >\n        <div style={{fontWeight: '600',height: '1.5em'}}> Erstellt: <span style={{fontWeight: '300'}}> {ds.toLocaleDateString(\"de-DE\", options)}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Dateigröße: <span style={{fontWeight: '300'}}> {upload_size}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Absender: <span style={{fontWeight: '300'}}> {is_mail}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Empfänger: <span style={{fontWeight: '300'}}> {is_mail_to}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Speicher Option: <span style={{fontWeight: '300'}}> {is_use_download}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Übermittlungsart: <span style={{fontWeight: '300'}}> {is_use_link}</span></div>\n    </div>\n  )\n}\n\n\n//background: rgba(187, 187, 187, 0.886);\nconst infoView = (title, text, cancelBtn, okBtnText, cancelBtnText)=>{\n\n    // Alert POP UP\n    //\n    const e = Swal.fire({\n        background: 'rgba(187, 187, 187, 0.886)',\n        title: title,\n        html: text,\n        icon: 'info',\n        showCancelButton: cancelBtn,\n        cancelButtonColor: colors.red,\n        confirmButtonColor: colors.highBlue,\n        confirmButtonText: okBtnText,\n        cancelButtonText: cancelBtnText\n      }).then((result) => {\n        if (result.isConfirmed) {\n            return true\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n            return false\n        }\n      })\n      return e\n}\n\n\nexport const  downloadInfoView = async(infos)=>{\n  const title = 'Upload Infos'\n  const cancelBoolean = false\n  const okBtnText = 'Ok'\n  let htmlText = renderToString(htmlLayout(infos))\n  let answer =  await infoView(title, htmlText, cancelBoolean,okBtnText, null) // alert View\n  if(answer){\n      return\n      }\n\n  \n\n}","\n\nimport React from 'react';\nimport './index.css'\nimport api from './../api'\nimport ProgressBar from './../progressbar'\nimport colors from './../colors'\nimport DownloadFileList from './downloadFileList'\nimport DownloadMessageView from './downloadMessView'\nimport { VscArrowDown, VscInfo, VscCheck } from \"react-icons/vsc\";\nimport { downloadInfoView} from '../infoViews';\n\n\n\n\n\n\nexport default class DownloadView extends React.Component{\n\n  constructor(props){\n      super(props);\n      this.state={    \n         counter: 1,\n         showProgress: false,\n         files: [],\n         majorInfo: {},\n         message: '',\n         isContent:false,\n         link:this.props.match.params.id,\n         complete: false,\n         openInfoView: false\n\n\n      }\n  }\n  componentDidMount(){\n    console.log(' DOWNLOAD VIEW ')\n    const link = this.props.match.params.id\n    this.checkLink(link)\n\n  }\n\n  \n\n  infoView = async()=>{\n    const { mail_to, mail_user, date, use_download, use_link } = this.state.majorInfo\n    const {files} = this.state\n    const infos = {mail_to, mail_user, date, use_download, use_link, files }\n    let answer =  await downloadInfoView(infos) // alert View\n    if(answer){\n        return\n        }\n\n    \n\n}\n\n  checkLink = async(link)=>{\n    await api.is_major_detail(link).then(res=>{\n      if(res.data.isSuccess){\n        const data = res.data\n        this.setState({isContent: true, files: data.fileList, message: data.message, majorInfo: data.majorInfo})\n        console.log(res.data)\n      }\n    })\n  }\n\n\n\n  deleteBucket=async()=>{\n    const {link} = this.state\n    await api.download_delete_detail(link).then(res=>{\n      if(res){\n        this.setState({showProgress: false, })\n      }\n\n    })\n  }\n\n  \n\n  \n\n\n\n  file_loop = async () => {\n    const {files} = this.state\n\n    for (const file of files) {\n        console.log(file)\n        await this.downloadFiles(file)\n       \n    }\n    this.deleteBucket()\n    \n  } \n\n\n  downloadFiles = async(file)=>{ \n    const isLocal = window.location.hostname=='localhost'\n    const _url = isLocal? 'http://127.0.0.1:8000/transmit/' :  process.env.REACT_APP_API_BASE_URL\n    const autori = isLocal? 'local' : process.env.REACT_APP_AUTORI\n    const {origin_name, filename } = file\n    this.setState({showProgress:true})\n    const configDownload = {\n      responseType: 'arraybuffer',\n      onDownloadProgress:(progressEvent)=> {\n        console.log(progressEvent.loaded, '  /  ', progressEvent.total)\n        const percentage = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n        this.setState({counter: percentage})\n      },\n      url: _url + 'download/' + filename,\n      method: 'get',\n      headers:{\n        'Authorization': `${autori}`,\n      }\n      \n    }\n    const empty_ext = ''\n    await api.download_stream(origin_name, empty_ext, configDownload).then(res=>{\n      this.removeItem(file)\n\n    })\n  }\n\n  removeItem = (item)=>{\n    const fileList = this.state.files\n    const removed_list = fileList.filter(file=>{ \n        if(file.filename != item.filename){\n           return file\n       }else{\n           console.log('gefunden !!!!')\n       }\n    })\n    this.setState({files: removed_list})\n\n  }\n\n  messageView = ()=>{\n    const {message} = this.state\n    return(\n        <div>\n        {message.length>0 ? \n          <div className='download_message_view'>\n            <div className='download_message_text'> Eine Nachricht für dich </div>\n            <DownloadMessageView message={message} />\n          </div>\n          : null}\n        </div>\n            \n    )\n  }\n\n\n\n\n  infoBtnView = ()=>{\n    return (\n      <div className= 'download_info_btn_div' onClick={()=>this.infoView()}><VscInfo size={30} color={colors.black}/></div>\n    )\n  }\n\n  \n\n  changeDownloadView =()=>{\n    const complete = this.state.counter === 100\n    return(\n      <div>\n      {!complete?\n        <div className='div_input_upload'>\n            <div className='download_icon_div' onClick={()=>this.file_loop()}><VscArrowDown size={35} color={colors.black}/></div>\n            <div className='text_input_upload'>starte den download</div>\n            {this.infoBtnView()}\n        </div>\n        :\n        <div className='div_input_upload'>\n          <div className='download_icon_div' ><VscCheck size={35} color={colors.black}/></div>\n          <div className='text_input_upload'>download complete</div>\n        </div>\n      }\n      </div>\n    )\n  }\n\n  \n\n\n  render(){\n    const {isContent, showProgress, counter, files} = this.state\n    if(isContent){\n      return (\n        <div className='frame_input_upload' >\n          {!showProgress?\n            this.changeDownloadView():<div>{!showProgress? null: <div className='progressbar_view' ><ProgressBar counter={counter} bgcolor={colors.accentColor}/></div>}</div>\n          }\n          {files.length>0 ? <div className='download_list_view'>{this.messageView()}<DownloadFileList items={files} /></div> : null}\n          \n        </div>\n      );\n    }else{\n      return (\n        <div className='frame_input_upload' >\n            <div className='div_input_upload'>\n              <div className='text_input_upload_NO_CONTENT'>NO CONTENT</div>\n            </div>\n        </div>\n      );\n    }\n    \n  }\n}\n\n","export default __webpack_public_path__ + \"static/media/AIR_1024px.e442824d.png\";","import React, {Suspense} from 'react'\nimport {useImage} from 'react-image'\n \nfunction MyImageComponent() {\n    const _width = window.screen.width\n    const _height = window.screen.height\n    //console.log( 'w . ', _width, ' h . ', _height)\n    \n    const {src} = useImage({\n        srcList: `https://picsum.photos/${_width}/${_height}?random=1`,\n    })\n\n    \n    return <img src={src} />\n}\n //<MyImageComponent />\nexport default function Appbackground() {\n  return (\n    <Suspense fallback={<div style={{height: '100%', width:'100%', background:'black'}}></div>}>\n      <MyImageComponent />\n    </Suspense>\n  )\n}","import React from 'react';\nimport './App.css';\nimport { Route, Switch} from 'react-router-dom';\nimport UploadView from './uploadView'\nimport DownloadView from './downloadView'\nimport { VscThreeBars } from \"react-icons/vsc\";\nimport colors from './colors'\nimport air from './AIR_1024px.png'\nimport Bg from './background'\nimport api from './api'\n\n\n\nconst Beta = <div className='open_beta'>open beta</div>\n\n\n\n\nexport default class App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      mobile: false,\n      height: '',\n      backend: false,\n    }\n      \n\n    }\n  \n  componentDidMount(){\n    this.createPing()\n    window.addEventListener(\"resize\", this.updateWindowDimensions());\n    this.setState({height: window.innerHeight + \"px\"})\n  }\n\n  \n\n  updateWindowDimensions() {\n    const mobile = window.innerWidth<=600\n    document.documentElement.style.setProperty('--vh', `${window.innerHeight/100}px`);\n    this.setState({ mobile: mobile});\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  createPing = async()=>{\n    await api.create_ping().then(res=>{\n      if(res.data.is === 'pong'){\n        this.setState({backend: true})\n      }\n    })\n  }\n\n\n  routing = ()=> {\n    return (\n        <Switch>\n          <Route exact path=\"/\" render={(props) => (\n              <UploadView {...props} mobile={this.state.mobile} backend={this.state.backend} />\n              )}></Route>\n          <Route  path=\"/:id\" render={(props) => (\n              <DownloadView {...props} mobile={this.state.mobile} backend={this.state.backend} />\n              )}></Route>\n        </Switch> \n    );\n  }\n\n\n  \n\n  \n  render(){\n    return (\n      <div className='app_window' style={{height: this.state.height}}>\n        <div className='head_view'>\n          <div className='title'><img  className='air_icon' src={air} alt=\"Logo\"/> AIR channel{Beta}</div>\n          <div className='menu'>\n            <div className='menu_icon'><VscThreeBars size={30} color={colors.white}/> </div></div>\n        </div>\n        <div className='unkown_view'><Bg/></div>\n        <div className='actions_view'>{this.routing()}</div>\n      </div>\n    );\n  }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}