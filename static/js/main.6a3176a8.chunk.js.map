{"version":3,"sources":["api/index.js","colors/index.js","progressbar/index.js","uploadView/uploadFileList/item.js","uploadView/uploadFileList/index.js","uploadView/uploadFinishView/index.js","alertViews/index.js","uploadView/sendView/index.js","text/index.js","helpers/roundFileSze.js","uploadView/index.js","downloadView/downloadFileList/item.js","downloadView/downloadFileList/index.js","downloadView/downloadMessView/index.js","infoViews/index.js","downloadView/index.js","AIR_1024px.png","background/index.js","App.js","index.js"],"names":["axios","defaults","xsrfHeaderName","xsrfCookieName","is_local","window","location","hostname","_url","process","configForm_","headers","api","create","baseURL","apis","upload_detail","id","get","download_delete_detail","sender","delete","create_major","form","post","is_major_detail","download_stream","downFileName","extensionName","config","AxiosStream","download","is_mail_detail","mail","insertfile","create_ping","start_chunk_upload","remove_file_detail","filename","color","highBlue","grey","pink","green","orange","white","black","accentColor","olive","lila","red","pastellgreen","yellow","grey_blue","background1","background2","background3","background_white","ProgressBar","props","bgcolor","counter","fillerStyles","display","justifyContent","alignItems","height","width","backgroundColor","colors","style","position","borderRadius","overflow","minWidth","fontWeight","marginRight","Math","floor","marginLeft","padding","textShadow","onClick","cancel","Item","item","this","className","size","origin_name","removeItem","React","Component","ListItem","value","FileList","create_list","lines","items","forEach","push","e","map","indexOf","state","prevProps","length","showView","isLink","data-for","data-tip","data-event","navigator","clipboard","writeText","link","place","effect","globalEventOff","afterShow","mailConfirm","type","condition","setState","alertView","title","text","cancelBtn","okBtnText","cancelBtnText","Swal","fire","background","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","dismiss","DismissReason","cancelUploadSwal","a","newUploadSwal","sendAlerts","alert","cancelBoolean","answer","ViewText","reset_state","useUserMail","useLink","useMail","useDownload","handleInput","target","name","handleMail","is_used","handleDownload","radioSwitchMail","valueR","FormControl","FormLabel","RadioGroup","onChange","FormControlLabel","control","Radio","label","useLinkOrMail","mail_user","mail_to","radioSwitchDownload","Switch","checked","downloadOptionText","send_info","message","res","data","isSuccess","infos","send_option","visible","wrapper","createRef","open","mobile","placeholder","rows","close","blue","roundFileSize","kb_size","round","mb_size","customStyles","content","top","left","right","bottom","transform","border","CHUNK_SIZE","UploadView","resetUpload","showProgress","upload_success","timeout","ms","Promise","resolve","setTimeout","newUpload","use_link","use_email","getFileContext","files","file_arr","Array","from","full_count","full_size","file","_file","_totalCount","_fileID","uuidv4","file_json","file_size","file_guid","chunk_count","file_data","uploadCancel","fileLoopBreak","uploadIsCancel","majorId","console","log","newConnect","count","chunkCount","connect","ping","is","counterOfFile","createMajor","FormData","append","uploadCompleted","chunk_size_start","percentage","chunk","slice","progress","chunk_loop","uploadFirstChunk","uploadChunks","split","response","download_link","path","protocol","host","email","sended_mail","uploadFile","removed_list","filter","send","allChunkCounts","reduce","b","openSendView","readyToSend","hidden","bottomView","upload_size","show_text","multiple","isOpen","onRequestClose","ariaHideApp","newOpen","DownloadFileList","backcolor","htmlLayout","date","use_download","_size","ds","Date","is_mail","is_mail_to","is_use_download","is_use_link","toLocaleDateString","weekday","year","month","day","hour","infoView","html","downloadInfoView","htmlText","renderToString","DownloadView","majorInfo","checkLink","isContent","fileList","deleteBucket","file_loop","downloadFiles","isLocal","autori","configDownload","responseType","onDownloadProgress","progressEvent","loaded","total","url","method","messageView","infoBtnView","changeDownloadView","complete","match","params","openInfoView","MyImageComponent","_width","screen","_height","src","useImage","srcList","Appbackground","fallback","Beta","App","createPing","backend","routing","exact","render","addEventListener","updateWindowDimensions","innerHeight","innerWidth","document","documentElement","setProperty","removeEventListener","air","alt","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a3176a8.chunk.js","sourcesContent":["\n\n/*\n.catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\n  \n*/\n\n\nimport axios from 'axios'\nimport AxiosStream from \"axios-stream\";\n\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\nconst is_local = window.location.hostname ==='localhost'\n\nconst hostUrl = process.env.REACT_APP_API_BASE_URL \nconst autori = is_local? 'local' : process.env.REACT_APP_AUTORI\nconst _url = is_local? 'http://127.0.0.1:8000/transmit/' : hostUrl \n\n\n\n\n\nconst configForm_ = {\n  headers: { \n    'Authorization': `${autori}`,\n    'Content-Type': 'multipart/form-data;boundary=boundary',\n    'Accept': 'application/json;text/plain'\n  }\n}\n\n\n\n\n\nconst api = axios.create({\n    baseURL: _url\n\n})\n\nexport const create_ping = () => api.get(`ping/`, configForm_)\n\nexport const create_major = form => api.post(`major/`, form, configForm_)\nexport const is_major_detail = sender => api.get(`major/${sender}`, configForm_)\n\nexport const start_chunk_upload = form => api.post(`preparation/`,form , configForm_)\n\nexport const insertfile = form => api.post(`upload/`,form , configForm_)\nexport const get_Item = form => api.get(`upload/`, form, configForm_)\nexport const upload_detail = id => api.get(`upload/${id}`, configForm_)\n\nexport const download_delete_detail = sender => api.delete(`remove/${sender}`, configForm_)\nexport const remove_file_detail = (id, filename) => api.delete(`removefile/${id}/${filename}`, configForm_)\nexport const is_mail_detail = mail => api.get(`mailvali/${mail}`, configForm_)\n\nexport const download_stream = (downFileName,extensionName, config) => AxiosStream.download(downFileName, extensionName, config);\n\n\n\n\n\nconst apis = {\n  upload_detail,\n  download_delete_detail,\n  create_major,\n  is_major_detail,\n  download_stream,\n  is_mail_detail,\n  insertfile,\n  create_ping,\n  start_chunk_upload,\n  remove_file_detail\n\n    \n}\n\n\nexport default apis","\n \n// colors\nconst highBlue = '#5ba3c7'\nconst grey = '#f0f0f0'\nconst pink = '#e8c8c8'\nconst green = '#a3c49f'\nconst orange = '#ebd7b7'\nconst white = '#ffffff'\nconst black = '#212121'\nconst olive = '#c4d184'\nconst lila = '#9397d9'\nconst red = '#d993a0'\nconst pastellgreen = '#98b8a7'\nconst yellow = '#f0df48'\nconst cosmos_grey = '#353535'\n//const accentColor =  '#ff757e' \nconst accentColor =  '#62bce3'//  '#819cdb'//'#84c4ba' \nconst background1 = '#505a66'\nconst background2 = '#404954'\nconst background3 = '#606b78'\nconst background_white = 'rgba(187, 187, 187, 0.886)'\nconst beige = '#baaea2'\nconst grey_blue = '#505a66'\nconst color = {\n    highBlue, \n    grey, \n    pink, \n    green, \n    orange, \n    white, \n    black, \n    accentColor, \n    olive, \n    lila, \n    red, \n    pastellgreen, \n    yellow , \n    grey_blue,\n    background1,\n    background2,\n    background3,\n    background_white\n} \n\nexport default color\n","\n/*\n\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n    */\n\nimport colors from './../colors'\nconst ProgressBar = (props) => {\n    const { bgcolor, counter } = props;\n  \n    const containerStyles = {\n      //position: 'absolute',\n      height: '6vh',\n      width: '90%',\n      backgroundColor: \"rgba(255, 255, 255, 0.512)\",\n      borderRadius: '3vh',\n      overflow: 'hidden',\n      \n    }\n  \n    const fillerStyles = {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      height: '100%',\n      width: `${counter}%`,\n      backgroundColor: colors.black,\n    }\n  \n    const labelStyles = {\n      position: 'absolute',\n      color: 'white',\n      height: 'auto',\n      minWidth: '50px',\n      fontWeight: 'bold',\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      marginRight: '5px',\n    }\n    \n    const progressDiv = {\n      position: 'absolute',\n      height: '100%',\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }\n    const cancelStyles = {\n      color: 'white',\n      height: 'auto',\n      minWidth: '50px',\n      fontWeight: 'bold',\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      marginLeft: '10px',\n      backgroundColor: \"rgba(255, 255, 255, 0.512)\",\n      borderRadius:'6px',\n      padding: '5px',\n      textShadow: '2px 2px 4px #000000',\n    }\n \n\n\n\n    return (\n      <div style={progressDiv}>\n        <div style={containerStyles}>\n          <div style={fillerStyles}>\n            <span style={labelStyles}>{`${Math.floor(counter)} %`}</span>\n          </div>\n        </div>\n        <div style={cancelStyles} onClick={()=>props.cancel()}>abbruch</div>\n      </div>\n    );\n  };\n  \n  export default ProgressBar;","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash } from \"react-icons/vsc\";\n\n\n\n\n\nexport default class Item extends React.Component{\n\n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const item =  this.props.item\n\n        return(\n            <div className='download_item_frame'>\n                <div className='item_icon_div'>\n                    <div className='item_icon'><VscFile size={30}/></div>\n                </div>\n                <div className='item_name_div'>\n                    <div className='item_name'>{item.origin_name}</div>\n                </div>\n                <div className='item_remove_div'>\n                    <button className='item_remove' onClick={()=>this.props.removeItem(item)}><VscTrash size ={18}/></button>\n                </div>\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport Item from './item'\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"list_item\">{props.value}</div>\n            </div>);\n}\n\nexport default class FileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      if(this.props.items.length !== prevProps.items.length){\n      }\n    }\n\n    create_list=()=>{\n        const lines = [] \n        this.props.items.forEach(item => {\n            lines.push(\n              <Item \n                item={item}\n                removeItem={(e)=>this.props.removeItem(e)}\n\n                />\n              )\n        });\n\n\n\n\n        const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item) } />);\n        return listItems; \n\n        \n    }\n  \n  \n  \n    render(){\n      return (\n        <div className='File_list_frame'>{this.create_list()}</div>\n      )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport ReactTooltip from \"react-tooltip\";\n\n\nexport default class FileList extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      place: \"top\",\n      type: \"dark\",\n      effect: \"float\",\n      condition: false\n    };\n  }\n\n  changePlace(place) {\n    this.setState({\n      place: place\n    });\n  }\n\n  changeType(type) {\n    this.setState({\n      type: type\n    });\n  }\n\n  changeEffect(effect) {\n    this.setState({\n      effect: effect\n    });\n  }\n\n  _onClick() {\n    this.setState({\n      condition: true\n    });\n  }\n\n  \n  \n  showView = ()=>{\n    if(!this.props.isLink){\n      return(\n        <div className='div_link'>\n            <div className='link_text'>der Downloadlink wurde erfolgreich an </div>\n            <div className='email_text'>{this.props.mailConfirm} </div>\n            <div className='link_text'>gesendet. </div>\n            <div className='link_text_2'>dein Download bleibt 12 Stunden lang gespeichert</div>\n            <div className='link_text_2'>alle Daten werden nach ablauf unwiederuflich gelöscht</div>\n          </div>\n      )\n    }else{\n      return(\n        <div className='div_link'>\n            <div className='link_text'> hier ist der link zum kopieren</div>\n            <a className='link_copy'\n                  data-for=\"custom-event\"\n                  data-tip=\"link wurde kopiert\"\n                  data-event=\"click focus\"\n                  onClick={() => {navigator.clipboard.writeText(this.props.link)}}\n                >\n                  {this.props.link}\n                </a>\n                <ReactTooltip id=\"custom-event\" place=\"right\" effect=\"solid\" globalEventOff=\"click\" afterShow={()=>{navigator.clipboard.writeText(this.props.link)}} />\n                <div className='link_text_2'>dein Download bleibt 12 Stunden lang gespeichert</div>\n                <div className='link_text_2'>alle Daten werden nach ablauf unwiederuflich gelöscht</div>\n          </div>\n      )\n    }\n  }\n\n\n\n\n\n  \n  \n  render(){\n    return (\n        <div className='view_finish'>\n          {this.showView()}\n        </div>\n    )\n  }\n    \n  \n  \n  }","import Swal from 'sweetalert2'\nimport colors from './../colors'\n\n\n\n\n\n\n//background: rgba(187, 187, 187, 0.886);\nconst alertView = (title, text, cancelBtn, okBtnText, cancelBtnText)=>{\n\n    // Alert POP UP\n    //\n    const e = Swal.fire({\n        background: 'rgba(187, 187, 187, 0.886)',\n        title: title,\n        text: text,\n        icon: 'warning',\n        showCancelButton: cancelBtn,\n        cancelButtonColor: colors.red,\n        confirmButtonColor: colors.highBlue,\n        confirmButtonText: okBtnText,\n        cancelButtonText: cancelBtnText\n      }).then((result) => {\n        if (result.isConfirmed) {\n            return true\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n            return false\n        }\n      })\n      return e\n}\n\n\nexport const cancelUploadSwal=async()=>{\n  // Alert POP UP\n //\n const titel = 'Abbruch?'\n const text = 'sind Sie Sicher, das Sie den Upload abbrechen möchten !'\n const cancelBoolean = true\n const okBtnText = 'Ja, abbrechen'\n const cancelBtnText = 'Nein, weiter hochladen'\n\n const answer =  await alertView(titel, text, cancelBoolean, okBtnText, cancelBtnText)\n if(answer){\n     return true\n }\n \n}\n\nexport const newUploadSwal = async()=>{\n\n  // Alert POP UP\n  //\n  const titel = 'Neuer Upload?'\n  const text = 'sind Sie Sicher, Sie haben keine möglichkeit mehr an den Downloadlink zu kommen!'\n  const cancelBoolean = true\n  const okBtnText = 'Ja, ich habe den link kopiert'\n  const cancelBtnText = 'Nein, ich kopiere mir den link nochmal'\n\n  const answer =  await alertView(titel, text, cancelBoolean, okBtnText, cancelBtnText)\n  if(answer){\n      return true\n  }\n  \n}\n\n\nexport const sendAlerts = async(alert)=>{\n  const title = 'E-mail exestiert nicht'\n  const cancelBoolean = false\n  const okBtnText = 'Ok'\n\n  switch(alert){\n    case 'mailuser':\n      var text = 'bitte überprüfen deine    Absender    Adresse'\n      var answer =  await alertView(title, text, cancelBoolean,okBtnText, null) // alert View\n      return answer\n\n    case 'mailto':\n      var text = 'bitte überprüfen deine   Empfänger   Adresse'\n      var answer =  await alertView(title, text, cancelBoolean,okBtnText, null) // alert View\n      return answer\n\n    case 'empty':\n      var text = 'Pflichtfelder sind nicht ausgefüllt !'\n      const new_title = 'keine Eingabe'\n      var answer =  await alertView(new_title, text, cancelBoolean,okBtnText, null) // alert View\n      return answer\n  }\n}","import React from 'react';\nimport './index.css';\nimport Radio from '@material-ui/core/Radio';\nimport Switch from '@material-ui/core/Switch';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport {sendAlerts} from './../../alertViews';\nimport api from './../../api'\nimport {colors} from '@material-ui/core';\nimport {USE_DOWNLOAD, USE_NOT_DOWNLOAD, PLACEHOLDER_TEXT} from './../../text'\n\n\n\n\n\n\n\nexport class ViewText extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            useLink: true,\n            useDownload: false,\n            message: '',\n            mail_user: '',\n            mail_to: '',\n            send_option:'link',\n            visible: true\n\n        }\n        this.wrapper = React.createRef();\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.open !== prevProps.open) {\n            this.reset_state()\n        }\n    }\n\n    reset_state = () => {\n        this.setState({\n            useUserMail: false,\n            useLink: true,\n            useMail: false,\n            useDownload: true\n        })\n    }\n\n    handleInput = ({ target }) => {\n        this.setState({ [target.name]: target.value })\n\n        \n    }\n\n    handleMail = () => {\n        const is_used = this.state.useLink? false : true\n        this.setState({ useLink: is_used});\n    };\n\n    handleDownload = () => {\n        //const used = event.target.value\n        const is_used = this.state.useDownload? false : true\n        this.setState({useDownload: is_used});\n    };\n    \n\n\n\n\n\n\n\n\n\n\n\n    radioSwitchMail = ()=>{\n        const valueR = this.state.useLink? 'link' : 'mail'\n        return(\n            <div className='send_view_change_zone_div'>\n                <div className='send_view_radio_div'>\n                    <FormControl >\n                        <FormLabel className='send_view_formlabel'>Übermittlungsart</FormLabel>\n                        <RadioGroup  value={valueR} onChange={this.handleMail}>\n                            <FormControlLabel value=\"link\" control={<Radio color=\"default\"/>} label=\"Link\" />\n                            <FormControlLabel value=\"mail\" control={<Radio color=\"default\"/>} label=\"Link per mail\" />\n                        </RadioGroup>\n                    </FormControl>\n                </div>\n                {this.useLinkOrMail()}\n            </div>\n        )\n    }\n\n    useLinkOrMail = () => {\n        const { useLink } = this.state\n        if(!useLink){\n            return (\n                <div className='send_view_show_options'>\n                    <div className='send_view_div_input'>E-mail des Absenders:\n                        <input className='send_view_input' type='email' name='mail_user' value={this.state.mail_user} onChange={this.handleInput}></input>\n                    </div>\n                    <div className='send_view_div_input'>E-mail des Empfänger:\n                        <input className='send_view_input' type='email' name='mail_to' value={this.state.mail_to} onChange={this.handleInput}></input>\n                    </div>\n                    \n                </div>\n            )\n        }else{\n            return (\n                <div className='send_view_show_options'>\n                    <div className='send_view_div'>\n                        <div className='send_view_div_linktext'>Erhalte einen Link nach dem Upload</div>\n                    </div>\n                </div>\n            )\n        }\n                \n          \n    }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    radioSwitchDownload = ()=>{\n        return(\n            <div className='send_view_change_zone_div'>\n                <div className='send_view_radio_div'>\n                    <FormControl >\n                    <FormLabel className='send_view_formlabel'>Download</FormLabel>\n                    <FormControlLabel control={\n                        <Switch size=\"medium\" color='primary' checked={this.state.useDownload} onChange={this.handleDownload} />}\n                        label=\"einmaliger Download\"\n                        />\n                    </FormControl>\n                </div>\n                {this.downloadOptionText()}\n            </div>\n        )\n    }\n\n    downloadOptionText = () => {\n        const { useDownload } = this.state\n        if(useDownload){\n            return (\n                <div className='sendview_info_text'>{USE_DOWNLOAD}</div>\n            )\n        }else{\n            return (\n                <div className='sendview_info_text'>{USE_NOT_DOWNLOAD}</div>\n            )\n        }\n        \n    }\n\n\n\n\n\n\n\n\n\n    send_info = async()=>{\n        const { mail_to, mail_user, message, useDownload, useLink  } = this.state\n        // sending option => use mail\n        if(!useLink){\n            // validate.... no input im E-mail field\n            if(!mail_user || !mail_to){\n                let answer =  await sendAlerts('empty')\n                if(answer){\n                    return\n                }\n            }\n            // validate.... e-mail Absender\n            const is_mail_user = await api.is_mail_detail(mail_user).then(res=>{return res.data.isSuccess})\n            if(!is_mail_user){\n                let answer =  await sendAlerts('mailuser')\n                if(answer){\n                    return\n                }\n            }\n            // validate.... e-mail Empfänger\n            const is_mail_to = await api.is_mail_detail(mail_to).then(res=>{return res.data.isSuccess})\n            if(!is_mail_to){\n                let answer =  await sendAlerts('mailto')\n                if(answer){\n                    return\n                }\n            }\n        }\n        this.props.infos({ mail_user, mail_to, message, useDownload, useLink })\n\n    }\n\n\n    hide() {\n        this.setState({ visible: false });\n    }\n    \n\n    render() {\n        \n        return (\n            <div className={this.props.mobile?'send_view_dialog_mobile':'send_view_dialog'}>\n                <div className={this.props.mobile?'send_view_frame_mobile':'send_view_frame'}>\n                    <div className='send_view_title_div'>\n                        Datenübertragung\n                    </div>\n                    <div className='send_view_change_zone'>{this.radioSwitchDownload()}</div>\n                    <div className='send_view_change_zone'>{this.radioSwitchMail()}</div>\n                    <div className='send_view_div'>\n                        <textarea className='send_view_message' placeholder={PLACEHOLDER_TEXT} rows={6} type='text' name='message' value={this.state.message} onChange={this.handleInput}></textarea>\n                    </div>\n                    <div className='send_view_btn_div'>\n                        <button className='send_btn' onClick={() => this.props.close()}>abbruch</button>\n                        <button className='send_btn' style={{color: colors.blue}} onClick={() => this.send_info()}>senden</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ViewText;\n\n\n\n","// Fix strings in App\n\nexport const USE_DOWNLOAD = \" Nach dem ersten Dowload werden alle Daten der Übertragung gelöscht und es ist kein weiter Download mehr möglich! \"\nexport const USE_NOT_DOWNLOAD = \" Nach dem Upload werden alle deine Daten, 12 Std lang in einer Cloud gespeichert und können abgerufen werden!  \"\nexport const PLACEHOLDER_TEXT = '...schreibe eine Nachricht an den Empfänger ? '","\nexport default function roundFileSize(size){\n    // kilo bytes\n    const kb_size = Math.round(size / 1000) \n    //mega bytes\n    if(kb_size > 1000){\n        const mb_size = Math.round(size / 100000) / 10 \n        // giga bytes\n        if(mb_size > 2000){\n            const gb_size = Math.round(size / 10000000) / 100 \n            return gb_size + '  GB'\n        }\n        return mb_size + '  MB'\n    }\n    return kb_size + '  KB'\n}","\n  \nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './index.css'\nimport api from './../api'\nimport ProgressBar from './../progressbar'\nimport Itemlist from './uploadFileList'\nimport FinishView from './uploadFinishView'\nimport SendView from './sendView'\nimport colors from './../colors'\nimport { VscDiffAdded } from \"react-icons/vsc\";\nimport { cancelUploadSwal, newUploadSwal } from './../alertViews';\nimport Modal from 'react-modal';\nimport roundFileSize from '../helpers/roundFileSze';\n\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      border: 'none',\n      borderRadius: '12px'\n    },\n};\n\n\n\n\n\n\nconst CHUNK_SIZE = 1048576 * 3;//its 3MB, increase the number measure in mb\n\n\n \nexport default class UploadView extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={ \n            files:[],\n            infos:{},\n            showProgress: false,\n            full_count: 0,\n            full_size: 0,\n            progress: 0,\n            openSendView: false,\n            mailConfirm: '',\n            upload_success: false,\n            visible: false,\n            link: '',\n            isLink: null,\n            fileLoopBreak: false,\n            majorId: null\n\n        }\n        \n    }\n  \n    \n    resetUpload = () => {\n        this.setState({\n            showProgress: false,\n            process: 0,\n            upload_success: false,\n        })\n    }\n\n    timeout=(ms)=> {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n    \n    \n    newUpload = async()=>{\n        const answer =  await newUploadSwal()\n        if(answer){\n            this.setState({\n                upload_success: false, \n                use_link: null,\n                use_email: null\n            })\n        }\n    }\n\n\n    getFileContext = (e) => {\n        const files = []\n        const file_arr = Array.from(e.target.files)\n        var full_count = 0\n        var full_size = this.state.full_size\n        file_arr.forEach(file=>{\n            const _file = file;\n            const _totalCount = _file.size % CHUNK_SIZE === 0 ? _file.size / CHUNK_SIZE : Math.floor(_file.size / CHUNK_SIZE) + 1; // Total count of chunks will have been upload to finish the file\n            const _fileID = uuidv4() //+ get_ext(_file.name.split('.'));\n            const file_json = {\n                file_size: _file.size,\n                origin_name: _file.name,\n                file_guid: _fileID,\n                chunk_count: _totalCount,\n                file_data: _file\n            }\n            full_count = full_count + _totalCount\n            full_size = full_size + _file.size\n            files.push(file_json)\n        })\n        this.setState({files: [...this.state.files, ...files], full_count: this.state.full_count + full_count, full_size})\n        \n    }\n\n    uploadCancel=async()=>{\n        const answer =  await cancelUploadSwal\n        if(answer){\n            this.setState({\n                fileLoopBreak: true, \n            })\n        }\n        \n    }\n\n    uploadIsCancel = async(id, file)=>{\n        const filename = file.file_guid\n        await api.remove_file_detail(id, filename).then(res=>{\n            const is_remove = res.data.isSuccess\n            if(is_remove){\n                this.removeItem(file)\n                this.setState({majorId: id})\n                console.log('file gelöscht............!')\n                this.resetUpload()\n            }\n        })\n\n\n    }\n\n    newConnect = async(file, id, count , chunkCount )=>{\n        var connect = true\n        while (connect){\n            console.log('wiederhole verbindung')\n                try{\n                    const ping = await api.create_ping()\n                    if(ping){\n                        console.log(ping.data.is)\n                        console.log('**** CONNECT *****')\n                        connect = false\n                        await this.counterOfFile(file, id, count , chunkCount )\n\n                    }\n                }catch{\n                    if(!this.state.showProgress){\n                        connect = false\n                    }\n                    await this.timeout(3000);\n                }\n        }\n    }\n    \n\n\n\n\n\n    createMajor = async (files, infos) => {\n        let majorId = this.state.majorId\n        if(!majorId){\n            const form = new FormData()\n            form.append('mail_to', infos.mail_to)\n            form.append('mail_user', infos.mail_user)\n            form.append('message', infos.message)\n            form.append('use_download', infos.useDownload)\n            form.append('use_link', infos.useLink)\n            //\n            // create Major Model\n            //\n            //\n            //\n            majorId = await api.create_major(form).then(res=>{\n                //console.log('res => ceate ', res)\n                if(res.data.isSuccess){\n                    return res.data.id\n                }else{\n                    return null\n                }   \n            }) \n        }\n        \n        // start loop of  all chunks\n        if (majorId){\n            for (const file of files) {\n                if(this.state.fileLoopBreak){\n                    break\n                }\n                // this file begins\n                await this.counterOfFile(file, majorId)\n                \n               \n            }\n            await this.uploadCompleted(majorId);\n            \n        }\n         \n    }\n\n    \n\n\n    \n\n    counterOfFile = async(file, id, count=1, chunkCount=0) => {\n        var chunk_size_start = chunkCount\n\n        for (count; ; count++ ) {\n            if(this.state.fileLoopBreak){\n                await this.uploadIsCancel(id, file)\n                break\n            }\n            var percentage = (count / file.chunk_count) * 100;\n\n            const chunk = file.file_data.slice(chunk_size_start, CHUNK_SIZE + chunk_size_start);\n            this.setState({progress: percentage})\n            //await this.timeout(3000); // local simulation\n\n            const isUpload = await this.chunk_loop(chunk, file,id, count)\n            if(!isUpload){\n                console.log('upload error')\n                await this.newConnect(file, id, count, chunk_size_start)\n                \n                break\n                \n                \n            }\n\n            chunk_size_start = chunk_size_start + chunk.size\n            if(count === file.chunk_count){\n                this.removeItem(file)\n                return\n            }\n        }\n    }\n\n\n\n    chunk_loop = async (chunk, file, id, count) => {\n        if(count === 1){\n            return await this.uploadFirstChunk(chunk, count, file, id)\n        }else{\n            return await this.uploadChunks(chunk, count, file, id)\n        }\n    }           \n    \n    \n    uploadFirstChunk = async (chunk, count, file, id) => {\n        try {\n            const form = new FormData()\n            form.append('id', id)\n            form.append('chunk', chunk)\n            form.append('chunk_size', chunk.size)\n            form.append('counter', count)\n            form.append('filename', file.file_guid)\n            form.append('file_size', file.file_size)\n            form.append('origin_name', file.origin_name)\n            form.append('extension', file.file_data.name.split('.').slice(-1)[0])\n           \n            const response = await api.start_chunk_upload(form).then(res=>{\n                return res.data.isSuccess\n            })\n            return response\n\n        }catch (error) {\n            //debugger\n            console.log('error', error)\n            return false\n        }\n    }\n\n    \n\n    uploadChunks = async (chunk, count, file, id) => {\n        try {\n            const form = new FormData()\n            form.append('id', id)\n            form.append('chunk', chunk)\n            form.append('chunk_size', chunk.size)\n            form.append('counter', count)\n            form.append('filename', file.file_guid)\n\n           \n            const response =  await api.insertfile(form).then(res=>{\n                return res.data.isSuccess\n            })\n            return response\n            \n        }catch (error) {\n            //debugger\n            console.log('error', error)\n            return false\n        }\n    }\n\n\n    \n    uploadCompleted = async (id) => {\n        if(this.state.fileLoopBreak){\n            this.setState({fileLoopBreak: false})\n            return\n        }\n        const response = await api.upload_detail(id)\n        const data = response.data;\n        if (data.isSuccess) {\n            if(data.link){\n                const download_link =  data.link\n                if (typeof window !== 'undefined') {\n                    const path = window.location.protocol + '//' + window.location.host +'/'+  download_link; \n                    //console.log('show download link ', download_link)\n                    this.setState({upload_success: true, link: path, isLink: true})\n                }\n            }\n            if(data.email){\n                const sended_mail =  data.email\n                console.log('show download email', sended_mail)\n                this.setState({upload_success: true, mailConfirm: sended_mail, isLink: false})\n            }\n            // finish Upload\n            //setTimeout(()=>this.resetUpload(), 2000)\n            this.resetUpload()\n            this.setState({upload_success: true})\n        }\n    }\n    \n      \n\n\n    \n\n    // removed item from list \n    // .file_guid = uuid name from upload file\n    // stste new list \n    removeItem = (uploadFile)=>{\n        let full_size = this.state.full_size\n        full_size = full_size - uploadFile.file_size\n        const fileList = this.state.files\n        const removed_list = fileList.filter(file=>{ \n            if(file.file_guid != uploadFile.file_guid){\n               return file\n           }\n        })\n        this.setState({files: removed_list, full_size, progress: 0})\n\n    }\n\n    send = (infos)=>{\n        const {files} = this.state\n        //console.log(infos, ' => infos')\n        //console.log(files, ' => files')\n        //console.log(this.state, ' => state')\n        const countOfFiles = files.map(file=>{\n            return file.chunk_count\n        })\n        const allChunkCounts = countOfFiles.reduce((a, b) => a + b, 0)\n        console.log(allChunkCounts, ' full counts')\n        this.setState({openSendView: false, showProgress: true, infos}, ()=>{\n            this.createMajor(files, infos)\n        })\n        \n        \n    }\n\n    \n    \n\n    \n  \n  \n    // if file in Upload list\n    // show button to open send menu\n    readyToSend = ()=>{\n        return(\n            <div className='ready_to_send_div'> \n                <button className='start_upload_btn' hidden={this.state.openSendView} onClick={()=>this.setState({openSendView: true})}>senden</button>\n            </div>\n        )\n    }\n\n    \n\n    bottomView = (files)=>{\n        const {full_size, upload_success} = this.state\n        const upload_size = 'gesamt '+ roundFileSize(full_size)\n        if(upload_success){\n            return(\n                <div className='div_input_upload' onClick={()=>this.newUpload()}>\n                    <label className='label_input_upload'>\n                        <VscDiffAdded size={50} color={colors.black}/>\n                    </label>\n                    <div className='text_input_upload'>hinzufügen von Dateien</div>\n                </div>\n            )\n        }else{\n            const show_text = files.length>0 ? upload_size : 'hinzufügen von Dateien'\n            return(\n                <div className='div_input_upload'>\n                    <label className='label_input_upload'>\n                        <input  className='input_upload'   type='file' multiple onChange={this.getFileContext} />\n                        <VscDiffAdded size={50} color={colors.black}/>\n                    </label>\n                    <div className='text_input_upload_size'>{show_text}</div>\n                    {files.length>0 ? this.readyToSend() : null}\n                    <div className='rodal_div' >\n                        <Modal\n                            style={customStyles}\n                            isOpen={this.state.openSendView} \n                            onRequestClose={()=>this.setState({openSendView: false})}\n                            ariaHideApp={false}\n                \n                        >\n                            <SendView \n                                open={this.state.openSendView} \n                                close={()=>this.setState({openSendView: false})} \n                                infos={(infos)=>this.send(infos)} \n                                mobile={this.props.mobile} \n                                newOpen={()=>this.setState({openSendView: true})}\n                            />\n                        </Modal>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    \n\n\n    render(){\n        const {showProgress, files, progress,  link, upload_success, mailConfirm, isLink} = this.state\n            return (\n                \n                <div className='frame_input_upload'>\n                    {!showProgress?\n                        this.bottomView(files)\n                        :\n                        <div>{!showProgress? null: <ProgressBar counter={progress}  cancel={()=>this.uploadCancel()} bgcolor={colors.accentColor}/>}</div>\n                    }\n                    {files.length>0 ? <div className='upload_list'><Itemlist items={files} removeItem={(e)=>this.removeItem(e)}/></div> : null}\n                    {upload_success ? <div className='upload_finish'><FinishView link={link} mailConfirm={mailConfirm} isLink={isLink} /></div> : null}\n                    \n                </div>\n            )\n    }\n      \n    \n  \n  \n  }\n\n\n","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash } from \"react-icons/vsc\";\n\n\n\n\n\nexport default class Item extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n            filename: '',\n\n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n  \n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const item =  this.props.item\n        return(\n            <div className='download_item_frame'>\n                <div className='download_item_icon_div'>\n                    <div className='download_item_icon'><VscFile size={30}/></div>\n                </div>\n                <div className='download_item_name_div'>\n                    <div className='download_item_name'>{item.origin_name}</div>\n                </div>\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport Item from './item'\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"list_item\">{props.value}</div>\n            </div>);\n}\n\nexport default class DownloadFileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      //console.log(prevProps, '   prevprps')\n      if(this.props.items.length !== prevProps.items.length){\n        console.log('items length änderung')\n      }\n    }\n\n    create_list=()=>{\n        const lines = [] \n        this.props.items.forEach(item => {\n            lines.push(\n              <Item \n                item={item}\n\n                />\n              )\n        });\n\n\n\n\n        const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item) } />);\n        return listItems; \n\n        \n    }\n  \n  \n  \n    render(){\n      return (\n        <div className='File_list_frame'>{this.create_list()}</div>\n      )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\n\n\n\nexport default class DownloadFileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          backcolor: 'transparent'\n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    /*\n    setBackground = ()=>{\n      const color = this.state.backcolor = 'transparent' ? 'white' : 'transparent'\n      this.setState({backcolor: color})\n    }\n    */\n  \n  \n  \n    render(){\n      return (\n        <div className='download_mess_frame' >{this.props.message}</div>\n      )\n    }\n      \n    \n  \n  \n  }","import Swal from 'sweetalert2'\nimport colors from './../colors'\nimport { renderToString } from 'react-dom/server'\nimport roundFileSize from '../helpers/roundFileSze';\n\n\nconst htmlLayout = (infos)=>{\n  const { mail_to, mail_user, date, use_download, use_link, files } = infos\n  let _size = 0\n  for (const file of files) {\n    _size = _size + file.file_size\n  };\n  const upload_size = 'gesamt '+ roundFileSize(_size)\n  const options = { weekday: 'long', year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric' };\n  const ds = new Date(date)\n  const is_mail = mail_user ? mail_user : 'keine Angabe'\n  const is_mail_to = mail_to === [''] ? mail_to : 'keine Angabe'\n  const is_use_download = use_download ? 'einmailger Download': 'upload wird nach 12 Std gelöscht'\n  const is_use_link = use_link ? 'upload-Link' : 'E-mail Benachrichtung'\n  return(\n    <div >\n        <div style={{fontWeight: '600',height: '1.5em'}}> Erstellt: <span style={{fontWeight: '300'}}> {ds.toLocaleDateString(\"de-DE\", options)}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Dateigröße: <span style={{fontWeight: '300'}}> {upload_size}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Absender: <span style={{fontWeight: '300'}}> {is_mail}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Empfänger: <span style={{fontWeight: '300'}}> {is_mail_to}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Speicher Option: <span style={{fontWeight: '300'}}> {is_use_download}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Übermittlungsart: <span style={{fontWeight: '300'}}> {is_use_link}</span></div>\n    </div>\n  )\n}\n\n\n//background: rgba(187, 187, 187, 0.886);\nconst infoView = (title, text, cancelBtn, okBtnText, cancelBtnText)=>{\n\n    // Alert POP UP\n    //\n    const e = Swal.fire({\n        background: 'rgba(187, 187, 187, 0.886)',\n        title: title,\n        html: text,\n        icon: 'info',\n        showCancelButton: cancelBtn,\n        cancelButtonColor: colors.red,\n        confirmButtonColor: colors.highBlue,\n        confirmButtonText: okBtnText,\n        cancelButtonText: cancelBtnText\n      }).then((result) => {\n        if (result.isConfirmed) {\n            return true\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n            return false\n        }\n      })\n      return e\n}\n\n\nexport const  downloadInfoView = async(infos)=>{\n  const title = 'Upload Infos'\n  const cancelBoolean = false\n  const okBtnText = 'Ok'\n  let htmlText = renderToString(htmlLayout(infos))\n  let answer =  await infoView(title, htmlText, cancelBoolean,okBtnText, null) // alert View\n  if(answer){\n      return\n      }\n\n  \n\n}","\n\nimport React from 'react';\nimport './index.css'\nimport api from './../api'\nimport ProgressBar from './../progressbar'\nimport colors from './../colors'\nimport DownloadFileList from './downloadFileList'\nimport DownloadMessageView from './downloadMessView'\nimport { VscArrowDown, VscInfo, VscCheck } from \"react-icons/vsc\";\nimport { downloadInfoView} from '../infoViews';\n\n\n\n\n\n\nexport default class DownloadView extends React.Component{\n\n  constructor(props){\n      super(props);\n      this.state={    \n         counter: 1,\n         showProgress: false,\n         files: [],\n         majorInfo: {},\n         message: '',\n         isContent:false,\n         link:this.props.match.params.id,\n         complete: false,\n         openInfoView: false\n\n\n      }\n  }\n  componentDidMount(){\n    console.log(' DOWNLOAD VIEW ')\n    const link = this.props.match.params.id\n    this.checkLink(link)\n\n  }\n\n  \n\n  infoView = async()=>{\n    const { mail_to, mail_user, date, use_download, use_link } = this.state.majorInfo\n    const {files} = this.state\n    const infos = {mail_to, mail_user, date, use_download, use_link, files }\n    let answer =  await downloadInfoView(infos) // alert View\n    if(answer){\n        return\n        }\n\n    \n\n}\n\n  checkLink = async(link)=>{\n    await api.is_major_detail(link).then(res=>{\n      if(res.data.isSuccess){\n        const data = res.data\n        this.setState({isContent: true, files: data.fileList, message: data.message, majorInfo: data.majorInfo})\n        console.log(res.data)\n      }\n    })\n  }\n\n\n\n  deleteBucket=async()=>{\n    const {link} = this.state\n    await api.download_delete_detail(link).then(res=>{\n      if(res){\n        this.setState({showProgress: false, })\n      }\n\n    })\n  }\n\n  \n\n  \n\n\n\n  file_loop = async () => {\n    const {files} = this.state\n\n    for (const file of files) {\n        console.log(file)\n        await this.downloadFiles(file)\n       \n    }\n    this.deleteBucket()\n    \n  } \n\n\n  downloadFiles = async(file)=>{ \n    const isLocal = window.location.hostname=='localhost'\n    const _url = isLocal? 'http://127.0.0.1:8000/transmit/' :  process.env.REACT_APP_API_BASE_URL\n    const autori = isLocal? 'local' : process.env.REACT_APP_AUTORI\n    const {origin_name, filename } = file\n    this.setState({showProgress:true})\n    const configDownload = {\n      responseType: 'arraybuffer',\n      onDownloadProgress:(progressEvent)=> {\n        const percentage = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n        this.setState({counter: percentage})\n      },\n      url: _url + 'download/' + filename,\n      method: 'get',\n      headers:{\n        'Authorization': `${autori}`,\n      }\n      \n    }\n    const empty_ext = ''\n    await api.download_stream(origin_name, empty_ext, configDownload).then(res=>{\n      this.removeItem(file)\n\n    })\n  }\n\n  removeItem = (item)=>{\n    const fileList = this.state.files\n    const removed_list = fileList.filter(file=>{ \n        if(file.filename != item.filename){\n           return file\n       }else{\n           console.log('gefunden !!!!')\n       }\n    })\n    this.setState({files: removed_list})\n\n  }\n\n  messageView = ()=>{\n    const {message} = this.state\n    return(\n        <div>\n        {message.length>0 ? \n          <div className='download_message_view'>\n            <div className='download_message_text'> Eine Nachricht für dich </div>\n            <DownloadMessageView message={message} />\n          </div>\n          : null}\n        </div>\n            \n    )\n  }\n\n\n\n\n  infoBtnView = ()=>{\n    return (\n      <div className= 'download_info_btn_div' onClick={()=>this.infoView()}><VscInfo size={30} color={colors.black}/></div>\n    )\n  }\n\n  \n\n  changeDownloadView =()=>{\n    const complete = this.state.counter === 100\n    return(\n      <div>\n      {!complete?\n        <div className='div_input_upload'>\n            <div className='download_icon_div' onClick={()=>this.file_loop()}><VscArrowDown size={35} color={colors.black}/></div>\n            <div className='text_input_upload'>starte den download</div>\n            {this.infoBtnView()}\n        </div>\n        :\n        <div className='div_input_upload'>\n          <div className='download_icon_div' ><VscCheck size={35} color={colors.black}/></div>\n          <div className='text_input_upload'>download complete</div>\n        </div>\n      }\n      </div>\n    )\n  }\n\n  \n\n\n  render(){\n    const {isContent, showProgress, counter, files} = this.state\n    if(isContent){\n      return (\n        <div className='frame_input_upload' >\n          {!showProgress?\n            this.changeDownloadView():<div>{!showProgress? null: <ProgressBar counter={counter} bgcolor={colors.accentColor}/>}</div>\n          }\n          {files.length>0 ? <div className='download_list_view'>{this.messageView()}<DownloadFileList items={files} /></div> : null}\n          \n        </div>\n      );\n    }else{\n      return (\n        <div className='frame_input_upload' >\n            <div className='div_input_upload'>\n              <div className='text_input_upload_NO_CONTENT'>NO CONTENT</div>\n            </div>\n        </div>\n      );\n    }\n    \n  }\n}\n\n","export default __webpack_public_path__ + \"static/media/AIR_1024px.e442824d.png\";","import React, {Suspense} from 'react'\nimport {useImage} from 'react-image'\n \nfunction MyImageComponent() {\n    const _width = window.screen.width\n    const _height = window.screen.height\n    //console.log( 'w . ', _width, ' h . ', _height)\n    \n    const {src} = useImage({\n        srcList: `https://picsum.photos/${_width}/${_height}?random=1`,\n    })\n\n    \n    return <img src={src} />\n}\n \nexport default function Appbackground() {\n  return (\n    <Suspense fallback={<div style={{height: '100%', width:'100%', background:'rgba(187, 187, 187, 0.486)'}}></div>}>\n      <MyImageComponent />\n    </Suspense>\n  )\n}","import React from 'react';\nimport './App.css';\nimport { Route, Switch} from 'react-router-dom';\nimport UploadView from './uploadView'\nimport DownloadView from './downloadView'\nimport { VscThreeBars } from \"react-icons/vsc\";\nimport colors from './colors'\nimport air from './AIR_1024px.png'\nimport Bg from './background'\nimport api from './api'\n\n\n\nconst Beta = <div className='open_beta'>open beta</div>\n\n\n\n\nexport default class App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      mobile: false,\n      height: '',\n      backend: false,\n    }\n      \n\n    }\n  \n  componentDidMount(){\n    this.createPing()\n    window.addEventListener(\"resize\", this.updateWindowDimensions());\n    this.setState({height: window.innerHeight + \"px\"})\n  }\n\n  \n\n  updateWindowDimensions() {\n    const mobile = window.innerWidth<=600\n    document.documentElement.style.setProperty('--vh', `${window.innerHeight/100}px`);\n    this.setState({ mobile: mobile});\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  createPing = async()=>{\n    await api.create_ping().then(res=>{\n      if(res.data.is === 'pong'){\n        this.setState({backend: true})\n      }\n    })\n  }\n\n\n  routing = ()=> {\n    return (\n        <Switch>\n          <Route exact path=\"/\" render={(props) => (\n              <UploadView {...props} mobile={this.state.mobile} backend={this.state.backend} />\n              )}></Route>\n          <Route  path=\"/:id\" render={(props) => (\n              <DownloadView {...props} mobile={this.state.mobile} backend={this.state.backend} />\n              )}></Route>\n        </Switch> \n    );\n  }\n\n\n  \n\n  \n  render(){\n    return (\n      <div className='app_window' style={{height: this.state.height}}>\n        <div className='head_view'>\n          <div className='title'><img  className='air_icon' src={air} alt=\"Logo\"/> AIR channel{Beta}</div>\n          <div className='menu'>\n            <div className='menu_icon'><VscThreeBars size={30} color={colors.white}/> </div></div>\n        </div>\n        <div className='unkown_view'><Bg/></div>\n        <div className='actions_view'>{this.routing()}</div>\n      </div>\n    );\n  }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}