{"version":3,"sources":["api/index.js","colors/index.js","progressbar/index.js","uploadView/uploadFileList/item.js","uploadView/uploadFileList/index.js","uploadView/uploadFinishView/index.js","alertViews/index.js","sendView/index.js","helpers/roundFileSze.js","uploadView/index.js","downloadView/downloadFileList/item.js","downloadView/downloadFileList/index.js","downloadView/downloadMessView/index.js","infoViews/index.js","downloadView/index.js","AIR_1024px.png","background/index.js","App.js","index.js"],"names":["axios","defaults","xsrfHeaderName","xsrfCookieName","is_local","window","location","hostname","_url","process","configPing","headers","configForm_","api","create","baseURL","apis","upload_detail","id","get","download_delete_detail","sender","delete","create_major","form","post","is_major_detail","download_stream","downFileName","extensionName","config","AxiosStream","download","is_mail_detail","mail","insertfile","create_ping","color","highBlue","grey","pink","green","orange","white","black","accentColor","olive","lila","red","pastellgreen","yellow","grey_blue","background1","background2","background3","background_white","ProgressBar","props","bgcolor","counter","fillerStyles","height","width","borderRadius","backgroundColor","colors","style","position","display","justifyContent","alignItems","fontWeight","marginRight","Math","round","Item","state","filename","item","this","className","size","origin_name","onClick","removeItem","React","Component","ListItem","value","FileList","create_list","lines","items","forEach","push","e","map","indexOf","prevProps","console","log","length","place","type","effect","condition","setState","data-for","data-tip","data-event","navigator","clipboard","writeText","link","globalEventOff","afterShow","alertView","title","text","cancelBtn","okBtnText","cancelBtnText","Swal","fire","background","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","dismiss","DismissReason","cancel","ViewText","reset_state","useUserMail","useLink","useMail","useDownload","handleInput","target","name","handleMail","event","used","is_used","send_option","handleDownload","download_option","radioSwitchMail","FormControl","FormLabel","RadioGroup","onChange","FormControlLabel","control","Radio","label","useLinkOrMail","mail_user","mail_to","radioSwitchDownload","downloadOptionText","send_info","a","message","titel","cancelBoolean","close","newOpen","res","data","isSuccess","infos","visible","wrapper","createRef","open","mobile","placeholder","rows","blue","roundFileSize","kb_size","mb_size","customStyles","content","top","left","right","bottom","transform","border","CHUNK_SIZE","UploadView","hide","openSendView","resetChunkProperties","showProgress","progress","beginingOfTheChunk","endOfTheChunk","resetUpload","newFileUpload","upload_success","use_link","use_email","getFileContext","files","file_arr","Array","from","full_count","full_size","file","_file","_totalCount","floor","_fileID","uuidv4","file_json","file_size","file_guid","chunk_count","file_data","file_loop","FormData","append","majorId","chunk_loop","chunk_size_start","chunk_test","count","chunk","slice","uploadChunks","split","response","uploadCompleted","percentage","errorMessage","fileGuid","download_link","path","protocol","host","email","sended_mail","uploadFile","removed_list","filter","send","allChunkCounts","reduce","b","readyToSend","hidden","bottomView","upload_size","show_text","multiple","isOpen","onRequestClose","ariaHideApp","return","DownloadFileList","backcolor","infoView","html","DownloadView","htmlText","majorInfo","date","use_download","_size","ds","Date","is_mail","is_mail_to","is_use_download","is_use_link","toLocaleDateString","weekday","year","month","day","hour","renderToString","checkLink","isContent","fileList","deleteBucket","downloadFiles","isLocal","autori","configDownload","responseType","onDownloadProgress","progressEvent","loaded","total","url","method","messageView","infoBtnView","changeDownloadView","complete","match","params","openInfoView","MyImageComponent","_width","screen","_height","src","useImage","srcList","Appbackground","fallback","Beta","App","createPing","backend","routing","exact","render","addEventListener","updateWindowDimensions","innerHeight","innerWidth","document","documentElement","setProperty","removeEventListener","air","alt","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.15d66691.chunk.js","sourcesContent":["\n\n/*\n.catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\n  \n*/\n\n\nimport axios from 'axios'\nimport AxiosStream from \"axios-stream\";\n\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\nconst is_local = window.location.hostname ==='localhost'\n\nconst hostUrl = process.env.REACT_APP_API_BASE_URL \nconst autori = is_local? 'local' : process.env.REACT_APP_AUTORI\nconst _url = is_local? 'http://127.0.0.1:8000/transmit/' : hostUrl \n\n\n\nconst configPing = {\n  headers: { \n    'Content-Type': 'multipart/form-data;boundary=boundary',\n    'Accept': 'application/json;text/plain'\n  }\n}\n\nconst configForm_ = {\n  headers: { \n    'Authorization': `${autori}`,\n    'Content-Type': 'multipart/form-data;boundary=boundary',\n    'Accept': 'application/json;text/plain'\n  }\n}\n\n\n\n\n\nconst api = axios.create({\n    baseURL: _url\n\n})\n\nexport const create_ping = () => api.get(`ping/`, configPing)\n\nexport const create_major = form => api.post(`major/`, form, configForm_)\nexport const is_major_detail = sender => api.get(`major/${sender}`, configForm_)\n\nexport const insertfile = form => api.post(`upload/`,form , configForm_)\nexport const get_Item = form => api.get(`upload/`, form, configForm_)\nexport const upload_detail = id => api.get(`upload/${id}`, configForm_)\n\nexport const download_delete_detail = sender => api.delete(`remove/${sender}`, configForm_)\nexport const is_mail_detail = mail => api.get(`mailvali/${mail}`, configForm_)\n\nexport const download_stream = (downFileName,extensionName, config) => AxiosStream.download(downFileName, extensionName, config);\n\n\n\n\n\nconst apis = {\n  upload_detail,\n  download_delete_detail,\n  create_major,\n  is_major_detail,\n  download_stream,\n  is_mail_detail,\n  insertfile,\n  create_ping\n\n    \n}\n\n\nexport default apis","\n \n// colors\nconst highBlue = '#5ba3c7'\nconst grey = '#f0f0f0'\nconst pink = '#e8c8c8'\nconst green = '#a3c49f'\nconst orange = '#ebd7b7'\nconst white = '#ffffff'\nconst black = '#212121'\nconst olive = '#c4d184'\nconst lila = '#9397d9'\nconst red = '#d993a0'\nconst pastellgreen = '#98b8a7'\nconst yellow = '#f0df48'\nconst cosmos_grey = '#353535'\n//const accentColor =  '#ff757e' \nconst accentColor =  '#62bce3'//  '#819cdb'//'#84c4ba' \nconst background1 = '#505a66'\nconst background2 = '#404954'\nconst background3 = '#606b78'\nconst background_white = 'rgba(187, 187, 187, 0.886)'\nconst beige = '#baaea2'\nconst grey_blue = '#505a66'\nconst color = {\n    highBlue, \n    grey, \n    pink, \n    green, \n    orange, \n    white, \n    black, \n    accentColor, \n    olive, \n    lila, \n    red, \n    pastellgreen, \n    yellow , \n    grey_blue,\n    background1,\n    background2,\n    background3,\n    background_white\n} \n\nexport default color\n","\n/*\n\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n    */\n\nimport colors from './../colors'\nconst ProgressBar = (props) => {\n    const { bgcolor, counter } = props;\n  \n    const containerStyles = {\n      //position: 'absolute',\n      height: '6vh',\n      width: '90%',\n      backgroundColor: \"rgba(255, 255, 255, 0.512)\",\n      borderRadius: '3vh',\n      \n    }\n  \n    const fillerStyles = {\n      height: '100%',\n      width: `${counter}%`,\n      borderRadius: '3vh',\n      backgroundColor: colors.black,\n    }\n  \n    const labelStyles = {\n      color: 'white',\n      height: '100%',\n      fontWeight: 'bold',\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      marginRight: '10px'\n    }\n    \n    const progressDiv = {\n      position: 'absolute',\n      height: '100%',\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }\n \n\n\n\n    return (\n      <div style={progressDiv}>\n        <div style={containerStyles}>\n          <div style={fillerStyles}>\n            <span style={labelStyles}>{`${Math.round(counter)} %`}</span>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  export default ProgressBar;","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash } from \"react-icons/vsc\";\n\n\n\n\n\nexport default class Item extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n            filename: '',\n\n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n  \n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const item =  this.props.item\n\n        return(\n            <div className='download_item_frame'>\n                <div className='item_icon_div'>\n                    <div className='item_icon'><VscFile size={30}/></div>\n                </div>\n                <div className='item_name_div'>\n                    <div className='item_name'>{item.origin_name}</div>\n                </div>\n                <div className='item_remove_div'>\n                    <button className='item_remove' onClick={()=>this.props.removeItem(item)}><VscTrash size ={18}/></button>\n                </div>\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport Item from './item'\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"list_item\">{props.value}</div>\n            </div>);\n}\n\nexport default class FileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      console.log(prevProps, '   prevprps')\n      if(this.props.items.length !== prevProps.items.length){\n        console.log('items length änderung')\n      }\n    }\n\n    create_list=()=>{\n        const lines = [] \n        this.props.items.forEach(item => {\n            lines.push(\n              <Item \n                item={item}\n                removeItem={(e)=>this.props.removeItem(e)}\n\n                />\n              )\n        });\n\n\n\n\n        const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item) } />);\n        return listItems; \n\n        \n    }\n  \n  \n  \n    render(){\n      return (\n        <div className='File_list_frame'>{this.create_list()}</div>\n      )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport ReactTooltip from \"react-tooltip\";\n\n\nexport default class FileList extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      place: \"top\",\n      type: \"dark\",\n      effect: \"float\",\n      condition: false\n    };\n  }\n\n  changePlace(place) {\n    this.setState({\n      place: place\n    });\n  }\n\n  changeType(type) {\n    this.setState({\n      type: type\n    });\n  }\n\n  changeEffect(effect) {\n    this.setState({\n      effect: effect\n    });\n  }\n\n  _onClick() {\n    this.setState({\n      condition: true\n    });\n  }\n\n  \n  \n\n\n\n\n\n\n  \n  \n  render(){\n    return (\n        <div className='view_finish'>\n          <div className='div_link'>\n            <div className='link_text'> hier ist der link zum kopieren</div>\n            <a className='link_copy'\n                  data-for=\"custom-event\"\n                  data-tip=\"link wurde kopiert\"\n                  data-event=\"click focus\"\n                  onClick={() => {navigator.clipboard.writeText(this.props.link)}}\n                >\n                  {this.props.link}\n                </a>\n                <ReactTooltip id=\"custom-event\" place=\"right\" effect=\"solid\" globalEventOff=\"click\" afterShow={()=>{navigator.clipboard.writeText(this.props.link)}} />\n                <div className='link_text_2'>der download ist 24 Stunden lang gültig</div>\n                <div className='link_text_2'>alle Daten werden nach ablauf unwiederuflich gelöscht</div>\n          </div>\n        </div>\n    )\n  }\n    \n  \n  \n  }","import Swal from 'sweetalert2'\nimport colors from './../colors'\n\n\n\n\n\n\n//background: rgba(187, 187, 187, 0.886);\nexport const alertView = (title, text, cancelBtn, okBtnText, cancelBtnText)=>{\n\n    // Alert POP UP\n    //\n    const e = Swal.fire({\n        background: 'rgba(187, 187, 187, 0.886)',\n        title: title,\n        text: text,\n        icon: 'warning',\n        showCancelButton: cancelBtn,\n        cancelButtonColor: colors.red,\n        confirmButtonColor: colors.highBlue,\n        confirmButtonText: okBtnText,\n        cancelButtonText: cancelBtnText\n      }).then((result) => {\n        if (result.isConfirmed) {\n            return true\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n            return false\n        }\n      })\n      return e\n}","import React from 'react';\nimport './index.css';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { alertView } from '../alertViews';\nimport api from './../api'\nimport { colors } from '@material-ui/core';\n\n\nconst placeholder = ' schreibe eine Nachricht an den Empfänger...'\n\n\n\n\n\nexport class ViewText extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            useLink: true,\n            useDownload: true,\n            message: '',\n            mail_user: '',\n            mail_to: '',\n            send_option:'link',\n            download_option: 'einmalig',\n            visible: true\n\n        }\n        this.wrapper = React.createRef();\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.open !== prevProps.open) {\n            this.reset_state()\n        }\n    }\n\n    reset_state = () => {\n        this.setState({\n            useUserMail: false,\n            useLink: true,\n            useMail: false,\n            useDownload: true\n        })\n    }\n\n    handleInput = ({ target }) => {\n        this.setState({ [target.name]: target.value })\n\n        \n    }\n\n    handleMail = (event) => {\n        const used = event.target.value\n        const is_used = used == 'mail'? false : true\n        this.setState({send_option: used, useLink: is_used});\n    };\n\n    handleDownload = (event) => {\n        const used = event.target.value\n        const is_used = used == '12'? false : true\n        console.log('radio ', used, '  is ', is_used)\n        this.setState({download_option: used, useDownload: is_used});\n    };\n    \n\n\n\n\n\n\n\n\n\n\n\n    radioSwitchMail = ()=>{\n        return(\n            <div className='send_view_change_zone_div'>\n                <div className='send_view_radio_div'>\n                    <FormControl >\n                        <FormLabel className='send_view_formlabel'>Übermittlungsart</FormLabel>\n                        <RadioGroup  value={this.state.send_option} onChange={this.handleMail}>\n                            <FormControlLabel value=\"link\" control={<Radio color=\"default\"/>} label=\"Link\" />\n                            <FormControlLabel value=\"mail\" control={<Radio color=\"default\"/>} label=\"Link per mail\" />\n                        </RadioGroup>\n                    </FormControl>\n                </div>\n                {this.useLinkOrMail()}\n            </div>\n        )\n    }\n\n    useLinkOrMail = () => {\n        const { send_option } = this.state\n        switch(send_option){\n            case 'mail':\n                return (\n                    <div className='send_view_show_options'>\n                        <div className='send_view_div_input'>E-mail des Absenders:\n                            <input className='send_view_input' type='email' name='mail_user' value={this.state.mail_user} onChange={this.handleInput}></input>\n                        </div>\n                        <div className='send_view_div_input'>E-mail des Empfänger:\n                            <input className='send_view_input' type='email' name='mail_to' value={this.state.mail_to} onChange={this.handleInput}></input>\n                        </div>\n                        \n                    </div>\n                )\n            case 'link':\n                return (\n                    <div className='send_view_show_options'>\n                        <div className='send_view_div'>\n                            <div className='send_view_div_linktext'>Erhalte einen Link nach dem Upload</div>\n                        </div>\n                    </div>\n                )\n        }\n    }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    radioSwitchDownload = ()=>{\n        return(\n            <div className='send_view_change_zone_div'>\n                <div className='send_view_radio_div'>\n                    <FormControl >\n                        <FormLabel className='send_view_formlabel'>Download</FormLabel>\n                        <RadioGroup  value={this.state.download_option} onChange={this.handleDownload}>\n                            <FormControlLabel value=\"einmalig\" control={<Radio color=\"default\"  />} label=\"einmaliger Download\" />\n                            <FormControlLabel value=\"12\" control={<Radio color=\"default\"/>} label=\"innerhalb 12 Stunden\" />\n                        </RadioGroup>\n                    </FormControl>\n                </div>\n                {this.downloadOptionText()}\n            </div>\n        )\n    }\n\n    downloadOptionText = () => {\n        const { download_option } = this.state\n        switch(download_option){\n            case '12':\n                return (\n                    <div className='sendview_info_text'> \"Dein Upload wird 12 Stunden gespeichert, er steht so oft und zur jeder Zeit zum Download bereit\"</div>\n                )\n            case 'einmalig':\n                return (\n                    <div className='sendview_info_text'> \"Nach dem erstem Dowload werden alle Daten der Übertragung gelöscht, kein weiter Download mehr möglich. Automatisch wird dein Upload nach 7 Tagen gelöscht!\"</div>\n                )\n        }\n    }\n\n    send_info = async()=>{\n        const { mail_to, mail_user, message, useDownload, send_option, useLink  } = this.state\n        const titel = 'E-mail exestiert nicht'\n        const cancelBoolean = false\n        const okBtnText = 'Ok'\n\n        \n        // sending option => use mail\n        if(send_option === 'mail'){\n\n            // validate.... no input im E-mail field\n            if(!mail_user || !mail_to){\n                this.props.close()\n                let text = 'Pflichtfelder sind nicht ausgefüllt !'\n                const new_title = 'keine Eingabe'\n                let answer =  await alertView(new_title, text, cancelBoolean,okBtnText, null) // alert View\n                if(answer){\n                    this.props.newOpen()\n                    return\n                }\n            }\n            // validate.... e-mail Absender\n            const is_mail_user = await api.is_mail_detail(mail_user).then(res=>{return res.data.isSuccess})\n            if(!is_mail_user){\n                this.props.close()\n                let text = 'bitte überprüfen deine    Absender    Adresse'\n                let answer =  await alertView(titel, text, cancelBoolean,okBtnText, null) // alert View\n                if(answer){\n                    this.props.newOpen()\n                    return\n                }\n            }\n            // validate.... e-mail Empfänger\n            const is_mail_to = await api.is_mail_detail(mail_to).then(res=>{return res.data.isSuccess})\n            if(!is_mail_to){\n                this.props.close()\n                let text = 'bitte überprüfen deine   Empfänger   Adresse'\n                let answer =  await alertView(titel, text, cancelBoolean,okBtnText, null) // alert View\n                if(answer){\n                    this.props.newOpen()\n                    return\n                }\n            }\n        }\n\n        \n        this.props.infos({ mail_user, mail_to, message, useDownload, useLink })\n\n    }\n\n\n    hide() {\n        this.setState({ visible: false });\n    }\n    \n\n    render() {\n        \n        return (\n            <div className={this.props.mobile?'send_view_dialog_mobile':'send_view_dialog'}>\n                <div className={this.props.mobile?'send_view_frame_mobile':'send_view_frame_mobile'}>\n                    <div className='send_view_title_div'>\n                        Datenübertragung\n                    </div>\n                    <div className='send_view_change_zone'>{this.radioSwitchDownload()}</div>\n                    <div className='send_view_change_zone'>{this.radioSwitchMail()}</div>\n                    <div className='send_view_div'>\n                        <textarea className='send_view_message' placeholder={placeholder} rows={6} type='text' name='message' value={this.state.message} onChange={this.handleInput}></textarea>\n                    </div>\n                    <div className='send_view_btn_div'>\n                        <button className='send_btn' onClick={() => this.props.close()}>abbruch</button>\n                        <button className='send_btn' style={{color: colors.blue}} onClick={() => this.send_info()}>senden</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ViewText;\n\n\n\n","\nexport default function roundFileSize(size){\n    // kilo bytes\n    const kb_size = Math.round(size / 1000) \n    //mega bytes\n    if(kb_size > 1000){\n        const mb_size = Math.round(size / 100000) / 10 \n        // giga bytes\n        if(mb_size > 2000){\n            const gb_size = Math.round(size / 10000000) / 100 \n            return gb_size + '  GB'\n        }\n        return mb_size + '  MB'\n    }\n    return kb_size + '  KB'\n}","\n  \nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './index.css'\nimport api from './../api'\nimport ProgressBar from './../progressbar'\nimport Itemlist from './uploadFileList'\nimport FinishView from './uploadFinishView'\nimport SendView from './../sendView'\nimport colors from './../colors'\nimport { VscDiffAdded } from \"react-icons/vsc\";\nimport { alertView } from '../alertViews';\nimport Modal from 'react-modal';\nimport roundFileSize from '../helpers/roundFileSze';\n\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      border: 'none',\n      borderRadius: '12px'\n    },\n};\n\n\n\n\nconst CHUNK_SIZE = 1048576 * 3;//its 3MB, increase the number measure in mb\n\n\n \nexport default class UploadView extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={ \n            files:[],\n            showProgress: false,\n            counter: 0,\n            full_count: 0,\n            full_size: 0,\n            beginingOfTheChunk: 0,\n            endOfTheChunk: CHUNK_SIZE,\n            progress: 0,\n            openSendView: false,\n            use_link: null,\n            use_email: null,\n            upload_success: false,\n            visible: false\n\n        }\n        \n    }\n\n    hide=()=> {\n        console.log('close')\n        this.setState({openSendView: false})\n        \n    }\n  \n  \n    resetChunkProperties = () => {\n        this.setState({\n            showProgress: true,\n            progress: 0,\n            counter: 0,\n            beginingOfTheChunk: 0,\n            endOfTheChunk: CHUNK_SIZE\n        })\n    }\n    \n\n\n    resetUpload = () => {\n        this.setState({\n            showProgress: false,\n            process: 0,\n            counter: 0,\n            beginingOfTheChunk: 0\n        })\n    }\n    \n    \n    newFileUpload = async()=>{\n\n        // Alert POP UP\n        //\n        const titel = 'Neuer Upload?'\n        const text = 'sind Sie Sicher, Sie haben keine möglichkeit mehr an den Downloadlink zu kommen!'\n        const cancelBoolean = true\n        const okBtnText = 'Ja, ich habe den link kopiert'\n        const cancelBtnText = 'Nein, ich kopiere mir den link nochmal'\n\n        const answer =  await alertView(titel, text, cancelBoolean, okBtnText, cancelBtnText)\n        if(answer){\n            this.setState({\n                upload_success: false, \n                use_link: null,\n                use_email: null\n            })\n        }\n        \n    }\n\n\n    getFileContext = (e) => {\n\n        const files = []\n        const file_arr = Array.from(e.target.files)\n        var full_count = 0\n        var full_size = this.state.full_size\n        file_arr.forEach(file=>{\n            const _file = file;\n            const _totalCount = _file.size % CHUNK_SIZE === 0 ? _file.size / CHUNK_SIZE : Math.floor(_file.size / CHUNK_SIZE) + 1; // Total count of chunks will have been upload to finish the file\n            const _fileID = uuidv4() //+ get_ext(_file.name.split('.'));\n            const file_json = {\n                file_size: _file.size,\n                origin_name: _file.name,\n                file_guid: _fileID,\n                chunk_count: _totalCount,\n                file_data: _file\n            }\n            full_count = full_count + _totalCount\n            full_size = full_size + _file.size\n            files.push(file_json)\n\n            \n        })\n        \n        this.setState({files: [...this.state.files, ...files], full_count: this.state.full_count + full_count, full_size})\n        \n    }\n\n\n\n\n\n\n\n    file_loop = async (files, infos) => {\n\n        const form = new FormData()\n        form.append('mail_to', infos.mail_to)\n        form.append('mail_user', infos.mail_user)\n        form.append('message', infos.message)\n        form.append('use_download', infos.useDownload)\n        form.append('use_link', infos.useLink)\n        //\n        // create Major Model\n        //\n        //\n        //\n        const majorId = await api.create_major(form).then(res=>{\n            //console.log('res => ceate ', res)\n            if(res.data.isSuccess){\n                return res.data.id\n            }else{\n                return null\n            }\n        }) \n        // start loop of  all chunks\n        if (majorId){\n            for (const file of files) {\n                // this file begins\n                await this.chunk_loop(file, majorId)\n               \n            }\n        }\n        \n        \n    }\n\n\n\n\n    chunk_loop = async (file, id) => {\n        var chunk_size_start = 0\n        var chunk_test = 0\n\n        for (var count=1; ; count++ ) {\n\n            var chunk = file.file_data.slice(chunk_size_start, CHUNK_SIZE + chunk_size_start);\n            //\n            chunk_size_start = chunk_size_start + chunk.size\n            chunk_test = chunk_test + chunk.size\n            console.log(chunk_test, '   test')\n            console.log(chunk_size_start, '   chunk size start')\n            console.log(chunk.size, '   chunk size ')\n            await this.uploadChunks(chunk, count, file, id)\n            if(count === file.chunk_count){\n                break\n            }\n        }\n        console.log('loop Done! ==> remove file form list');\n        this.removeItem(file)\n    }            \n            \n    \n\n    \n    uploadChunks = async (chunk, count, file, id) => {\n        console.log('')\n        console.log('NEXT  CHUNK')\n\n        try {\n\n            const form = new FormData()\n            form.append('id', id)\n            form.append('chunk', chunk)\n            form.append('chunk_size', chunk.size)\n            form.append('counter', count)\n            form.append('filename', file.file_guid)\n            form.append('file_size', file.file_size)\n            form.append('origin_name', file.origin_name)\n            form.append('extension', file.file_data.name.split('.').slice(-1)[0])\n           \n            const response = await api.insertfile(form)\n          \n            const data = response.data;\n            if (data.isSuccess){\n                // resCounter = data.counter // file counter\n                this.setState({counter: this.state.counter + 1})\n                // chunk daten sind angekommen\n                if (this.state.counter === this.state.full_count) {\n                    await this.uploadCompleted(id);\n                }else{\n                    var percentage = (this.state.counter / this.state.full_count) * 100;\n                    this.setState({progress: percentage})\n                }\n\n            }else{\n                console.log('Error Occurred:', data.errorMessage)\n                return\n            }\n    \n\n\n        }catch (error) {\n            //debugger\n            console.log('error', error)\n        }\n    }\n    \n    uploadCompleted = async (id) => {\n        var form = new FormData();\n        form.append('filename', this.state.fileGuid);\n        const response = await api.upload_detail(id)\n        const data = response.data;\n        if (data.isSuccess) {\n            if(data.link){\n                const download_link =  data.link\n                if (typeof window !== 'undefined') {\n                    const path = window.location.protocol + '//' + window.location.host +'/'+  download_link; \n                    //console.log('show download link ', download_link)\n                    this.setState({use_link: path})\n                }\n            }\n            if(data.email){\n                const sended_mail =  data.email\n                console.log('show download email', sended_mail)\n                this.setState({use_email:sended_mail})\n            }\n            console.log('')\n            console.log('finish upload')\n            console.log('')\n            //setTimeout(()=>this.resetUpload(), 2000)\n            this.resetUpload()\n            this.setState({progress: 100, upload_success: true})\n        }\n    }\n    \n      \n\n\n    \n\n    // removed item from list \n    // .file_guid = uuid name from upload file\n    // stste new list \n    removeItem = (uploadFile)=>{\n        let full_size = this.state.full_size\n        full_size = full_size - uploadFile.file_size\n        const fileList = this.state.files\n        const removed_list = fileList.filter(file=>{ \n            if(file.file_guid != uploadFile.file_guid){\n               return file\n           }\n        })\n        this.setState({files: removed_list, full_size})\n\n    }\n\n    send = (infos)=>{\n\n        const {files} = this.state\n        //console.log(infos, ' => infos')\n        //console.log(files, ' => files')\n        //console.log(this.state, ' => state')\n        const countOfFiles = files.map(file=>{\n            return file.chunk_count\n        })\n        const allChunkCounts = countOfFiles.reduce((a, b) => a + b, 0)\n        console.log(allChunkCounts, ' full counts')\n        this.file_loop(files, infos)\n        this.setState({openSendView: false, showProgress: true})\n    }\n\n    \n    \n\n    \n  \n  \n    // if file in Upload list\n    // show button to open send menu\n    readyToSend = ()=>{\n        return(\n            <div className='ready_to_send_div'> \n                <button className='start_upload_btn' hidden={this.state.openSendView} onClick={()=>this.setState({openSendView: true})}>senden</button>\n            </div>\n        )\n    }\n\n    \n\n    bottomView = (files)=>{\n        const {full_size, upload_success} = this.state\n        const upload_size = 'gesamt '+ roundFileSize(full_size)\n        if(upload_success){\n            return(\n                <div className='div_input_upload' onClick={()=>this.newFileUpload()}>\n                    <label className='label_input_upload'>\n                        <VscDiffAdded size={50} color={colors.black}/>\n                    </label>\n                    <div className='text_input_upload'>hinzufügen von Dateien</div>\n                </div>\n            )\n        }else{\n            console.log(this.state.openSendView)\n            const show_text = files.length>0 ? upload_size : 'hinzufügen von Dateien'\n            return(\n                <div className='div_input_upload'>\n                    <label className='label_input_upload'>\n                        <input  className='input_upload'   type='file' multiple onChange={this.getFileContext} />\n                        <VscDiffAdded size={50} color={colors.black}/>\n                    </label>\n                    <div className='text_input_upload_size'>{show_text}</div>\n                    {files.length>0 ? this.readyToSend() : null}\n                    <div className='rodal_div' >\n                        <Modal\n                            style={customStyles}\n                            isOpen={this.state.openSendView} \n                            onRequestClose={this.hide}\n                            ariaHideApp={false}\n                \n                        >\n                            <SendView \n                                open={this.state.openSendView} \n                                close={this.hide} \n                                infos={(infos)=>this.send(infos)} \n                                mobile={this.props.mobile} \n                                newOpen={()=>this.setState({openSendView: true})}\n                            />\n                    \n                        </Modal>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    \n\n\n    render(){\n        console.log(CHUNK_SIZE)\n        const {showProgress, files, progress, full_count, use_email, use_link, upload_success, full_size} = this.state\n            return (\n                \n                <div className='frame_input_upload'>\n                    {!showProgress?\n                        this.bottomView(files)\n                        :\n                        <div>{!showProgress? null: <ProgressBar counter={progress} bgcolor={colors.accentColor}/>}</div>\n                    }\n                    {files.length>0 ? <div className='upload_list'><Itemlist items={files} removeItem={(e)=>this.removeItem(e)}/></div> : null}\n                    {use_link ? <div className='upload_finish'><FinishView link={use_link} return={()=>console.log('........wiederholung......')}/></div> : null}\n                    \n                </div>\n            )\n    }\n      \n    \n  \n  \n  }\n\n\n","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash } from \"react-icons/vsc\";\n\n\n\n\n\nexport default class Item extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n            filename: '',\n\n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n  \n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const item =  this.props.item\n        return(\n            <div className='download_item_frame'>\n                <div className='download_item_icon_div'>\n                    <div className='download_item_icon'><VscFile size={30}/></div>\n                </div>\n                <div className='download_item_name_div'>\n                    <div className='download_item_name'>{item.origin_name}</div>\n                </div>\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport Item from './item'\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"list_item\">{props.value}</div>\n            </div>);\n}\n\nexport default class DownloadFileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      //console.log(prevProps, '   prevprps')\n      if(this.props.items.length !== prevProps.items.length){\n        console.log('items length änderung')\n      }\n    }\n\n    create_list=()=>{\n        const lines = [] \n        this.props.items.forEach(item => {\n            lines.push(\n              <Item \n                item={item}\n\n                />\n              )\n        });\n\n\n\n\n        const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item) } />);\n        return listItems; \n\n        \n    }\n  \n  \n  \n    render(){\n      return (\n        <div className='File_list_frame'>{this.create_list()}</div>\n      )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\n\n\n\nexport default class DownloadFileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          backcolor: 'transparent'\n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    /*\n    setBackground = ()=>{\n      const color = this.state.backcolor = 'transparent' ? 'white' : 'transparent'\n      this.setState({backcolor: color})\n    }\n    */\n  \n  \n  \n    render(){\n      return (\n        <div className='download_mess_frame' >{this.props.message}</div>\n      )\n    }\n      \n    \n  \n  \n  }","import Swal from 'sweetalert2'\nimport colors from './../colors'\n\n\n\n\n\n\n//background: rgba(187, 187, 187, 0.886);\nexport const infoView = (title, text, cancelBtn, okBtnText, cancelBtnText)=>{\n\n    // Alert POP UP\n    //\n    const e = Swal.fire({\n        background: 'rgba(187, 187, 187, 0.886)',\n        title: title,\n        html: text,\n        icon: 'info',\n        showCancelButton: cancelBtn,\n        cancelButtonColor: colors.red,\n        confirmButtonColor: colors.highBlue,\n        confirmButtonText: okBtnText,\n        cancelButtonText: cancelBtnText\n      }).then((result) => {\n        if (result.isConfirmed) {\n            return true\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n            return false\n        }\n      })\n      return e\n}","\n\nimport React from 'react';\nimport './index.css'\nimport api from './../api'\nimport ProgressBar from './../progressbar'\nimport colors from './../colors'\nimport DownloadFileList from './downloadFileList'\nimport DownloadMessageView from './downloadMessView'\nimport { VscArrowDown, VscInfo, VscCheck } from \"react-icons/vsc\";\nimport { infoView } from '../infoViews';\nimport { renderToString } from 'react-dom/server'\nimport roundFileSize from '../helpers/roundFileSze';\n\n\n\n\n\nexport default class DownloadView extends React.Component{\n\n  constructor(props){\n      super(props);\n      this.state={    \n         counter: 1,\n         showProgress: false,\n         files: [],\n         majorInfo: {},\n         message: '',\n         isContent:false,\n         link:this.props.match.params.id,\n         complete: false,\n         openInfoView: false\n\n\n      }\n  }\n  componentDidMount(){\n    console.log(' DOWNLOAD VIEW ')\n    const link = this.props.match.params.id\n    this.checkLink(link)\n\n  }\n\n  htmlText = ()=>{\n    const { mail_to, mail_user, date, use_download, use_link } = this.state.majorInfo\n    let _size = 0\n    for (const file of this.state.files) {\n      _size = _size + file.file_size\n    };\n    const upload_size = 'gesamt '+ roundFileSize(_size)\n    const options = { weekday: 'long', year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric' };\n    const ds = new Date(date)\n    const is_mail = mail_user ? mail_user : 'keine Angabe'\n    const is_mail_to = mail_to === [''] ? mail_to : 'keine Angabe'\n    const is_use_download = use_download ? 'einmailger Download': 'upload wird nach 12 Std gelöscht'\n    const is_use_link = use_link ? 'upload-Link' : 'E-mail Benachrichtung'\n    return(\n      <div >\n          <div style={{fontWeight: '600',height: '1.5em'}}> Erstellt: <span style={{fontWeight: '300'}}> {ds.toLocaleDateString(\"de-DE\", options)}</span></div>\n          <div style={{fontWeight: '600',height: '1.5em'}}> Dateigröße: <span style={{fontWeight: '300'}}> {upload_size}</span></div>\n          <div style={{fontWeight: '600',height: '1.5em'}}> Absender: <span style={{fontWeight: '300'}}> {is_mail}</span></div>\n          <div style={{fontWeight: '600',height: '1.5em'}}> Empfänger: <span style={{fontWeight: '300'}}> {is_mail_to}</span></div>\n          <div style={{fontWeight: '600',height: '1.5em'}}> Speicher Option: <span style={{fontWeight: '300'}}> {is_use_download}</span></div>\n          <div style={{fontWeight: '600',height: '1.5em'}}> Übermittlungsart: <span style={{fontWeight: '300'}}> {is_use_link}</span></div>\n      </div>\n    )\n  }\n\n  infoView = async()=>{\n    const title = 'Upload Infos'\n    const cancelBoolean = false\n    const okBtnText = 'Ok'\n    let htmlText = renderToString( this.htmlText())\n    let answer =  await infoView(title, htmlText, cancelBoolean,okBtnText, null) // alert View\n    if(answer){\n        return\n        }\n\n    \n\n}\n\n  checkLink = async(link)=>{\n    await api.is_major_detail(link).then(res=>{\n      if(res.data.isSuccess){\n        const data = res.data\n        this.setState({isContent: true, files: data.fileList, message: data.message, majorInfo: data.majorInfo})\n        console.log(res.data)\n      }\n    })\n  }\n\n\n\n  deleteBucket=async()=>{\n    const {link} = this.state\n    console.log('delete api')\n    await api.download_delete_detail(link).then(res=>{\n      if(res){\n        this.setState({showProgress: false, })\n      }\n\n    })\n  }\n\n  \n\n\n\n  file_loop = async () => {\n    const {files} = this.state\n\n    for (const file of files) {\n        console.log(file)\n        await this.downloadFiles(file)\n       \n    }\n    this.deleteBucket()\n    \n  } \n\n\n  downloadFiles = async(file)=>{ \n    const isLocal = window.location.hostname=='localhost'\n    const _url = isLocal? 'http://127.0.0.1:8000/transmit/' :  process.env.REACT_APP_API_BASE_URL\n    const autori = isLocal? 'local' : process.env.REACT_APP_AUTORI\n    const {origin_name, filename } = file\n    this.setState({showProgress:true})\n    const configDownload = {\n      responseType: 'arraybuffer',\n      onDownloadProgress:(progressEvent)=> {\n        const percentage = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n        this.setState({counter: percentage})\n      },\n      url: _url + 'download/' + filename,\n      method: 'get',\n      headers:{\n        'Authorization': `${autori}`,\n      }\n      \n    }\n    const empty_ext = ''\n    await api.download_stream(origin_name, empty_ext, configDownload).then(res=>{\n      this.removeItem(file)\n\n    })\n  }\n\n  removeItem = (item)=>{\n    const fileList = this.state.files\n    const removed_list = fileList.filter(file=>{ \n        if(file.filename != item.filename){\n           return file\n       }else{\n           console.log('gefunden !!!!')\n       }\n    })\n    this.setState({files: removed_list})\n\n  }\n\n\n  messageView = ()=>{\n    const {message} = this.state\n    return(\n        <div>\n        {message.length>0 ? \n          <div className='download_message_view'>\n            <div className='download_message_text'> Eine Nachricht für dich </div>\n            <DownloadMessageView message={message} />\n          </div>\n          : null}\n        </div>\n            \n    )\n  }\n\n\n\n\n  infoBtnView = ()=>{\n    return (\n      <div className= 'download_info_btn_div' onClick={()=>this.infoView()}><VscInfo size={30} color={colors.black}/></div>\n    )\n  }\n\n  \n\n  changeDownloadView =()=>{\n    const complete = this.state.counter === 100\n    return(\n      <div>\n      {!complete?\n        <div className='div_input_upload'>\n            <div className='download_icon_div' onClick={()=>this.file_loop()}><VscArrowDown size={35} color={colors.black}/></div>\n            <div className='text_input_upload'>starte den download</div>\n            {this.infoBtnView()}\n        </div>\n        :\n        <div className='div_input_upload'>\n          <div className='download_icon_div' ><VscCheck size={35} color={colors.black}/></div>\n          <div className='text_input_upload'>download complete</div>\n        </div>\n      }\n      </div>\n    )\n  }\n\n  \n\n\n  render(){\n    const {isContent, showProgress, counter, files} = this.state\n    if(isContent){\n      return (\n        <div className='frame_input_upload' >\n          {!showProgress?\n            this.changeDownloadView():<div>{!showProgress? null: <ProgressBar counter={counter} bgcolor={colors.accentColor}/>}</div>\n          }\n          {files.length>0 ? <div className='download_list_view'>{this.messageView()}<DownloadFileList items={files} /></div> : null}\n          \n        </div>\n      );\n    }else{\n      return (\n        <div className='frame_input_upload' >\n            <div className='div_input_upload'>\n              <div className='text_input_upload'>NO CONTENT</div>\n            </div>\n        </div>\n      );\n    }\n    \n  }\n}\n\n","export default __webpack_public_path__ + \"static/media/AIR_1024px.e442824d.png\";","import React, {Suspense} from 'react'\nimport {useImage} from 'react-image'\n \nfunction MyImageComponent() {\n    const _width = window.screen.width\n    const _height = window.screen.height\n    //console.log( 'w . ', _width, ' h . ', _height)\n    const {src} = useImage({\n        srcList: `https://picsum.photos/${_width}/${_height}?random=1`,\n    })\n \n    return <img src={src} />\n}\n \nexport default function Appbackground() {\n  return (\n    <Suspense fallback={<div style={{height: '100%', width:'100%', background:'rgba(187, 187, 187, 0.486)'}}></div>}>\n      <MyImageComponent />\n    </Suspense>\n  )\n}","import React from 'react';\nimport './App.css';\nimport { Route, Switch} from 'react-router-dom';\nimport UploadView from './uploadView'\nimport DownloadView from './downloadView'\nimport { VscThreeBars } from \"react-icons/vsc\";\nimport colors from './colors'\nimport air from './AIR_1024px.png'\nimport Bg from './background'\nimport api from './api'\n\n\n\nconst Beta = <div className='open_beta'>open beta</div>\n\n\n\n\nexport default class App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      mobile: false,\n      height: '',\n      backend: false,\n    }\n      \n\n    }\n  \n  componentDidMount(){\n    this.createPing()\n    window.addEventListener(\"resize\", this.updateWindowDimensions());\n    this.setState({height: window.innerHeight + \"px\"})\n  }\n\n  \n\n  updateWindowDimensions() {\n    const mobile = window.innerWidth<=600\n    document.documentElement.style.setProperty('--vh', `${window.innerHeight/100}px`);\n    this.setState({ mobile: mobile});\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  createPing = async()=>{\n    await api.create_ping().then(res=>{\n      if(res.data.isSuccess){\n        this.setState({backend: true})\n      }\n    })\n  }\n\n\n  routing = ()=> {\n    return (\n        <Switch>\n          <Route exact path=\"/\" render={(props) => (\n              <UploadView {...props} mobile={this.state.mobile} backend={this.state.backend} />\n              )}></Route>\n          <Route  path=\"/:id\" render={(props) => (\n              <DownloadView {...props} mobile={this.state.mobile} backend={this.state.backend} />\n              )}></Route>\n        </Switch> \n    );\n  }\n\n\n  \n\n  \n  render(){\n    return (\n      <div className='app_window' style={{height: this.state.height}}>\n        <div className='head_view'>\n          <div className='title'><img  className='air_icon' src={air} alt=\"Logo\"/> AIR channel{Beta}</div>\n          <div className='menu'>\n            <div className='menu_icon'><VscThreeBars size={30} color={colors.white}/> </div></div>\n        </div>\n        <div className='unkown_view'><Bg/></div>\n        <div className='actions_view'>{this.routing()}</div>\n      </div>\n    );\n  }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}