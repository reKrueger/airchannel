{"version":3,"sources":["api/index.js","colors/index.js","progressbar/index.js","uploadView/uploadFileList/item.js","uploadView/uploadFileList/folder.js","uploadView/uploadFileList/index.js","uploadView/uploadFinishView/index.js","alertViews/index.js","uploadView/sendView/index.js","text/index.js","uploadView/fileHandle/fileContext.js","uploadView/cancelView/index.js","helpers/roundFileSze.js","infoViews/index.js","uploadView/index.js","helpers/getRange.js","downloadView/downloadFileList/item.js","downloadView/downloadFileList/folder.js","downloadView/downloadFileList/index.js","downloadView/downloadMessView/index.js","downloadView/index.js","dropdownMenu/index.js","background/index.js","AIR_1024px.png","helpView/index.js","speedtestView/progresser.js","speedtestView/index.js","infoView/index.js","imprintView/index.js","apiView/index.js","App.js","index.js"],"names":["axios","defaults","xsrfHeaderName","xsrfCookieName","is_local","window","location","hostname","_url","process","configForm_","headers","api","create","baseURL","axiosRetry","retries","apis","upload_detail","id","get","download_delete_detail","sender","delete","create_major","form","post","is_major_detail","download_stream","downFileName","extensionName","config","AxiosStream","download","is_mail_detail","mail","create_ping","create_file","remove_file_detail","filename","filed","count","color","highBlue","grey","pink","green","orange","white","black","accentColor","olive","lila","red","pastellgreen","yellow","grey_blue","background1","background2","background3","background_white","ProgressBar","props","bgcolor","counter","labelStyles","height","width","backgroundColor","borderRadius","overflow","textShadow","colors","fontSize","fontWeight","display","justifyContent","alignItems","style","className","Math","floor","Item","item","this","is_load","load","loading","size","origin_name","onClick","removeItem","React","Component","Folder","foldername","folder","ListItem","value","FileList","lines","items","forEach","push","e","file_guid","map","indexOf","FileListOfItem","FolderList","state","open","i","folder_name","length","removeFolder","prevProps","hierarchy","ListIcons","shareButtons","share_icons","btn_share","console","log","showView","isLink","data-for","data-tip","data-event","navigator","clipboard","writeText","link","place","effect","globalEventOff","afterShow","mailConfirm","type","condition","setState","alertView","title","text","cancelBtn","okBtnText","cancelBtnText","Swal","fire","background","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","dismiss","DismissReason","cancel","cancelUploadSwal","a","titel","cancelBoolean","newUploadSwal","sendAlerts","alert","answer","BlackSwitch","styled","Switch","theme","ViewText","reset_state","useUserMail","useLink","useMail","useDownload","handleInput","target","name","handleMail","is_used","handleDownload","radioSwitchMail","valueR","FormControl","RadioGroup","onChange","FormControlLabel","control","Radio","label","useLinkOrMail","mail_user","mail_to","radioSwitchDownload","checked","downloadOptionText","send_info","message","res","data","isSuccess","infos","send_option","visible","mobileHeight","wrapper","createRef","vh","innerHeight","mobile","placeholder","rows","close","blue","CHUNK_SIZE","fileContext","input","files","file_arr","Array","from","file","_file","_totalCount","ceil","_fileID","uuidv4","_folderName","webkitRelativePath","split","file_json","pop","chunk_count","file_size","file_data","chunks","getFileContextFolder","getFileContext","CancelView","uploadCancel","loopBreak","roundFileSize","kb_size","round","mb_size","htmlLayout","date","use_download","use_link","_size","upload_size","ds","Date","is_mail","is_mail_to","is_use_download","is_use_link","toLocaleDateString","weekday","year","month","day","hour","infoView","html","downloadInfoView","htmlText","renderToString","simpleInfoView","SendViewStyles","content","top","left","right","bottom","border","overlay","source","CancelToken","UploadView","resetUpload","showProgress","upload_success","timeout","ms","Promise","resolve","setTimeout","cancelUpload","fileLoopBreak","inputHandle","context","filesSize","concat","uploadIsCancel","majorId","newConnect","chunkCount","connect","ping","is","counterOfFile","newUpload","use_email","progressAction","progressEvent","fullCount","fileSize","loadedFromCHunk","loaded","total","eventArr","sum","reduce","b","progress","send","openSendView","createMajor","FormData","append","clean","baseState","upload_begin","upload_dispatcher","create_chunks","uploadCompleted","chunk_start","chunk","slice","countListLoop","countlist","promises","parseInt","createFile","s3UrlLoop","url","uploadFileToS3","countArr","start","end","_","j","all","chunkSize","JSON","stringify","s3","presignedPostData","formData","Object","keys","fields","key","onUploadProgress","cancelToken","token","retryCondition","_error","fileSetStorage","catch","err","isCancel","response","download_link","path","protocol","host","email","sended_mail","list","uploadFile","removed_list","filter","fileList","full_size","readyToSend","hidden","bottomView","inputFolder","show_text","multiple","directory","webkitdirectory","msdirectory","odirectory","isOpen","onRequestClose","ariaHideApp","newOpen","DownloadFileList","folderList","backcolor","DownloadView","majorInfo","checkLink","isContent","deleteBucket","file_loop","downloadFiles","folderPath","join","resBuffers","saveAs","Blob","params","isLocal","autori","configDownload","responseType","onDownloadProgress","method","error","messageView","infoBtnView","changeDownloadView","complete","match","openInfoView","options","DropdownMenu","onSelect","history","arrowClosed","arrowOpen","placeholderClassName","placeHolderValue","withRouter","BackSize","MyImageComponent","_width","screen","_height","src","useImage","srcList","Appbackground","fallback","HelpView","air","alt","Progresser","fillerStyles","MBIT","cancelTokenUpload","cancelTokenDownload","SpeedtestView","startTest","uploadSpeed","downloadSpeed","createUploadBlob","ArrayBuffer","getSpeedTestUrl","REACT_APP_API_SPEED_URL","dummy","finishDownLoad","getTime","runtime","startLoad","configUpload","loadSec","sec","downloadSizeToMBit","mos","upload","arrayAvg","startTime","times","timeStamp","textView","arr","summ","arrLen","upMos","downMos","InfoView","ImprintView","ApiView","Beta","App","createPing","backend","headView","routing","exact","render","addEventListener","updateWindowDimensions","innerWidth","document","documentElement","setProperty","removeEventListener","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fe398c30.chunk.js","sourcesContent":["\n\n/*\n.catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\n  \n*/\n\n\nimport axios from 'axios'\nimport AxiosStream from \"axios-stream\";\nimport axiosRetry from 'axios-retry';\n\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\nconst is_local = window.location.hostname ==='localhost'\n\nconst hostUrl = process.env.REACT_APP_API_BASE_URL \nconst autori = is_local? 'local' : process.env.REACT_APP_AUTORI\nconst _url = is_local? 'http://127.0.0.1:8000/transmit/' : hostUrl \n\n\n\n\n\nconst configForm_ = {\n  headers: { \n    'Authorization': `${autori}`,\n    'Content-Type': 'multipart/form-data;boundary=boundary',\n    'Accept': 'application/json;text/plain'\n  }\n}\n\n\n\n\n\nconst api = axios.create({\n    baseURL: _url\n\n})\naxiosRetry(api, { retries: 3 });\nexport const create_ping = () => api.get(`ping/`, configForm_) // server works return pong\n\nexport const create_major = form => api.post(`major/`, form, configForm_) // create main model\nexport const is_major_detail = sender => api.get(`major/${sender}`, configForm_) // get detail from main model\n\nexport const create_file = form => api.post(`file/`,form , configForm_) // create file model and return persigned url for s3\nexport const filed = (filename, count) => api.get(`file/${filename}-${count}`, configForm_) // return is filed uplaod ?\n\nexport const upload_detail = id => api.get(`upload/${id}`, configForm_) // complite upload !!!!\nexport const download_delete_detail = sender => api.delete(`remove/${sender}`, configForm_) // is used unique download ==> remove Major and storage\nexport const remove_file_detail = (id, filename) => api.delete(`removefile/${id}/${filename}`, configForm_) // remove file model and storage\nexport const is_mail_detail = mail => api.get(`mailvali/${mail}`, configForm_) // mail regist ?\n\nexport const download_stream = (downFileName,extensionName, config) => AxiosStream.download(downFileName, extensionName, config); // download chunks in stream\n\n\n\n\n\nconst apis = {\n  upload_detail,\n  download_delete_detail,\n  create_major,\n  is_major_detail,\n  download_stream,\n  is_mail_detail,\n  create_ping,\n  create_file,\n  remove_file_detail,\n  filed,\n\n    \n}\n\n\nexport default apis","\n \n// colors\nconst highBlue = '#5ba3c7'\nconst grey = '#f0f0f0'\nconst pink = '#e8c8c8'\nconst green = '#a3c49f'\nconst orange = '#ebd7b7'\nconst white = '#ffffff'\nconst black = '#212121'\nconst olive = '#c4d184'\nconst lila = '#9397d9'\nconst red = '#d993a0'\nconst pastellgreen = '#98b8a7'\nconst yellow = '#f0df48'\nconst cosmos_grey = '#353535'\n//const accentColor =  '#ff757e' \nconst accentColor =  '#62bce3'//  '#819cdb'//'#84c4ba' \nconst background1 = '#505a66'\nconst background2 = '#404954'\nconst background3 = '#606b78'\nconst background_white = 'rgba(187, 187, 187, 0.886)'\nconst beige = '#baaea2'\nconst grey_blue = '#505a66'\nconst color = {\n    highBlue, \n    grey, \n    pink, \n    green, \n    orange, \n    white, \n    black, \n    accentColor, \n    olive, \n    lila, \n    red, \n    pastellgreen, \n    yellow , \n    grey_blue,\n    background1,\n    background2,\n    background3,\n    background_white\n} \n\nexport default color\n","\nimport './index.css'\nimport colors from './../colors'\nconst ProgressBar = (props) => {\n    const { bgcolor, counter } = props;\n  \n    const containerStyles = {\n      //position: 'absolute',\n      height: '150px',\n      width: '100%',\n      backgroundColor: \"rgba(255, 255, 255, 0.512)\",\n      borderRadius: '0vh',\n      overflow: 'hidden',\n      borderRadius: '2px',\n      marginRight: '2em',\n      marginLeft: '2em'\n      \n    }\n  \n    const fillerStyles = {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginLeft: '5px',\n      height: '100%',\n      width: `${counter}%`,\n      backgroundColor: colors.black,\n      \n    }\n  \n    const labelStyles = {\n      color: 'black',\n      height: '100%',\n      width: '100%',\n      //border: '1px solid rgba(151, 151, 151, 0.812)',\n      textShadow: `1px 1px ${colors.grey}`,\n      //paddingLeft:'3vw',\n      fontSize: '150%',\n      //minWidth: '50px',\n      fontWeight: 'bold',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: \"rgba(255, 255, 255, 0.512)\",\n      \n    }\n    \n    const progressDiv = {\n      height: 'auto',\n      width: '100vw',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }\n    \n \n\n\n\n    return (\n      <div style={progressDiv}>\n      <div className=\"c-subscribe-box u-align-center\">\n        <div className=\"rainbow\"><span></span><span></span></div>\n          <div className=\"c-subscribe-box__wrapper\">\n          <div style={labelStyles}>{`${Math.floor(counter)} %`}</div>\n            \n        </div>\n      </div>\n      </div>\n    );\n  };\n  \n  export default ProgressBar;","import React from 'react';\nimport './index.css';\nimport { VscFile, VscClose } from \"react-icons/vsc\";\nimport SquareLoader from \"react-spinners/SquareLoader\";\nimport color from '../../colors';\nimport { colors } from '@material-ui/core';\n\n\n\n\nexport default class Item extends React.Component{\n\n    \n\n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const item =  this.props.item\n        const is_load = this.props.load\n\n        return(\n            <div className='fileList_item_frame'>\n                <div className='item_icon_div'>\n                    <div className='item_icon'>{is_load? <SquareLoader color={color.black} loading={true}  size={30} />:<VscFile size={30}/>}</div>\n                </div>\n                <div className='item_name_div'>\n                    <div className='item_name'>{item.origin_name}</div>\n                </div>\n                {is_load?null:\n                    <div className='item_remove_div'>\n                        <button className='item_remove' onClick={()=>this.props.removeItem(item)}>x</button>\n                    </div>\n                }\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash, VscFolder } from \"react-icons/vsc\";\nimport SquareLoader from \"react-spinners/SquareLoader\";\nimport color from '../../colors';\nimport { colors } from '@material-ui/core';\n\n\n\n\n\nexport default class Folder extends React.Component{\n\n\n    \n\n    \n\n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const foldername =  this.props.folder\n        const is_load = this.props.load\n\n        return(\n            <div className='folder_frame_div'>\n                <div className='item_icon_div'>\n                    <div className='item_icon'>{is_load? <SquareLoader color={color.black} loading={true}  size={26} />:<VscFolder size={30}/>}</div>\n                </div>\n                <div className='item_name_div'>\n                    <div className='item_name'>{foldername}</div>\n                </div>\n                {is_load? null:\n                    <div className='item_remove_div'>\n                        <button className='item_remove' onClick={()=>this.props.removeItem(foldername)}>x</button>\n                    </div>\n                }\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport Item from './item'\nimport Folder from './folder'\n\n\nfunction ListItem(props) {\n  return (<div>\n              <div className= \"list_item_folder\">{props.value}</div>\n          </div>);\n}\n\nexport default class FileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n          open:'', \n          \n  \n        }\n        \n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      if(this.props.items.length !== prevProps.items.length){\n      }\n    }\n\n    \n\n    \n\n    FileList=()=>{\n        const lines = [] \n        this.props.items.forEach(item => {\n          \n            lines.push(\n              <Item \n                item={item}\n                removeItem={(e)=>this.props.removeItem(e)}\n                load={this.props.load===item.file_guid? true: false}\n\n                />\n              )\n        });\n\n\n\n\n        const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item) } />);\n        return listItems; \n\n        \n    }\n    FileListOfItem=(item)=>{\n      const file = \n            <Item \n              item={item}\n              removeItem={(e)=>this.props.removeItem(e)}\n              load={this.props.load===item.file_guid? true: false}\n\n              />;\n      return file; \n\n      \n  }\n\n    \n\n\n    \n\n    FolderList=()=>{\n      const name = this.state.open\n      const lines = [] \n      var folder = ''\n      \n      for(let i of this.props.items){\n        if(i.folder_name.length<=0){\n          lines.push(this.FileListOfItem(i))\n          continue\n        }\n\n        \n        if(folder !== i.folder_name[0]){\n          lines.push(\n            <Folder\n              folder={i.folder_name[0]}\n              item={i}\n              removeItem={(e)=>this.props.removeFolder(e)}\n              load={this.props.load===i.file_guid? true: false}\n\n              />\n            )\n        }\n        folder = i.folder_name[0]\n      }\n\n\n\n\n      const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item)} />);\n      return listItems; \n\n      \n  }\n\n  \n  \n  \n  \n    render(){\n      const {hierarchy} = this.state\n      return (\n        <div className='File_list_frame'>\n          \n          {this.FolderList()}\n          \n        </div>\n      )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport ReactTooltip from \"react-tooltip\";\nimport { BsFacebook, BsReddit, BsSignal, BsTelegram, BsWhatsapp  } from \"react-icons/bs\";\n\nfunction ListIcons(props) {\n  return (<div>\n              <div>{props.value}</div>\n          </div>);\n}\n\nexport default class FileList extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      place: \"top\",\n      type: \"dark\",\n      effect: \"float\",\n      condition: false\n    };\n  }\n\n  changePlace(place) {\n    this.setState({\n      place: place\n    });\n  }\n\n  changeType(type) {\n    this.setState({\n      type: type\n    });\n  }\n\n  changeEffect(effect) {\n    this.setState({\n      effect: effect\n    });\n  }\n\n  _onClick() {\n    this.setState({\n      condition: true\n    });\n  }\n\n  shareButtons = ()=>{\n    const btn_share = [\n      <BsWhatsapp size={20}></BsWhatsapp>,\n      <BsTelegram size={20}></BsTelegram>,\n      <BsSignal size={20}></BsSignal>,\n      <BsReddit size={20}></BsReddit>,\n      <BsFacebook size={20}></BsFacebook>\n    ]\n\n    return(\n      <div className='share_div'>\n        {this.share_icons()}\n      </div>\n    )\n  }\n\n  share_icons = ()=>{\n    const btn_share = [\n      <BsWhatsapp className='icon_btn' onClick={()=> console.log(1)} size={20}></BsWhatsapp>,\n      <BsTelegram className='icon_btn' onClick={()=> console.log(2)} size={20}></BsTelegram>,\n      <BsSignal className='icon_btn' onClick={()=> console.log(3)} size={20}></BsSignal>,\n      <BsReddit className='icon_btn' onClick={()=> console.log(4)} size={20}></BsReddit>,\n      <BsFacebook className='icon_btn' onClick={()=> console.log(5)} size={20}></BsFacebook>\n    ]\n    const listIcons = btn_share.map((item) =>\n        <ListIcons value={item} key={btn_share.indexOf(item)} />);\n    \n    return listIcons; \n  }\n\n  \n  \n  showView = ()=>{\n    if(!this.props.isLink){\n      return(\n        <div className='div_link'>\n            <div className='link_text'>der Downloadlink wurde erfolgreich an </div>\n            <div className='email_text'>{this.props.mailConfirm}</div>\n            <div className='link_text'>gesendet. </div>\n            <div className='link_text_2'>dein Download bleibt 12 Stunden lang gespeichert</div>\n            <div className='link_text_2'>alle Daten werden nach ablauf unwiederuflich gelöscht</div>\n          </div>\n      )\n    }else{\n      return(\n        <div className='div_link'>\n            <div className='link_text'> hier ist der link zum kopieren</div>\n            <a className='link_copy'\n                  data-for=\"custom-event\"\n                  data-tip=\"link wurde kopiert\"\n                  data-event=\"click focus\"\n                  onClick={() => {navigator.clipboard.writeText(this.props.link)}}\n                >\n                  {this.props.link}\n                </a>\n\n                <ReactTooltip id=\"custom-event\" place=\"right\" effect=\"solid\" globalEventOff=\"click\" afterShow={()=>{navigator.clipboard.writeText(this.props.link)}} />\n                <div className='link_text_2'>dein Download bleibt 12 Stunden lang gespeichert</div>\n                <div className='link_text_2'>...alle Daten werden nach ablauf unwiederuflich gelöscht</div>\n                {this.shareButtons()}\n          </div>\n      )\n    }\n  }\n\n\n\n\n\n  \n  \n  render(){\n    return (\n        <div className='view_finish'>\n          {this.showView()}\n        </div>\n    )\n  }\n    \n  \n  \n  }","import Swal from 'sweetalert2'\nimport colors from './../colors'\n\n\n\n\n\n\n//background: rgba(187, 187, 187, 0.886);\nconst alertView = (title, text, cancelBtn, okBtnText, cancelBtnText)=>{\n\n    // Alert POP UP\n    //\n    const e = Swal.fire({\n        background: 'rgba(187, 187, 187, 0.886)',\n        title: title,\n        text: text,\n        icon: 'warning',\n        showCancelButton: cancelBtn,\n        cancelButtonColor: colors.black,\n        confirmButtonColor: colors.black,\n        confirmButtonText: okBtnText,\n        cancelButtonText: cancelBtnText\n      }).then((result) => {\n        if (result.isConfirmed) {\n            return true\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n            return false\n        }\n      })\n      return e\n}\n\n\nexport const cancelUploadSwal=async(\n  titel='Abbruch',\n  text='sind Sie Sicher, das Sie den Upload abbrechen möchten !',\n  cancelBoolean = true,\n  okBtnText = 'Ja, abbrechen',\n  cancelBtnText = 'Nein, weiter hochladen'\n\n  )=>{\n\n const answer =  await alertView(titel, text, cancelBoolean, okBtnText, cancelBtnText)\n if(answer){\n     return true\n }\n \n}\n\nexport const newUploadSwal = async()=>{\n\n  // Alert POP UP\n  //\n  const titel = 'Neuer Upload?'\n  const text = 'sind Sie Sicher, Sie haben keine möglichkeit mehr an den Downloadlink zu kommen!'\n  const cancelBoolean = true\n  const okBtnText = 'Ja, ich habe den link kopiert'\n  const cancelBtnText = 'Nein, ich kopiere mir den link nochmal'\n\n  const answer =  await alertView(titel, text, cancelBoolean, okBtnText, cancelBtnText)\n  if(answer){\n      return true\n  }\n  \n}\n\n\nexport const sendAlerts = async(alert)=>{\n  const title = 'E-mail exestiert nicht'\n  const cancelBoolean = false\n  const okBtnText = 'Ok'\n\n  switch(alert){\n    case 'mailuser':\n      var text = 'bitte überprüfen deine    Absender    Adresse'\n      var answer =  await alertView(title, text, cancelBoolean,okBtnText, null) // alert View\n      return answer\n\n    case 'mailto':\n      var text = 'bitte überprüfen deine   Empfänger   Adresse'\n      var answer =  await alertView(title, text, cancelBoolean,okBtnText, null) // alert View\n      return answer\n\n    case 'empty':\n      var text = 'Pflichtfelder sind nicht ausgefüllt !'\n      const new_title = 'keine Eingabe'\n      var answer =  await alertView(new_title, text, cancelBoolean,okBtnText, null) // alert View\n      return answer\n  }\n}","import React from 'react';\nimport './index.css';\nimport Radio from '@material-ui/core/Radio';\nimport Switch from '@material-ui/core/Switch';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport {sendAlerts} from './../../alertViews';\nimport api from './../../api'\nimport {colors, styled} from '@material-ui/core';\nimport {USE_DOWNLOAD, USE_NOT_DOWNLOAD, PLACEHOLDER_TEXT} from './../../text'\n\n\nconst BlackSwitch = styled(Switch)(({ theme }) => ({\n    '& .MuiSwitch-switchBase.Mui-checked': {\n      color: 'black',\n      \n    },\n    '& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track': {\n      backgroundColor: 'black',\n    },\n  }));\n\n\n\n\nexport class ViewText extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            useLink: true,\n            useDownload: false,\n            message: '',\n            mail_user: '',\n            mail_to: '',\n            send_option:'link',\n            visible: true,\n            mobileHeight: ''\n\n        }\n        this.wrapper = React.createRef();\n\n    }\n    componentDidMount(){\n        const vh = window.innerHeight ;\n        this.setState({mobileHeight: `${vh}px`})\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.open !== prevProps.open) {\n            this.reset_state()\n        }\n    }\n\n    reset_state = () => {\n        this.setState({\n            useUserMail: false,\n            useLink: true,\n            useMail: false,\n            useDownload: true\n        })\n    }\n\n    handleInput = ({ target }) => {\n        this.setState({ [target.name]: target.value })\n\n        \n    }\n\n    handleMail = () => {\n        const is_used = this.state.useLink? false : true\n        this.setState({ useLink: is_used});\n    };\n\n    handleDownload = () => {\n        //const used = event.target.value\n        const is_used = this.state.useDownload? false : true\n        this.setState({useDownload: is_used});\n    };\n\n    \n\n\n\n\n\n\n\n\n\n\n\n    radioSwitchMail = ()=>{\n        const valueR = this.state.useLink? 'link' : 'mail'\n        return(\n            <div className='send_view_change_zone_div'>\n                <div className='send_view_radio_div'>\n                    <FormControl >\n                        <div className='send_view_formlabel' color='default'>Übermittlungsart</div>\n                        <RadioGroup value={valueR} onChange={this.handleMail} >\n                            <FormControlLabel value=\"link\" control={<Radio color=\"default\"/>} label=\"Link\" />\n                            <FormControlLabel value=\"mail\" control={<Radio color=\"default\"/>} label=\"Link per mail\" />\n                        </RadioGroup>\n                    </FormControl>\n                </div>\n                {this.useLinkOrMail()}\n            </div>\n        )\n    }\n\n    useLinkOrMail = () => {\n        const { useLink } = this.state\n        if(!useLink){\n            return (\n                <div className='send_view_show_options'>\n                    <div className='send_view_div_input'>E-mail des Absenders:\n                        <input className='send_view_input' type='email' name='mail_user' value={this.state.mail_user} onChange={this.handleInput}></input>\n                    </div>\n                    <div className='send_view_div_input'>E-mail des Empfänger:\n                        <input className='send_view_input' type='email' name='mail_to' value={this.state.mail_to} onChange={this.handleInput}></input>\n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                <div className='send_view_show_options'>\n                    <div className='send_view_div'>\n                        <div className='send_view_div_linktext'>Erhalte einen Link nach dem Upload</div>\n                    </div>\n                </div>\n            )\n        }\n                \n          \n    }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    radioSwitchDownload = ()=>{\n        return(\n            <div className='send_view_change_zone_div'>\n                <div className='send_view_radio_div'>\n                    <FormControl >\n                    <div className='send_view_formlabel' >Download</div>\n                    <FormControlLabel control={\n                        <BlackSwitch size=\"medium\" color='secondary' checked={this.state.useDownload} onChange={this.handleDownload} />}\n                        label=\"einmaliger Download\"\n                        />\n                    </FormControl>\n                </div>\n                {this.downloadOptionText()}\n            </div>\n        )\n    }\n\n    downloadOptionText = () => {\n        const { useDownload } = this.state\n        if(useDownload){\n            return (\n                <div className='sendview_info_text'>{USE_DOWNLOAD}</div>\n            )\n        }else{\n            return (\n                <div className='sendview_info_text'>{USE_NOT_DOWNLOAD}</div>\n            )\n        }\n        \n    }\n\n\n\n\n\n\n\n\n\n    send_info = async()=>{\n        const { mail_to, mail_user, message, useDownload, useLink} = this.state\n        // sending option => use mail\n        if(!useLink){\n            // validate.... no input im E-mail field\n            if(!mail_user || !mail_to){\n                let answer =  await sendAlerts('empty')\n                if(answer){\n                    return\n                }\n            }\n            // validate.... e-mail Absender\n            const is_mail_user = await api.is_mail_detail(mail_user).then(res=>{return res.data.isSuccess})\n            if(!is_mail_user){\n                let answer =  await sendAlerts('mailuser')\n                if(answer){\n                    return\n                }\n            }\n            // validate.... e-mail Empfänger\n            const is_mail_to = await api.is_mail_detail(mail_to).then(res=>{return res.data.isSuccess})\n            if(!is_mail_to){\n                let answer =  await sendAlerts('mailto')\n                if(answer){\n                    return\n                }\n            }\n        }\n        this.props.infos({ mail_user, mail_to, message, useDownload, useLink })\n\n    }\n\n\n    hide() {\n        this.setState({ visible: false });\n    }\n    \n\n    render() {\n        return (\n            <div className={this.props.mobile?'send_view_modal_mobile':'send_view_modal'} style={this.props.mobile?{height:this.state.mobileHeight}:null}>\n                <div className={this.props.mobile?'send_view_frame_mobile':'send_view_frame'}>\n                    <div className='send_view_title_div'>\n                        Datenübertragung\n                    </div>\n                    <div className='send_view_change_zone'>{this.radioSwitchDownload()}</div>\n                    <div className='send_view_change_zone'>{this.radioSwitchMail()}</div>\n                    <div className='send_view_div'>\n                        <textarea className='send_view_message' placeholder={PLACEHOLDER_TEXT} rows={6} type='text' name='message' value={this.state.message} onChange={this.handleInput}></textarea>\n                    </div>\n                    <div className='send_view_btn_div'>\n                        <button className='send_btn' onClick={() => this.props.close()}>abbruch</button>\n                        <button className='send_btn' style={{color: colors.blue}} onClick={() => this.send_info()}>senden</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ViewText;\n\n\n\n","// Fix strings in App\n\nexport const USE_DOWNLOAD = \" Nach dem ersten Dowload werden alle Daten der Übertragung gelöscht und es ist kein weiter Download mehr möglich! \"\nexport const USE_NOT_DOWNLOAD = \" Nach dem Upload werden alle deine Daten, 12 Std lang in einer Cloud gespeichert und können abgerufen werden!  \"\nexport const PLACEHOLDER_TEXT = '...schreibe eine Nachricht an den Empfänger ? '","\nimport { v4 as uuidv4 } from 'uuid';\n\nconst CHUNK_SIZE = 1048576 * 1 // 1 MB \n\n // ********************\n    // *******FIIE*********\n    // ********************\nexport default function fileContext(input){\n    if(input.target.files.length>1){\n        return getFileContextFolder(input)\n    }else{\n        return getFileContext(input)\n    }\n}\n\nfunction getFileContext(input){\n        const files = []\n        const file_arr = Array.from(input.target.files)\n        var size = 0\n        file_arr.forEach(file=>{\n            const _file = file;\n            const _totalCount =  Math.ceil(file.size / CHUNK_SIZE) // counts of cjunks\n            const _fileID = uuidv4() \n            const file_json = {\n                chunk_count: _totalCount,\n                file_size: _file.size,\n                origin_name: _file.name,\n                file_guid: _fileID,\n                file_data: _file,\n                folder_name:[],\n                chunks: []\n            }\n            files.push(file_json)\n            size = size + _file.size\n        })\n        return {files, size}\n        \n    }\n\n    // ********************\n    // *******FOLDER*********\n    // ********************\nfunction getFileContextFolder(input){\n        const files = []\n        const file_arr = Array.from(input.target.files)\n        var size = 0\n        file_arr.forEach(file=>{\n            const _file = file;\n            const _totalCount =  Math.ceil(file.size / CHUNK_SIZE) // counts of cjunks\n            const _fileID = uuidv4() \n            const _folderName = file.webkitRelativePath.split(\"/\")\n            const popped = _folderName.pop()\n            const file_json = {\n                chunk_count: _totalCount,\n                file_size: _file.size,\n                origin_name: _file.name,\n                file_guid: _fileID,\n                file_data: _file,\n                folder_name: _folderName,\n                chunks: []\n            }\n            files.push(file_json)\n            size = size + _file.size\n        })\n        return {files, size}\n        \n    }","\n  \nimport React from 'react';\nimport './index.css'\nimport { cancelUploadSwal, newUploadSwal } from './../../alertViews';\n\n\n\n\nexport default class CancelView extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={ \n            \n\n        }\n        \n    }\n  \n    uploadCancel = async()=>{\n        const answer =  cancelUploadSwal\n        if(answer){\n            this.props.loopBreak()\n        }\n        \n    }\n\n    \n    render(){\n            return (\n                <div className='progressbar_btn_div'>\n                    <button onClick={()=>this.uploadCancel()}  className='upload_cancel'>STOP UPLOAD</button>\n                </div>\n            )\n    }\n      \n    \n  \n  \n  }\n\n\n","\nexport default function roundFileSize(size){\n    // kilo bytes\n    const kb_size = Math.round(size / 1000) \n    //mega bytes\n    if(kb_size > 1000){\n        const mb_size = Math.round(size / 100000) / 10 \n        // giga bytes\n        if(mb_size > 2000){\n            const gb_size = Math.round(size / 10000000) / 100 \n            return gb_size + '  GB'\n        }\n        return mb_size + '  MB'\n    }\n    return kb_size + '  KB'\n}","import Swal from 'sweetalert2'\nimport './index.css'\nimport colors from './../colors'\nimport { renderToString } from 'react-dom/server'\nimport roundFileSize from '../helpers/roundFileSze';\nimport color from './../colors';\n\n\nconst htmlLayout = (infos)=>{\n  const { mail_to, mail_user, date, use_download, use_link, files } = infos\n  let _size = 0\n  for (const file of files) {\n    _size = _size + file.file_size\n  };\n  const upload_size = 'gesamt '+ roundFileSize(_size)\n  const options = { weekday: 'long', year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric' };\n  const ds = new Date(date)\n  const is_mail = mail_user ? mail_user : 'keine Angabe'\n  const is_mail_to = mail_to === [''] ? mail_to : 'keine Angabe'\n  const is_use_download = use_download ? 'einmailger Download': 'upload wird nach 12 Std gelöscht'\n  const is_use_link = use_link ? 'upload-Link' : 'E-mail Benachrichtung'\n  return(\n    <div >\n        <div style={{fontWeight: '600',height: '1.5em'}}> Erstellt: <span style={{fontWeight: '300'}}> {ds.toLocaleDateString(\"de-DE\", options)}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Dateigröße: <span style={{fontWeight: '300'}}> {upload_size}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Absender: <span style={{fontWeight: '300'}}> {is_mail}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Empfänger: <span style={{fontWeight: '300'}}> {is_mail_to}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Speicher Option: <span style={{fontWeight: '300'}}> {is_use_download}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Übermittlungsart: <span style={{fontWeight: '300'}}> {is_use_link}</span></div>\n    </div>\n  )\n}\n\nconst test = {\n  backgroundColor: 'yellow',\n  color: 'black'\n  \n}\n\n//background: rgba(187, 187, 187, 0.886);\nconst infoView = (title, text, cancelBtn, okBtnText, cancelBtnText)=>{\n\n    // Alert POP UP\n    //\n    const e = Swal.fire({\n        background: 'rgba(187, 187, 187, 0.886)',\n        title: title,\n        html: text,\n        icon: 'info',\n        showCancelButton: cancelBtn,\n        cancelButtonColor: colors.black,\n        confirmButtonColor: colors.black,\n        confirmButtonText: okBtnText,\n        cancelButtonText: cancelBtnText,\n      }).then((result) => {\n        if (result.isConfirmed) {\n            return true\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n            return false\n        }\n      })\n      return e\n}\n\n\n\n\n\nexport const  downloadInfoView = async(infos)=>{\n  const title = 'Upload Infos'\n  const cancelBoolean = false\n  const okBtnText = 'Ok'\n  let htmlText = renderToString(htmlLayout(infos))\n  let answer =  await infoView(title, htmlText, cancelBoolean,okBtnText, null) // alert View\n  if(answer){\n      return\n      }\n}\n\nexport const  simpleInfoView = async(infos)=>{\n  const title = 'FUCK !'\n  const cancelBoolean = false\n  const okBtnText = 'Ok'\n  let htmlText = infos\n  let answer =  await infoView(title, htmlText, cancelBoolean,okBtnText, null) // alert View\n  if(answer){\n      return\n      }\n}","import React from 'react';\nimport './index.css'\nimport api from './../api'\nimport ProgressBar from './../progressbar'\nimport Itemlist from './uploadFileList'\nimport FinishView from './uploadFinishView'\nimport SendView from './sendView'\nimport fileContext from './fileHandle/fileContext'\nimport range from '../helpers/getRange';\nimport CancelView from './cancelView';\nimport colors from './../colors'\nimport { VscDiffAdded, VscFolder, VscFolderActive, VscArrowUp } from \"react-icons/vsc\";\nimport { cancelUploadSwal, newUploadSwal } from './../alertViews';\nimport { simpleInfoView } from './../infoViews';\nimport Modal from 'react-modal';\nimport roundFileSize from '../helpers/roundFileSze';\nimport axios from 'axios'\nimport axiosRetry from 'axios-retry';\n\nconst SendViewStyles = {\n    content: {\n        width: '420px',\n        height: '100vh',\n        top: '0%',\n        left: '0%',\n        right: 'auto',\n        bottom: 'auto',\n        //marginRight: '-50%',\n        //transform: 'translate(-50%, -50%)',\n        border: `none`,\n        //borderRadius: '2px',\n        background: 'nome',\n        },overlay: { background: 'rgba(64, 64, 64, 0.568)',width: '100vw', } // blur background\n};\n\n\nconst CHUNK_SIZE = 1048576 * 1 // 1 MB \nconst UPLOAD_THREAD = 40\nconst source = axios.CancelToken.source();\n\nexport default class UploadView extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={ \n            files:[],\n            filesSize:0,\n            infos:{},\n            showProgress: false,\n            progress: 0,\n            openSendView: false,\n            mailConfirm: '',\n            upload_success: false,\n            visible: false,\n            link: '',\n            isLink: null,\n            fileLoopBreak: false,\n            majorId: null,\n            upload_begin: '',\n            inputFolder: false,\n            eventArr :[],\n\n        }\n        this.baseState = this.state \n        \n    }\n  \n    \n    resetUpload = () => {\n        this.setState({\n            showProgress: false,\n            process: 0,\n            upload_success: false,\n        })\n    }\n\n    timeout=(ms)=> {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    cancelUpload = ()=>{\n        if(this.state.fileLoopBreak){\n            console.log('this.cancelUpload')\n            source.cancel('post canceled.')\n            \n            \n        }\n    }\n\n    inputHandle=(input)=>{\n        const context = fileContext(input)\n        const {files, filesSize} = this.state\n        this.setState({files: files.concat([...context.files]), filesSize: filesSize + context.size})\n    }\n\n    \n\n    uploadIsCancel = async(id, file)=>{\n        const filename = file.file_guid\n        await api.remove_file_detail(id, filename).then(res=>{\n            const is_remove = res.data.isSuccess\n            if(is_remove){\n                this.removeItem(file)\n                this.setState({majorId: id})\n                console.log('file gelöscht............!')\n                this.resetUpload()\n            }\n        })\n\n    }\n\n    newConnect = async(file, id, count, chunkCount )=>{\n        var connect = true\n        while (connect){\n            console.log('wiederhole verbindung')\n                try{\n                    const ping = await api.create_ping()\n                    if(ping){\n                        console.log(ping.data.is)\n                        console.log('**** CONNECT *****')\n                        connect = false\n                        await this.counterOfFile(file, id, count , chunkCount )\n\n                    }\n                }catch{\n                    if(!this.state.showProgress){\n                        connect = false\n                    }\n                    await this.timeout(3000);\n                }\n        }\n    }\n    \n\n    newUpload = async()=>{\n        const answer =  await newUploadSwal()\n        if(answer){\n            this.setState({\n                upload_success: false, \n                use_link: null,\n                use_email: null\n            })\n        }\n    }\n\n    \n    progressAction = (progressEvent,count, fullCount , fileSize)=>{\n        const loadedFromCHunk = (progressEvent.loaded / progressEvent.total) * 100\n        const {eventArr} = this.state\n        //console.log(eventArr)\n        eventArr[count - 1] = loadedFromCHunk\n        var sum = eventArr.reduce(function(a, b){\n            return a + b;\n        }, 0);\n        this.cancelUpload()\n        const progress = sum / fullCount\n        this.setState({progress: progress, eventArr: eventArr})\n        \n        \n      }\n\n   \n\n\n    // ACTION\n    // user send data........\n    //\n    send = (infos)=>{\n        const {files} = this.state\n        this.setState({openSendView: false, showProgress: true, infos}, ()=>{\n            this.createMajor(files, infos)\n        })\n    }\n\n\n\n    createMajor = async (files, infos) => {\n        let majorId = this.state.majorId\n        if(!majorId){\n            const form = new FormData()\n            form.append('mail_to', [infos.mail_to])\n            form.append('mail_user', infos.mail_user)\n            form.append('message', infos.message)\n            form.append('use_download', infos.useDownload)\n            form.append('use_link', infos.useLink)\n            console.log('')\n            console.log('info ',infos)\n            console.log('')\n            //\n            // create Major Model\n            majorId = await api.create_major(form).then(res=>{\n                //console.log('res => ceate ', res)\n                if(res.data.isSuccess){\n                    return res.data.id\n                }else{\n                    if(res.data.clean){\n                        console.log('hier')\n                        const info = 'du hast gerade die gesamten Daten von Airchannel gelöscht !'\n                        simpleInfoView(info)\n                        this.setState(this.baseState)\n                        \n                    }\n                    const titel = 'Ups, Datenbank fehler !'\n                    const text = 'bitte versuchen Sie es zu eien späteren Zeitpunkt noch einmal'\n                    const cancelBtn = false\n                    const okBtnText = 'ok'\n                    cancelUploadSwal(titel, text, cancelBtn, okBtnText)\n                    this.setState(this.baseState)\n\n                    return false\n                }   \n            }) \n        }\n        \n        // start loop of  all chunks\n        if (majorId){\n            for (const file of files) {\n                this.cancelUpload()\n                this.setState({upload_begin: file.file_guid})\n                await this.upload_dispatcher(this.create_chunks(file), majorId)\n                this.setState({process:0,loaded:0, total:0, eventArr:[]})\n            }\n            console.log('all finish')\n            this.uploadCompleted(majorId)\n        }\n    }\n\n\n    \n\n    create_chunks= (file)=>{\n        let chunk_start  = 0\n        for(let i = 1; i<=file.chunk_count; i++){\n            const chunk = file.file_data.slice(chunk_start, CHUNK_SIZE + chunk_start)\n            file.chunks.push(chunk)\n            chunk_start = chunk_start + chunk.size\n        }\n        return file\n    }\n\n\n\n    countListLoop = (countlist, file,id)=>{\n        const promises = []\n        for(let i of countlist){\n            const count = parseInt(i) + 1\n            this.cancelUpload()\n            promises.push(this.createFile(file, id, count, file.chunks[i].size))\n        }\n        return promises\n    }\n\n    s3UrlLoop = async(countlist, file, id)=>{\n        const promises = []\n        for(let e of countlist){\n            const count = parseInt(e) + 1\n            const url = await this.createFile(file, id, count, file.chunks[e].size)\n            if(!url){\n                this.setState({fileLoopBreak: true})\n                break\n                \n            }\n            this.cancelUpload()\n            promises.push(this.uploadFileToS3(url, file.chunks, count, file.file_guid, file.file_size))\n        }\n        return promises\n    }\n    \n    \n    upload_dispatcher = async(file, id)=>{\n        const countArr = [...range(1, file.chunk_count)]\n        var i,j, countlist, chunk = UPLOAD_THREAD;\n        for (i = 0,j = countArr.length; i < j; i += chunk) {\n            countlist =countArr.slice(i, i + chunk);\n            this.cancelUpload()\n            if(this.state.fileLoopBreak){\n                return\n            }\n            await Promise.all(await this.s3UrlLoop(countlist, file, id))\n        }\n        this.removeItem(file)\n           \n    }\n\n    \n    createFile = async(file, id, count, chunkSize) => {\n        if(this.state.fileLoopBreak){\n            return\n        }\n        try {\n            const form = new FormData()\n            form.append('id', id)\n            form.append('count', count)\n            form.append('filename', file.file_guid)\n            form.append('file_size', file.file_size)\n            form.append('chunk_size', chunkSize)\n            form.append('origin_name', file.origin_name)\n            form.append('extension', file.file_data.name.split('.').slice(-1)[0])\n            if(file.folder_name){\n                form.append('folder', JSON.stringify(file.folder_name))\n            }\n            \n            \n            return await api.create_file(form).then(res=>{\n                if(res.data.isSuccess){\n                    const presignedPostData = res.data.s3\n                    return presignedPostData\n                }else{\n                    const titel = 'Ups, Datenbank fehler !'\n                    const text = 'bitte versuchen Sie es zu eien späteren Zeitpunkt noch einmal'\n                    const cancelBtn = false\n                    const okBtnText = 'ok'\n                    cancelUploadSwal(titel, text, cancelBtn, okBtnText)\n                    \n                    \n                }\n                \n            })\n           \n        }catch (error) {\n            //debugger\n            console.log('error', error)\n        }\n    } \n \n  \n\n\n    uploadFileToS3 = async(presignedPostData, chunks, count, filename, fileSize) => {\n        // create a form obj\n        if(this.state.fileLoopBreak){\n            return\n        }\n        const formData = new FormData();\n        // append the fields in presignedPostData in formData         \n        Object.keys(presignedPostData.fields).forEach(key => {\n                      formData.append(key, presignedPostData.fields[key]);\n                    });           \n        \n        formData.append(\"file\", chunks[count - 1]);\n        // post the data on the s3 url\n\n        const config = {\n            onUploadProgress: progressEvent => this.progressAction(progressEvent, count, chunks.length, fileSize )  /*console.log('chunk', count,' ',Math.floor(progressEvent.loaded/100000),  ' => ',Math.floor(progressEvent.total/100000))*/,\n            headers: {\n                'Content-Type': \"multipart/form-data\",\n             },\n             cancelToken: source.token\n          \n\n        }\n        //console.log(presignedPostData.url)\n\n        axiosRetry(axios, { retries: 8, retryCondition: (_error) => true});\n        await axios.post(presignedPostData.url, formData, config).then(()=>this.fileSetStorage(filename, count))\n        .catch(err=>{\n            if (axios.isCancel(err)) {\n                console.log(err.message);\n                formData.delete('file')\n              }\n            return \n        })\n        //console.log('____________')\n        \n             \n    }\n\n    fileSetStorage = (filename, count)=>{\n        api.filed(filename,count).then(res=>{\n            console.log(count,' =>  ', res.data.isSuccess)\n        })\n    }\n\n\n\n\n    uploadCompleted = async (id) => {\n        if(this.state.fileLoopBreak){\n            this.setState(this.baseState)\n            return\n        }\n        const response = await api.upload_detail(id)\n        const data = response.data;\n        if (data.isSuccess) {\n            if(data.link){\n                \n                const download_link =  data.link\n                if (typeof window !== 'undefined') {\n                    const path = window.location.protocol + '//' + window.location.host +'/'+  download_link; \n                    //console.log('show download link ', download_link)\n                    this.setState({upload_success: true, link: path, isLink: true})\n                }\n            }\n            if(data.email){\n                const sended_mail =  data.email\n                console.log('show download email', sended_mail)\n                this.setState({upload_success: true, mailConfirm: sended_mail, isLink: false})\n            }\n            this.resetUpload()\n            this.setState({upload_success: true})\n        }else{\n            if(data.list){\n                console.log('... es wurde nicht alles gespeichert !!!!')\n                console.log(data.list)\n                //this.resetUpload()\n            }\n        }\n    }\n    \n      \n\n\n    \n\n    // removed item from list \n    // .file_guid = uuid name from upload file\n    // stste new list \n    removeItem = (uploadFile)=>{\n        const fileList = this.state.files\n        const removed_list = fileList.filter(file=>{ \n            if(file.file_guid != uploadFile.file_guid){\n               return file\n           }\n        })\n        this.setState({files: removed_list,  progress: 0})\n    }\n\n    // removed item from list \n    // .file_guid = uuid name from upload file\n    // stste new list \n    removeFolder = (foldername)=>{\n        const fileList = this.state.files\n        var full_size = 0\n        const removed_list = fileList.filter(file=>{ \n            \n            if(file.folder_name[0] !== foldername){\n                full_size = full_size + file.file_size\n                return file\n           }\n        })\n        \n        \n        this.setState({files: removed_list, full_size, progress: 0})\n    }\n\n    \n    // if file in Upload list\n    // show button to open send menu\n    readyToSend = ()=>{\n        return(\n            <div className='ready_to_send_div'> \n                <button className='upload_icon_btn' hidden={this.state.openSendView} onClick={()=>this.setState({openSendView: true})}><VscArrowUp size={35} color='black'/></button>\n            </div>\n        )\n    }\n\n    \n\n\n    bottomView = ()=>{\n        const {mobile} = this.props\n        const {upload_success, inputFolder, files,filesSize} = this.state\n        const upload_size = 'gesamt '+ roundFileSize(filesSize)\n        if(upload_success){\n            return(\n                <div className='div_input_upload' onClick={()=>this.newUpload()}>\n                    <label className='label_input_upload'>\n                        <VscDiffAdded size={50} color={colors.black}/>\n                    </label>\n                    <div className='text_input_upload'>hinzufügen von Dateien</div>\n                </div>\n            )\n        }else{\n            const show_text = files.length>0 ? upload_size : 'hinzufügen von Dateien'\n            return(\n                <div className='div_input_upload'>\n                    <label className='label_input_upload'>\n                        {inputFolder? <input  className='input_upload' type='file' multiple onChange={this.inputHandle}  directory=\"\" webkitdirectory=\"\" msdirectory=\"\" odirectory=\"\"/> : <input  className='input_upload' type='file' multiple onChange={this.inputHandle}/> }\n                        <VscDiffAdded size={50} color={colors.black}/>\n                    </label>\n                    <div className='text_input_upload_size'  >{show_text}</div>\n                    {mobile? null: <div className='change_input_div' style={inputFolder? {background: 'rgba(0, 0, 0, 0.123)'}:null} onClick={()=>this.setState({inputFolder: inputFolder? false:true})}>{inputFolder? <VscFolderActive size={30}/>:<VscFolder size={30}/>}</div>}\n                    {files.length>0 ? this.readyToSend() : null}\n                    <div className='rodal_div_' >\n                        <Modal\n                            style={SendViewStyles}\n                            isOpen={this.state.openSendView} \n                            onRequestClose={()=>this.setState({openSendView: false})}\n                            ariaHideApp={false}\n                \n                        >\n                                <SendView \n                                    open={this.state.openSendView} \n                                    close={()=>this.setState({openSendView: false})} \n                                    infos={(infos)=>this.send(infos)} \n                                    mobile={this.props.mobile} \n                                    newOpen={()=>this.setState({openSendView: true})}\n                                />\n                                </Modal>\n                            \n                        \n                    </div>\n                </div>\n            )\n        }\n    }\n\n    \n\n    \n\n\n    render(){\n        const {showProgress, files, progress, upload_begin, link, upload_success, mailConfirm, isLink} = this.state\n        return (\n            <div className='frame_input_upload'>\n                {!showProgress?\n                    this.bottomView()\n                    :\n                    <div>{!showProgress? null: \n                        <div className='progressbar_view'>\n                            <div className='cancel_place'><CancelView loopBreak={()=>this.setState({fileLoopBreak: true})} /></div>\n                            <ProgressBar counter={progress} bgcolor={colors.accentColor}/>\n                        </div>}\n                    </div>\n                }\n                {files.length>0 ? <div className='upload_list' style={!showProgress? null: {'bottom': '2vh'}}><Itemlist items={files} load={upload_begin} removeItem={(e)=>this.removeItem(e)} removeFolder={(e)=>this.removeFolder(e)}/></div> : null}\n                {upload_success ? <div className={this.props.mobile?'upload_finish_mobile':'upload_finish'}><FinishView link={link} mailConfirm={mailConfirm} isLink={isLink} mobile={this.props.mobile} /></div> : null}    \n            </div>\n        )\n    }\n}\n\n\n","\nexport default function range(start, end){\n    return Array.from({ length: end - start + 1 }, (_, i) => i)\n}","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash } from \"react-icons/vsc\";\n\n\n\n\n\nexport default class Item extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n            filename: '',\n\n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n  \n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const item =  this.props.item\n        return(\n            <div className='fileList_item_frame'>\n                <div className='item_icon_div'>\n                    <div className='item_icon'><VscFile size={30}/></div>\n                </div>\n                <div className='download_item_name_div'>\n                    <div className='download_item_name'>{item.origin_name}</div>\n                </div>\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash, VscFolder } from \"react-icons/vsc\";\nimport SquareLoader from \"react-spinners/SquareLoader\";\nimport color from '../../colors';\nimport { colors } from '@material-ui/core';\n\n\n\n\n\nexport default class Folder extends React.Component{\n\n\n    \n\n    \n\n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const foldername =  this.props.folder\n        const is_load = this.props.load\n\n        return(\n            <div className='folder_frame_div'>\n                <div className='item_icon_div'>\n                    <div className='item_icon'>{is_load? <SquareLoader color={color.black} loading={true}  size={26} />:<VscFolder size={30}/>}</div>\n                </div>\n                <div className='item_name_div'>\n                    <div className='item_name'>{foldername}</div>\n                </div>\n                <div className='item_remove_div'>\n                    <button className='item_remove' onClick={()=>this.props.removeItem(foldername)}><VscTrash size ={18}/></button>\n                </div>\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport Item from './item'\nimport Folder from './folder'\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"list_item\">{props.value}</div>\n            </div>);\n}\n\nexport default class DownloadFileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      //console.log(prevProps, '   prevprps')\n      if(this.props.items.length !== prevProps.items.length){\n        console.log('items length änderung')\n      }\n    }\n\n\n\n\n    FileListOfItem=(item)=>{\n      const file = \n            <Item \n              item={item}\n              removeItem={(e)=>this.props.removeItem(e)}\n              load={this.props.load===item.file_guid? true: false}\n\n              />;\n      return file; \n\n      \n  }\n\n\n    folderList=()=>{\n      const lines = [] \n      var folder = ''\n      \n      for(let i of this.props.items){\n        if(i.folder.length<=0){\n          lines.push(this.FileListOfItem(i))\n          continue\n        }\n\n        \n        if(folder !== i.folder[0]){\n          lines.push(\n            <Folder\n              folder={i.folder[0]}\n              item={i}\n              removeItem={(e)=>this.props.removeFolder(e)}\n              //load={this.props.load===i.file_guid? true: false}\n\n              />\n            )\n        }\n        folder = i.folder[0]\n      }\n\n\n\n\n      const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item)} />);\n      return listItems; \n\n      \n  }\n\n\n    fileList=()=>{\n        const lines = [] \n        this.props.items.forEach(item => {\n            lines.push(\n              <Item \n                item={item}\n\n                />\n              )\n        });\n\n\n\n\n        const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item) } />);\n        return listItems; \n\n        \n    }\n  \n  \n  \n    render(){\n      return (\n        <div className='File_list_frame'>{this.fileList()}</div>\n      )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\n\n\n\nexport default class DownloadFileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          backcolor: 'transparent'\n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    /*\n    setBackground = ()=>{\n      const color = this.state.backcolor = 'transparent' ? 'white' : 'transparent'\n      this.setState({backcolor: color})\n    }\n    */\n  \n  \n  \n    render(){\n      return (\n        <div className='download_mess_frame' >{this.props.message}</div>\n      )\n    }\n      \n    \n  \n  \n  }","\n\nimport React from 'react';\nimport './index.css'\nimport api from './../api'\nimport axios from 'axios'\nimport ProgressBar from './../progressbar'\nimport colors from './../colors'\nimport DownloadFileList from './downloadFileList'\nimport DownloadMessageView from './downloadMessView'\nimport { VscArrowDown, VscInfo, VscCheck } from \"react-icons/vsc\";\nimport { downloadInfoView} from '../infoViews';\nimport { saveAs } from 'file-saver';\n\n\n\nexport default class DownloadView extends React.Component{\n\n  constructor(props){\n      super(props);\n      this.state={    \n         progress: 0,\n         loaded: 0,\n         total:0,\n         showProgress: false,\n         files: [],\n         majorInfo: {},\n         message: '',\n         isContent:false,\n         link:this.props.match.params.id,\n         complete: false,\n         openInfoView: false\n\n\n      }\n  }\n  componentDidMount(){\n    console.log(' DOWNLOAD VIEW ')\n    const link = this.props.match.params.id\n    this.checkLink(link)\n\n  }\n\n  progressAction = (progressEvent,fileSize)=>{\n    const {loaded, total} = this.state\n    if(progressEvent.loaded === progressEvent.total){\n      this.setState({loaded: loaded + progressEvent.loaded, total: total + progressEvent.total })\n    }\n    console.log(loaded + progressEvent.loaded, '  /  ', fileSize)\n    const progress =  (loaded + progressEvent.loaded) /  fileSize  * 100 \n    this.setState({progress: progress})\n  }\n\n  \n\n  infoView = async()=>{\n    const { mail_to, mail_user, date, use_download, use_link } = this.state.majorInfo\n    const {files} = this.state\n    const infos = {mail_to, mail_user, date, use_download, use_link, files }\n    let answer =  await downloadInfoView(infos) // alert View\n    if(answer){\n        return\n        }\n\n    \n\n}\n\n  checkLink = async(link)=>{\n    await api.is_major_detail(link).then(res=>{\n      if(res.data.isSuccess){\n        const data = res.data\n        this.setState({isContent: true, files: data.fileList, message: data.message, majorInfo: data.majorInfo})\n        console.log(res.data)\n      }\n    })\n  }\n\n\n\n  removeItem = (item)=>{\n    const fileList = this.state.files\n    const {link, majorInfo} = this.state\n    if(majorInfo.use_download){\n      this.deleteBucket(link)\n    }\n    const removed_list = fileList.filter(file=>{ \n        if(file.filename != item.filename){\n           return file\n       }else{\n           console.log('gefunden !!!!')\n       }\n    })\n    this.setState({files: removed_list, progress: 0, loaded:0, total:0, showProgress: false})\n  }\n\n  deleteBucket=async(link)=>{\n    await api.download_delete_detail(link).then(res=>{\n      if(res.data.isSuccess){\n        console.log(' delete bucket is success ')\n      }else{\n        console.log('delete bucket fail')\n      }\n\n    })\n  }\n\n\n  \n\n// test file  \n// http://localhost:3000/2a5af97c23ef66b824b893f583acfcdf5e613f36c4a1df27b020b4465ec9ffb4\n\n\n  file_loop = async () => {\n    const {files} = this.state\n\n    for (const file of files) {\n      const chunks = file.count\n      let start = 0\n      const promises = []\n      for(let i=1; i<=chunks; i++){\n        if(i%100==0 || i== chunks){\n          console.log(start, ' : ', i )\n          promises.push( await this.downloadFiles(file, start, i))\n          start = start + 100\n\n        }\n      }\n      const folderPath = file.folder.join('/')\n      const filePath = folderPath +'/'+file.origin_name\n      const resBuffers = await Promise.all(promises)\n      saveAs(new Blob([...resBuffers], {\n        type: 'application/octet-stream'\n      }),file.origin_name)\n      //\n      this.removeItem(file)\n       \n    }\n    //this.deleteBucket()\n    this.setState({showProgress: false, })\n  } \n\n\n  downloadFiles = async(file, start, end)=>{ \n    const params = `/${start}/${end}`\n    const isLocal = window.location.hostname=='localhost'\n    const _url = isLocal? 'http://127.0.0.1:8000/transmit/' :  process.env.REACT_APP_API_BASE_URL\n    const autori = isLocal? 'local' : process.env.REACT_APP_AUTORI\n    const {filename, file_size } = file\n    this.setState({showProgress:true})\n    const configDownload = {\n      responseType: 'arraybuffer',\n      onDownloadProgress:(progressEvent)=> {\n        this.progressAction(progressEvent, file_size)\n        //this.setState({counter: percentage})\n      },\n      url: _url + 'download/' + filename + params,\n      method: 'get',\n      headers:{\n        'Authorization': `${autori}`,\n      }\n      \n    }\n    return await axios(configDownload)\n        .then(res => {return res.data})\n        .catch(error => {\n            console.log(error.message);\n        });\n\n    \n  }\n\n  \n\n  messageView = ()=>{\n    const {message} = this.state\n    return(\n        <div>\n        {message.length>0 ? \n          <div className='download_message_view'>\n            <div className='download_message_text'> Eine Nachricht für dich </div>\n            <DownloadMessageView message={message} />\n          </div>\n          : null}\n        </div>\n            \n    )\n  }\n\n\n\n\n  infoBtnView = ()=>{\n    return (\n      <div className= 'download_info_btn_div' onClick={()=>this.infoView()}><VscInfo size={30} color={colors.black}/></div>\n    )\n  }\n\n  \n\n  changeDownloadView =()=>{\n    const complete = this.state.counter === 100\n    return(\n      <div>\n      {!complete?\n        <div className='div_input_upload'>\n            <div className='download_icon_div' onClick={()=>this.file_loop()}><VscArrowDown size={35} color={colors.black}/></div>\n            <div className='text_input_upload'>starte den download</div>\n            {this.infoBtnView()}\n        </div>\n        :\n        <div className='div_input_upload'>\n          <div className='download_icon_div' ><VscCheck size={30} color={colors.black}/></div>\n          <div className='text_input_upload'>download complete</div>\n        </div>\n      }\n      </div>\n    )\n  }\n\n  \n\n\n  render(){\n    const {isContent, showProgress, progress, files} = this.state\n    if(isContent){\n      return (\n        <div className='frame_input_upload' >\n          {!showProgress?\n            this.changeDownloadView():<div>{!showProgress? null: <div className='progressbar_view_download' ><ProgressBar counter={progress} bgcolor={colors.accentColor}/></div>}</div>\n          }\n          {files.length>0 ? <div className='download_list_view'>{this.messageView()}<DownloadFileList items={files} /></div> : null}\n          \n        </div>\n      );\n    }else{\n      return (\n        <div className='frame_input_upload' >\n            <div className='div_input_upload'>\n              <div className='text_input_upload_NO_CONTENT'>NO CONTENT</div>\n            </div>\n        </div>\n      );\n    }\n    \n  }\n}\n\n","import React from 'react';\nimport './index.css';\nimport { VscThreeBars } from \"react-icons/vsc\";\nimport colors from './../colors'\nimport Dropdown from 'react-dropdown';\n//import 'react-dropdown/style.css';\nimport { withRouter } from \"react-router-dom\";\n\nconst options = [\n    { value: '/info', label: 'Info' },\n    { value: '/help', label: 'Hilfe' },\n    { value: '/api', label: 'API' },\n    { value: '/speedtest', label: 'Speedtest' },\n    { value: '/imprint', label: 'Impressum' },\n    \n  ];\n\n\nclass DropdownMenu extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n        }\n                \n            \n  \n        \n    }\n  \n  \n    componentDidMount(){\n    }\n\n    \n\n    onSelect=(e)=>{\n        this.props.history.push(e.value)\n    }\n    \n      \n   \n  //<VscThreeBars size={30} color={colors.white}/> \n  \n    render(){\n      return (\n        <div className='menu_icon'>\n            <Dropdown \n                arrowClosed={<VscThreeBars size={30} color={colors.black}/>}\n                arrowOpen={<VscThreeBars size={30} color={colors.black}/>}\n                options={options} \n                onChange={this.onSelect} \n                value=''\n                placeholder=''\n                placeholderClassName='test' \n                placeHolderValue= {false} />\n            </div>\n        \n      )\n    }\n      \n    \n  \n  \n  }\n  export default withRouter(DropdownMenu);","import React, {Suspense} from 'react'\nimport {useImage} from 'react-image'\n \nconst BackSize = {\n  'width': '100%',\n  'height': '100%',\n  'display': 'flex',\n  'justifyContent': 'center',\n  'alignItems': 'center',\n  'overflow': 'hidden',\n}\n\nfunction MyImageComponent() {\n    const _width = window.screen.width + 200\n    const _height = window.screen.height + 200\n    //console.log( 'w . ', _width, ' h . ', _height)\n    \n    const {src} = useImage({\n        srcList: `https://picsum.photos/${_width}/${_height}?random=1`,\n    })\n\n    \n    return <div style={BackSize}><img src={src} /></div>\n}\n //<MyImageComponent />\nexport default function Appbackground() {\n  return (\n    <Suspense fallback={<div style={{height: '100%', width:'100%', background:'black'}}></div>}>\n      <MyImageComponent />\n    </Suspense>\n  )\n}","export default __webpack_public_path__ + \"static/media/AIR_1024px.e442824d.png\";","import React from 'react';\nimport './index.css';\nimport air from './../AIR_1024px.png'\nimport { withRouter } from \"react-router-dom\";\n\n\n\n\nclass HelpView extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      \n    }\n\n\n\n  \n  \n    render(){\n      return (\n        <div className='helpView'>\n            <div className='backToAirChannel_div' onClick={()=>this.props.history.push('/')}>back to <img className='air_icon' src={air} alt=\"Logo\"/> AIR channel</div>\n            help I need some body, help...\n        </div>\n      )\n    }\n      \n    \n  \n  \n  }\n  export default withRouter(HelpView);","import colors from './../colors'\n\n\n\nconst Progresser = (props) => {\n    const { counter} = props;\n\n\n    const progressDiv = {\n        height: '100vh',\n        width: 'auto',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: 'red'\n      }\n\n    const labelStyles = {\n        color: 'green',\n        height: 'auto',\n        width: '5em',\n        border: '1px solid rgba(151, 151, 151, 0.812)',\n        textShadow: `1px 1px ${colors.grey}`,\n        //paddingLeft:'3vw',\n        fontSize: '150%',\n        //minWidth: '50px',\n        fontWeight: 'bold',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginLeft: '30px',\n        backgroundColor: \"rgba(255, 255, 255, 0.512)\",\n        borderRadius: '2px',\n    }\n    const containerStyles = {\n      //position: 'absolute',\n      height: 'auto',\n      width: 'auto',\n      //backgroundColor: \"rgba(255, 255, 255, 0.512)\",\n      borderRadius: '0vh',\n      overflow: 'hidden',\n      borderRadius: '2px',\n      marginRight: '2em',\n      marginLeft: '2em',\n      background: colors.white\n      \n    }\n  \n    const fillerStyles = {\n        width: 'auto',\n        display: 'flex',\n\n        justifyContent: 'flex-end',\n        alignItems: 'flex-end',\n        height: `${(counter)}%`,\n        backgroundColor: colors.black,\n      \n    }\n\n  \n    return(\n        <div className='speedFrame'>\n            <div className='speedContainer'>\n                <div className='speedCount'>{`${Math.round(counter*10)/10} Mbit/s`}</div>\n                <div style={fillerStyles}/>\n            </div>\n        </div>\n    );\n  };\n  \n  export default Progresser;","import React from 'react';\nimport './index.css';\nimport air from './../AIR_1024px.png'\nimport { withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport Progresser from './progresser';\n\n\nconst TEN = 1024 * 1024 * 10 // 10485760   == 10 MB\nconst TWO = 1024 * 1024 * 2 // 10485760   == 10 MB\nconst ONE = 1024 * 1024 * 1\nconst KB_256 = 1024 * 256\nconst KB = 1024 \nconst KB_128 = 1024 * 128\nconst ONE_GB = 1024 * 1024 * 1024\nconst HUN = 1024 * 1024 * 100 \nconst unit = 'Mbit/s'\nconst MBIT = 125000\nconst cancelTokenUpload= axios.CancelToken.source(); \nconst cancelTokenDownload = axios.CancelToken.source(); \nclass SpeedtestView extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          upload: [],\n          download: [],\n  \n        }\n    }\n  \n  \n    componentDidMount(){\n      \n      //this.startTest()\n    }\n\n    startTest = async()=>{\n      console.log('start upload')\n      const up = await this.uploadSpeed()\n      console.log('start download')\n      const buffer = await this.downloadSpeed()\n      \n      //console.log('upload finish')\n    }\n\n   \n    arrayAvg(arr){\n      var i = 0, summ = 0, arrLen = arr.length;\n      while (i < arrLen) {\n          summ = summ + arr[i++];\n      }\n      return summ / arrLen;\n    }\n    \n  \n\n    createUploadBlob = ()=>{\n      return new Blob([new ArrayBuffer(HUN)], {type : 'application/octet-stream'})\n\n    }\n    getSpeedTestUrl = ()=>{\n      const isLocal = window.location.hostname=='localhost'\n      const autori = isLocal? 'local' : process.env.REACT_APP_AUTORI\n      const _url = isLocal? 'http://127.0.0.1:8000/speed/' :  process.env.REACT_APP_API_SPEED_URL\n      return {_url, autori}\n    }\n\n      \n      \n      \n     \n\n    uploadSpeed = async()=>{\n      const{_url, autori} = this.getSpeedTestUrl()\n      console.log(_url, autori)\n      const dummy = this.createUploadBlob()\n      const form = new FormData()\n      form.append('file', dummy)\n      const finishDownLoad = new Date().getTime() + 15000 \n      var runtime = new Date().getTime() \n      var startLoad = 0\n      const configUpload = {\n        onUploadProgress: progressEvent => {\n          if(new Date().getTime() <= finishDownLoad){\n            const loaded = progressEvent.loaded\n            console.log('____> ',loaded)\n            const loadSec = new Date().getTime()\n            const sec = ((loadSec - runtime) / 1000) \n            const downloadSizeToMBit = (loaded - startLoad) / MBIT\n            const mos = downloadSizeToMBit / sec\n            console.log(' upload ')\n            console.log('sec pro : ',sec, ' s')\n            console.log('size pro : ',downloadSizeToMBit, ' MBit' )\n            console.log('_____________')\n            console.log(mos, ' MBit/s')\n            console.log('_____________')\n            \n            \n            this.setState({upload: this.state.upload.concat(mos)})\n            startLoad = loaded\n            runtime = loadSec\n            \n    \n          }else{\n            const {upload} = this.state\n            this.setState({upload: this.state.upload.concat(this.arrayAvg(upload))})\n            console.log('CANCEL UPLOAD')\n            cancelTokenUpload.cancel();\n          } \n        },\n        url: _url + 'upload/',\n        data: form,\n        method: 'post',\n        cancelToken: cancelTokenUpload.token,\n        headers:{\n          'Authorization': `${autori}`,\n          'Content-Type': 'application/octet-stream', //'multipart/form-data;boundary=boundary',\n          'Accept': 'application/json;text/plain',\n        }\n      }\n      \n      \n      return await axios(configUpload).catch(error => {\n        console.log(error.message);\n      });\n      \n      \n    }\n\n  \n\n  \n\n\n    downloadSpeed = async()=>{ \n      const{_url, autori} = this.getSpeedTestUrl()\n      const finishDownLoad = new Date().getTime() + 15000 // 15 seconds of upload;\n      var startLoad = 0\n      var runtime = new Date().getTime() \n      var startTime = 0\n      const configDownload = {\n        responseType: 'arraybuffer',\n        onDownloadProgress:(progressEvent)=> {\n          if(new Date().getTime() <= finishDownLoad){\n            const loaded = progressEvent.loaded\n            const times = (progressEvent.timeStamp / 1000) - startTime\n            const loadSec = new Date().getTime()\n            const downloadSizeToMBit = (loaded - startLoad) / MBIT\n            const mos = downloadSizeToMBit / times\n            console.log(' Download ')\n            console.log('sec pro : ',times, ' s')\n            console.log('size pro : ',downloadSizeToMBit, ' MBit' )\n            console.log('_____________')\n            console.log(mos, ' MBit/s')\n            console.log('_____________')\n            \n            startLoad = loaded\n            runtime = loadSec\n            startTime = progressEvent.timeStamp / 1000\n            this.setState({download: this.state.download.concat(mos)})\n            \n\n          }else{\n            const {download} = this.state\n            this.setState({download: this.state.download.concat(this.arrayAvg(download))})\n            console.log('CANCEL DOWNLOAD')\n            cancelTokenDownload.cancel();\n          } \n          \n          \n          \n          \n        },\n        url: _url + 'download/',\n        method: 'get',\n        cancelToken: cancelTokenDownload.token,\n        headers:{\n          'Authorization': `${autori}`,\n          'Accept': 'application/octet-stream',\n        }\n      \n      \n      }\n    \n\n      return await axios(configDownload)\n        .then(res => {return res.data})\n        .catch(error => {\n            console.log(error.message);\n        });\n\n    \n    }\n\n\n    textView = (method)=>{\n      switch(method){\n\n          case 'UPLOAD TEST':\n              return(\n                  <div className='speedTextCon'>\n                      <div className='speedTextRow1'>bal blalalalaa</div>\n                      <div className='speedTextRow1'> tutusgsau</div>\n                  </div>\n              )\n\n          case 'DOWNLOAD TEST':\n              return(\n                  <div className='speedTextCon'>\n                      <div className='speedTextRow1'>nizaus</div>\n                      <div className='speedTextRow1'> tsahhsau</div>\n                  </div>\n              )\n\n          case 'test':\n              return\n\n          default:\n              return\n      }\n    }\n\n    \n    \n\n\n    render(){\n      const {upload, download} = this.state\n      const upMos = upload[upload.length - 1] ? upload[upload.length - 1] : 0\n      const downMos = download[download.length - 1] ? download[download.length - 1] : 0\n      \n\n      return (\n        <div className='speedViewMain'>\n            <div className='backToAirChannel_div' onClick={()=>this.props.history.push('/')}>back to <img className='air_icon' src={air} alt=\"Logo\"/> AIR channel</div>\n            <div className='prgressViewContainer'>\n              <div className='speedField'>\n                <Progresser counter={upMos} />\n                <div className='isRun'>UPLOAD TEST</div>\n                  {this.textView('UPLOAD TEST')}\n              </div>\n              <div className='speedField'>\n                <Progresser counter={downMos} />\n                <div className='isRun'>DOWNLOAD TEST</div>\n                  {this.textView('DOWNLOAD TEST')}\n              </div>\n              <div className='speedField'>\n                <Progresser counter={0} />\n                <div className='isRun'>TEST</div>\n                  {this.textView(' TEST')}\n              </div>\n            </div>\n            <div className='speedStartDiv'><button className='speedStartBtn' onClick={()=>this.startTest()}>START TEST</button></div>\n        </div>\n      )\n    }\n      \n  }\n  export default withRouter(SpeedtestView);","import React from 'react';\nimport './index.css';\nimport air from './../AIR_1024px.png'\nimport { withRouter } from \"react-router-dom\";\n\n\n\n\nclass InfoView extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      \n    }\n\n\n\n  \n  \n    render(){\n      return (\n        <div className='helpView'>\n            <div className='backToAirChannel_div' onClick={()=>this.props.history.push('/')}>back to <img className='air_icon' src={air} alt=\"Logo\"/> AIR channel</div>\n            ... non sign in temporary File transfer on web !\n        </div>\n      )\n    }\n      \n    \n  \n  \n  }\n  export default withRouter(InfoView);","import React from 'react';\nimport './index.css';\nimport air from './../AIR_1024px.png'\nimport { withRouter } from \"react-router-dom\";\n\n\n\n\nclass ImprintView extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      \n    }\n\n\n\n  \n  \n    render(){\n      return (\n        <div className='helpView'>\n            <div className='backToAirChannel_div' onClick={()=>this.props.history.push('/')}>back to <img className='air_icon' src={air} alt=\"Logo\"/> AIR channel</div>\n            somewhere in Hannover...\n        </div>\n      )\n    }\n      \n    \n  \n  \n  }\n  export default withRouter(ImprintView);","import React from 'react';\nimport './index.css';\nimport air from './../AIR_1024px.png'\nimport { withRouter } from \"react-router-dom\";\n\n\n\n\nclass ApiView extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      \n    }\n\n\n\n  \n  \n    render(){\n      return (\n        <div className='helpView'>\n            <div className='backToAirChannel_div' onClick={()=>this.props.history.push('/')}>back to <img className='air_icon' src={air} alt=\"Logo\"/> AIR channel</div>\n            s3 , but i work on self made ceph / Docker / Python solution\n        </div>\n      )\n    }\n      \n    \n  \n  \n  }\n  export default withRouter(ApiView);","import React from 'react';\nimport './App.css';\nimport { Route, Switch} from 'react-router-dom';\nimport UploadView from './uploadView'\nimport DownloadView from './downloadView'\nimport DropdownMenu from './dropdownMenu'\nimport Bg from './background'\nimport api from './api'\nimport HelpView from './helpView';\nimport SpeedtestView from './speedtestView';\nimport InfoView from './infoView'\nimport ImprintView from './imprintView';\nimport ApiView from './apiView';\nimport air from './AIR_1024px.png'\n\n\n\n\nconst Beta = <div className='open_beta'>open beta</div>\n\n\n\n\nexport default class App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      mobile: false,\n      height: '',\n      backend: false\n    }\n      \n\n    }\n  \n  componentDidMount(){\n    this.createPing()\n    window.addEventListener(\"resize\", this.updateWindowDimensions());\n    this.setState({height: window.innerHeight + \"px\"})\n  }\n\n  \n\n  updateWindowDimensions() {\n    const mobile = window.innerWidth<=600\n    document.documentElement.style.setProperty('--vh', `${window.innerHeight/100}px`);\n    this.setState({ mobile: mobile});\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  createPing = async()=>{\n    await api.create_ping().then(res=>{\n      if(res.data.is === 'pong'){\n        this.setState({backend: true})\n      }\n    })\n  }\n//         \n\n  headView = ()=>{\n    return(\n      <div className='head_view'>\n      <div className='title'><img className='air_icon' src={air} alt=\"Logo\"/> AIR channel{Beta}</div>\n        <div className='menu'><DropdownMenu /></div>\n      </div>\n    )\n  }\n\n  background = ()=>{\n    return(<div className='unkown_view'><Bg/></div>)\n    \n  }\n\n\n\n  routing = ()=> {\n    return (\n        <Switch>\n          <Route exact path=\"/help\" render={(props) => (<HelpView  {...props} mobile={this.state.mobile} />)}></Route>\n          <Route exact path=\"/info\" render={(props) => (<InfoView  {...props} mobile={this.state.mobile} />)}></Route>\n          <Route exact path=\"/speedtest\" render={(props) => (<SpeedtestView  {...props} mobile={this.state.mobile} />)}></Route>\n          <Route exact path=\"/imprint\" render={(props) => (<ImprintView  {...props} mobile={this.state.mobile} />)}></Route>\n          <Route exact path=\"/api\" render={(props) => (<ApiView  {...props} mobile={this.state.mobile} />)}></Route>\n          <Route exact path=\"/\" render={(props) => (\n            <div className='app_window' style={{height: this.state.height}}>\n              {this.headView()}\n              {this.background()}\n              <div className='actions_view'><UploadView  {...props} mobile={this.state.mobile} backend={this.state.backend} /></div>\n            </div>\n              )}>\n          </Route>\n          <Route  path=\"/:id\" render={(props) => (\n            <div className='app_window' style={{height: this.state.height}}>\n                {this.headView()}\n                {this.background()}\n                <div className='actions_view'><DownloadView {...props} mobile={this.state.mobile} backend={this.state.backend} /></div>\n            </div>\n              )}>\n          </Route>\n        </Switch> \n    );\n  }\n\n\n  \n\n  \n  render(){\n    return (\n      <div>{this.routing()}</div>\n    );\n  }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App/>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}