{"version":3,"sources":["api/index.js","colors/index.js","progressbar/index.js","uploadView/uploadFileList/item.js","uploadView/uploadFileList/index.js","uploadView/uploadFinishView/index.js","alertViews/index.js","uploadView/sendView/index.js","text/index.js","uploadView/cancelView/index.js","helpers/roundFileSze.js","infoViews/index.js","uploadView/index.js","helpers/getRange.js","downloadView/downloadFileList/item.js","downloadView/downloadFileList/index.js","downloadView/downloadMessView/index.js","downloadView/index.js","AIR_1024px.png","background/index.js","App.js","index.js"],"names":["axios","defaults","xsrfHeaderName","xsrfCookieName","is_local","window","location","hostname","_url","process","configForm_","headers","api","create","baseURL","axiosRetry","retries","apis","upload_detail","id","get","download_delete_detail","sender","delete","create_major","form","post","is_major_detail","download_stream","downFileName","extensionName","config","AxiosStream","download","is_mail_detail","mail","create_ping","create_file","multi_part_create","remove_file_detail","filename","filed","count","multi_part_persigned","multi_part_complete","color","highBlue","grey","pink","green","orange","white","black","accentColor","olive","lila","red","pastellgreen","yellow","grey_blue","background1","background2","background3","background_white","ProgressBar","props","bgcolor","counter","containerStyles","height","width","backgroundColor","borderRadius","overflow","fillerStyles","display","justifyContent","alignItems","colors","labelStyles","border","textShadow","fontSize","fontWeight","marginLeft","style","Math","floor","Item","item","this","is_load","load","className","loading","size","origin_name","onClick","removeItem","React","Component","ListItem","value","FileList","create_list","lines","items","forEach","push","e","file_guid","map","indexOf","state","prevProps","length","showView","isLink","data-for","data-tip","data-event","navigator","clipboard","writeText","link","place","effect","globalEventOff","afterShow","mailConfirm","type","condition","setState","alertView","title","text","cancelBtn","okBtnText","cancelBtnText","Swal","fire","background","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","dismiss","DismissReason","cancel","cancelUploadSwal","a","newUploadSwal","sendAlerts","alert","cancelBoolean","answer","ViewText","reset_state","useUserMail","useLink","useMail","useDownload","handleInput","target","name","handleMail","is_used","handleDownload","radioSwitchMail","valueR","FormControl","FormLabel","RadioGroup","onChange","FormControlLabel","control","Radio","label","useLinkOrMail","mail_user","mail_to","radioSwitchDownload","Switch","checked","downloadOptionText","send_info","message","res","data","isSuccess","infos","send_option","visible","wrapper","createRef","open","mobile","placeholder","rows","close","blue","CancelView","uploadCancel","loopBreak","roundFileSize","kb_size","round","mb_size","htmlLayout","date","use_download","use_link","files","_size","file_size","upload_size","ds","Date","is_mail","is_mail_to","is_use_download","is_use_link","toLocaleDateString","weekday","year","month","day","hour","infoView","html","downloadInfoView","htmlText","renderToString","simpleInfoView","SendViewStyles","content","top","left","right","bottom","marginRight","transform","overlay","CHUNK_SIZE","source","CancelToken","UploadView","resetUpload","showProgress","upload_success","timeout","ms","Promise","resolve","setTimeout","cancelUpload","fileLoopBreak","console","log","baseState","uploadIsCancel","file","majorId","newConnect","chunkCount","connect","ping","is","counterOfFile","newUpload","use_email","progressAction","progressEvent","fullCount","chunk","loaded","total","u","Array","from","values","reduce","acc","set","progress","getFileContext","file_arr","full_count","full_size","_file","_totalCount","ceil","_fileID","uuidv4","file_json","chunk_count","file_data","chunks","send","openSendView","createMajor","FormData","append","clean","upload_begin","upload_dispatcher","create_chunks","uploadCompleted","chunk_start","i","slice","promises_1","promises_2","countArr","start","end","_","j","countlist","parseInt","createFile","all","urlList","uploadFileToS3","bucket","chunkSize","split","s3","presignedPostData","formData","Object","keys","fields","key","onUploadProgress","cancelToken","token","retryCondition","_error","url","catch","err","isCancel","fileSetStorage","response","download_link","path","protocol","host","email","sended_mail","list","uploadFile","removed_list","filter","readyToSend","hidden","bottomView","show_text","multiple","isOpen","onRequestClose","ariaHideApp","newOpen","Map","DownloadFileList","backcolor","DownloadView","fileSize","majorInfo","checkLink","isContent","fileList","deleteBucket","file_loop","promises","downloadFiles","resBuffers","saveAs","Blob","params","isLocal","autori","configDownload","responseType","onDownloadProgress","method","error","messageView","infoBtnView","changeDownloadView","complete","match","openInfoView","MyImageComponent","_width","screen","_height","src","useImage","srcList","Appbackground","fallback","Beta","App","createPing","backend","routing","exact","render","addEventListener","updateWindowDimensions","innerHeight","innerWidth","document","documentElement","setProperty","removeEventListener","air","alt","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1b4cbb1e.chunk.js","sourcesContent":["\n\n/*\n.catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\n  \n*/\n\n\nimport axios from 'axios'\nimport AxiosStream from \"axios-stream\";\nimport axiosRetry from 'axios-retry';\n\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\nconst is_local = window.location.hostname ==='localhost'\n\nconst hostUrl = process.env.REACT_APP_API_BASE_URL \nconst autori = is_local? 'local' : process.env.REACT_APP_AUTORI\nconst _url = is_local? 'http://127.0.0.1:8000/transmit/' : hostUrl \n\n\n\n\n\nconst configForm_ = {\n  headers: { \n    'Authorization': `${autori}`,\n    'Content-Type': 'multipart/form-data;boundary=boundary',\n    'Accept': 'application/json;text/plain'\n  }\n}\n\n\n\n\n\nconst api = axios.create({\n    baseURL: _url\n\n})\naxiosRetry(api, { retries: 3 });\nexport const create_ping = () => api.get(`ping/`, configForm_)\n\nexport const create_major = form => api.post(`major/`, form, configForm_)\nexport const is_major_detail = sender => api.get(`major/${sender}`, configForm_)\n\nexport const create_file = form => api.post(`file/`,form , configForm_)\nexport const multi_part_create = form => api.post(`multipartcreate/`,form , configForm_) // ....UNSUSED\nexport const multi_part_persigned = form => api.post(`multipartpersigned/`,form , configForm_) // ....UNSUSED\nexport const multi_part_complete = form => api.post(`multipartcomplete/`,form , configForm_) // ....UNSUSED\nexport const filed = (filename, count) => api.get(`file/${filename}-${count}`, configForm_)\n\nexport const upload_detail = id => api.get(`upload/${id}`, configForm_)\nexport const download_delete_detail = sender => api.delete(`remove/${sender}`, configForm_)\nexport const remove_file_detail = (id, filename) => api.delete(`removefile/${id}/${filename}`, configForm_)\nexport const is_mail_detail = mail => api.get(`mailvali/${mail}`, configForm_)\n\nexport const download_stream = (downFileName,extensionName, config) => AxiosStream.download(downFileName, extensionName, config);\n\n\n\n\n\nconst apis = {\n  upload_detail,\n  download_delete_detail,\n  create_major,\n  is_major_detail,\n  download_stream,\n  is_mail_detail,\n  create_ping,\n  create_file,\n  multi_part_create,\n  remove_file_detail,\n  filed,\n  multi_part_persigned,\n  multi_part_complete\n\n    \n}\n\n\nexport default apis","\n \n// colors\nconst highBlue = '#5ba3c7'\nconst grey = '#f0f0f0'\nconst pink = '#e8c8c8'\nconst green = '#a3c49f'\nconst orange = '#ebd7b7'\nconst white = '#ffffff'\nconst black = '#212121'\nconst olive = '#c4d184'\nconst lila = '#9397d9'\nconst red = '#d993a0'\nconst pastellgreen = '#98b8a7'\nconst yellow = '#f0df48'\nconst cosmos_grey = '#353535'\n//const accentColor =  '#ff757e' \nconst accentColor =  '#62bce3'//  '#819cdb'//'#84c4ba' \nconst background1 = '#505a66'\nconst background2 = '#404954'\nconst background3 = '#606b78'\nconst background_white = 'rgba(187, 187, 187, 0.886)'\nconst beige = '#baaea2'\nconst grey_blue = '#505a66'\nconst color = {\n    highBlue, \n    grey, \n    pink, \n    green, \n    orange, \n    white, \n    black, \n    accentColor, \n    olive, \n    lila, \n    red, \n    pastellgreen, \n    yellow , \n    grey_blue,\n    background1,\n    background2,\n    background3,\n    background_white\n} \n\nexport default color\n","\n/*\n\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n    */\n\nimport colors from './../colors'\nconst ProgressBar = (props) => {\n    const { bgcolor, counter } = props;\n  \n    const containerStyles = {\n      //position: 'absolute',\n      height: '6vh',\n      width: '100%',\n      backgroundColor: \"rgba(255, 255, 255, 0.512)\",\n      borderRadius: '0vh',\n      overflow: 'hidden',\n      borderRadius: '2px',\n      marginRight: '2em',\n      marginLeft: '2em'\n      \n    }\n  \n    const fillerStyles = {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      height: '100%',\n      width: `${counter}%`,\n      backgroundColor: colors.black,\n      \n    }\n  \n    const labelStyles = {\n      color: 'black',\n      height: '6vh',\n      width: '5em',\n      border: '1px solid rgba(151, 151, 151, 0.812)',\n      textShadow: `1px 1px ${colors.grey}`,\n      //paddingLeft:'3vw',\n      fontSize: '150%',\n      //minWidth: '50px',\n      fontWeight: 'bold',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginLeft: '30px',\n      backgroundColor: \"rgba(255, 255, 255, 0.512)\",\n      borderRadius: '2px',\n    }\n    \n    const progressDiv = {\n      height: '100%',\n      width: '94%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }\n    \n \n\n\n\n    return (\n      <div style={progressDiv}>\n        <div style={labelStyles}>{`${Math.floor(counter)} %`}</div>\n        <div style={containerStyles}>\n          <div style={fillerStyles}>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  export default ProgressBar;","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash } from \"react-icons/vsc\";\nimport SquareLoader from \"react-spinners/SquareLoader\";\nimport color from '../../colors';\nimport { colors } from '@material-ui/core';\n\n\n\n\nexport default class Item extends React.Component{\n\n    \n\n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const item =  this.props.item\n        const is_load = this.props.load\n\n        return(\n            <div className='download_item_frame'>\n                <div className='item_icon_div'>\n                    <div className='item_icon'>{is_load? <SquareLoader color={color.black} loading={true}  size={26} />:<VscFile size={30}/>}</div>\n                </div>\n                <div className='item_name_div'>\n                    <div className='item_name'>{item.origin_name}</div>\n                </div>\n                <div className='item_remove_div'>\n                    <button className='item_remove' onClick={()=>this.props.removeItem(item)}><VscTrash size ={18}/></button>\n                </div>\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport Item from './item'\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"list_item\">{props.value}</div>\n            </div>);\n}\n\nexport default class FileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      if(this.props.items.length !== prevProps.items.length){\n      }\n    }\n\n    create_list=()=>{\n        const lines = [] \n        this.props.items.forEach(item => {\n          \n            lines.push(\n              <Item \n                item={item}\n                removeItem={(e)=>this.props.removeItem(e)}\n                load={this.props.load===item.file_guid? true: false}\n\n                />\n              )\n        });\n\n\n\n\n        const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item) } />);\n        return listItems; \n\n        \n    }\n  \n  \n  \n    render(){\n      return (\n        <div className='File_list_frame'>{this.create_list()}</div>\n      )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport ReactTooltip from \"react-tooltip\";\n\n\nexport default class FileList extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      place: \"top\",\n      type: \"dark\",\n      effect: \"float\",\n      condition: false\n    };\n  }\n\n  changePlace(place) {\n    this.setState({\n      place: place\n    });\n  }\n\n  changeType(type) {\n    this.setState({\n      type: type\n    });\n  }\n\n  changeEffect(effect) {\n    this.setState({\n      effect: effect\n    });\n  }\n\n  _onClick() {\n    this.setState({\n      condition: true\n    });\n  }\n\n  \n  \n  showView = ()=>{\n    if(!this.props.isLink){\n      return(\n        <div className='div_link'>\n            <div className='link_text'>der Downloadlink wurde erfolgreich an </div>\n            <div className='email_text'>{this.props.mailConfirm} </div>\n            <div className='link_text'>gesendet. </div>\n            <div className='link_text_2'>dein Download bleibt 12 Stunden lang gespeichert</div>\n            <div className='link_text_2'>alle Daten werden nach ablauf unwiederuflich gelöscht</div>\n          </div>\n      )\n    }else{\n      return(\n        <div className='div_link'>\n            <div className='link_text'> hier ist der link zum kopieren</div>\n            <a className='link_copy'\n                  data-for=\"custom-event\"\n                  data-tip=\"link wurde kopiert\"\n                  data-event=\"click focus\"\n                  onClick={() => {navigator.clipboard.writeText(this.props.link)}}\n                >\n                  {this.props.link}\n                </a>\n                <ReactTooltip id=\"custom-event\" place=\"right\" effect=\"solid\" globalEventOff=\"click\" afterShow={()=>{navigator.clipboard.writeText(this.props.link)}} />\n                <div className='link_text_2'>dein Download bleibt 12 Stunden lang gespeichert</div>\n                <div className='link_text_2'>alle Daten werden nach ablauf unwiederuflich gelöscht</div>\n          </div>\n      )\n    }\n  }\n\n\n\n\n\n  \n  \n  render(){\n    return (\n        <div className='view_finish'>\n          {this.showView()}\n        </div>\n    )\n  }\n    \n  \n  \n  }","import Swal from 'sweetalert2'\nimport colors from './../colors'\n\n\n\n\n\n\n//background: rgba(187, 187, 187, 0.886);\nconst alertView = (title, text, cancelBtn, okBtnText, cancelBtnText)=>{\n\n    // Alert POP UP\n    //\n    const e = Swal.fire({\n        background: 'rgba(187, 187, 187, 0.886)',\n        title: title,\n        text: text,\n        icon: 'warning',\n        showCancelButton: cancelBtn,\n        cancelButtonColor: colors.red,\n        confirmButtonColor: colors.highBlue,\n        confirmButtonText: okBtnText,\n        cancelButtonText: cancelBtnText\n      }).then((result) => {\n        if (result.isConfirmed) {\n            return true\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n            return false\n        }\n      })\n      return e\n}\n\n\nexport const cancelUploadSwal=async()=>{\n  // Alert POP UP\n //\n const titel = 'Abbruch?'\n const text = 'sind Sie Sicher, das Sie den Upload abbrechen möchten !'\n const cancelBoolean = true\n const okBtnText = 'Ja, abbrechen'\n const cancelBtnText = 'Nein, weiter hochladen'\n\n const answer =  await alertView(titel, text, cancelBoolean, okBtnText, cancelBtnText)\n if(answer){\n     return true\n }\n \n}\n\nexport const newUploadSwal = async()=>{\n\n  // Alert POP UP\n  //\n  const titel = 'Neuer Upload?'\n  const text = 'sind Sie Sicher, Sie haben keine möglichkeit mehr an den Downloadlink zu kommen!'\n  const cancelBoolean = true\n  const okBtnText = 'Ja, ich habe den link kopiert'\n  const cancelBtnText = 'Nein, ich kopiere mir den link nochmal'\n\n  const answer =  await alertView(titel, text, cancelBoolean, okBtnText, cancelBtnText)\n  if(answer){\n      return true\n  }\n  \n}\n\n\nexport const sendAlerts = async(alert)=>{\n  const title = 'E-mail exestiert nicht'\n  const cancelBoolean = false\n  const okBtnText = 'Ok'\n\n  switch(alert){\n    case 'mailuser':\n      var text = 'bitte überprüfen deine    Absender    Adresse'\n      var answer =  await alertView(title, text, cancelBoolean,okBtnText, null) // alert View\n      return answer\n\n    case 'mailto':\n      var text = 'bitte überprüfen deine   Empfänger   Adresse'\n      var answer =  await alertView(title, text, cancelBoolean,okBtnText, null) // alert View\n      return answer\n\n    case 'empty':\n      var text = 'Pflichtfelder sind nicht ausgefüllt !'\n      const new_title = 'keine Eingabe'\n      var answer =  await alertView(new_title, text, cancelBoolean,okBtnText, null) // alert View\n      return answer\n  }\n}","import React from 'react';\nimport './index.css';\nimport Radio from '@material-ui/core/Radio';\nimport Switch from '@material-ui/core/Switch';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport {sendAlerts} from './../../alertViews';\nimport api from './../../api'\nimport {colors} from '@material-ui/core';\nimport {USE_DOWNLOAD, USE_NOT_DOWNLOAD, PLACEHOLDER_TEXT} from './../../text'\n\n\n\n\n\n\n\nexport class ViewText extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            useLink: true,\n            useDownload: false,\n            message: '',\n            mail_user: '',\n            mail_to: '',\n            send_option:'link',\n            visible: true\n\n        }\n        this.wrapper = React.createRef();\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.open !== prevProps.open) {\n            this.reset_state()\n        }\n    }\n\n    reset_state = () => {\n        this.setState({\n            useUserMail: false,\n            useLink: true,\n            useMail: false,\n            useDownload: true\n        })\n    }\n\n    handleInput = ({ target }) => {\n        this.setState({ [target.name]: target.value })\n\n        \n    }\n\n    handleMail = () => {\n        const is_used = this.state.useLink? false : true\n        this.setState({ useLink: is_used});\n    };\n\n    handleDownload = () => {\n        //const used = event.target.value\n        const is_used = this.state.useDownload? false : true\n        this.setState({useDownload: is_used});\n    };\n\n    \n\n\n\n\n\n\n\n\n\n\n\n    radioSwitchMail = ()=>{\n        const valueR = this.state.useLink? 'link' : 'mail'\n        return(\n            <div className='send_view_change_zone_div'>\n                <div className='send_view_radio_div'>\n                    <FormControl >\n                        <FormLabel className='send_view_formlabel'>Übermittlungsart</FormLabel>\n                        <RadioGroup value={valueR} onChange={this.handleMail} >\n                            <FormControlLabel value=\"link\" control={<Radio color=\"default\"/>} label=\"Link\" />\n                            <FormControlLabel value=\"mail\" control={<Radio color=\"default\"/>} label=\"Link per mail\" />\n                        </RadioGroup>\n                    </FormControl>\n                </div>\n                {this.useLinkOrMail()}\n            </div>\n        )\n    }\n\n    useLinkOrMail = () => {\n        const { useLink } = this.state\n        if(!useLink){\n            return (\n                <div className='send_view_show_options'>\n                    <div className='send_view_div_input'>E-mail des Absenders:\n                        <input className='send_view_input' type='email' name='mail_user' value={this.state.mail_user} onChange={this.handleInput}></input>\n                    </div>\n                    <div className='send_view_div_input'>E-mail des Empfänger:\n                        <input className='send_view_input' type='email' name='mail_to' value={this.state.mail_to} onChange={this.handleInput}></input>\n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                <div className='send_view_show_options'>\n                    <div className='send_view_div'>\n                        <div className='send_view_div_linktext'>Erhalte einen Link nach dem Upload</div>\n                    </div>\n                </div>\n            )\n        }\n                \n          \n    }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    radioSwitchDownload = ()=>{\n        return(\n            <div className='send_view_change_zone_div'>\n                <div className='send_view_radio_div'>\n                    <FormControl >\n                    <FormLabel className='send_view_formlabel'>Download</FormLabel>\n                    <FormControlLabel control={\n                        <Switch size=\"medium\" color='primary' checked={this.state.useDownload} onChange={this.handleDownload} />}\n                        label=\"einmaliger Download\"\n                        />\n                    </FormControl>\n                </div>\n                {this.downloadOptionText()}\n            </div>\n        )\n    }\n\n    downloadOptionText = () => {\n        const { useDownload } = this.state\n        if(useDownload){\n            return (\n                <div className='sendview_info_text'>{USE_DOWNLOAD}</div>\n            )\n        }else{\n            return (\n                <div className='sendview_info_text'>{USE_NOT_DOWNLOAD}</div>\n            )\n        }\n        \n    }\n\n\n\n\n\n\n\n\n\n    send_info = async()=>{\n        const { mail_to, mail_user, message, useDownload, useLink  } = this.state\n        // sending option => use mail\n        if(!useLink){\n            // validate.... no input im E-mail field\n            if(!mail_user || !mail_to){\n                let answer =  await sendAlerts('empty')\n                if(answer){\n                    return\n                }\n            }\n            // validate.... e-mail Absender\n            const is_mail_user = await api.is_mail_detail(mail_user).then(res=>{return res.data.isSuccess})\n            if(!is_mail_user){\n                let answer =  await sendAlerts('mailuser')\n                if(answer){\n                    return\n                }\n            }\n            // validate.... e-mail Empfänger\n            const is_mail_to = await api.is_mail_detail(mail_to).then(res=>{return res.data.isSuccess})\n            if(!is_mail_to){\n                let answer =  await sendAlerts('mailto')\n                if(answer){\n                    return\n                }\n            }\n        }\n        this.props.infos({ mail_user, mail_to, message, useDownload, useLink })\n\n    }\n\n\n    hide() {\n        this.setState({ visible: false });\n    }\n    \n\n    render() {\n        \n        return (\n            <div className={this.props.mobile?'send_view_dialog_mobile':'send_view_dialog'}>\n                <div className={this.props.mobile?'send_view_frame_mobile':'send_view_frame'}>\n                    <div className='send_view_title_div'>\n                        Datenübertragung\n                    </div>\n                    <div className='send_view_change_zone'>{this.radioSwitchDownload()}</div>\n                    <div className='send_view_change_zone'>{this.radioSwitchMail()}</div>\n                    <div className='send_view_div'>\n                        <textarea className='send_view_message' placeholder={PLACEHOLDER_TEXT} rows={6} type='text' name='message' value={this.state.message} onChange={this.handleInput}></textarea>\n                    </div>\n                    <div className='send_view_btn_div'>\n                        <button className='send_btn' onClick={() => this.props.close()}>abbruch</button>\n                        <button className='send_btn' style={{color: colors.blue}} onClick={() => this.send_info()}>senden</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ViewText;\n\n\n\n","// Fix strings in App\n\nexport const USE_DOWNLOAD = \" Nach dem ersten Dowload werden alle Daten der Übertragung gelöscht und es ist kein weiter Download mehr möglich! \"\nexport const USE_NOT_DOWNLOAD = \" Nach dem Upload werden alle deine Daten, 12 Std lang in einer Cloud gespeichert und können abgerufen werden!  \"\nexport const PLACEHOLDER_TEXT = '...schreibe eine Nachricht an den Empfänger ? '","\n  \nimport React from 'react';\nimport './index.css'\nimport { cancelUploadSwal, newUploadSwal } from './../../alertViews';\n\n\n\n\nexport default class CancelView extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={ \n            \n\n        }\n        \n    }\n  \n    uploadCancel = async()=>{\n        const answer =  cancelUploadSwal\n        if(answer){\n            this.props.loopBreak()\n        }\n        \n    }\n\n    \n    render(){\n            return (\n                <div className='progressbar_btn_div'>\n                    <button onClick={()=>this.uploadCancel()}  className='upload_cancel'>STOP UPLOAD</button>\n                </div>\n            )\n    }\n      \n    \n  \n  \n  }\n\n\n","\nexport default function roundFileSize(size){\n    // kilo bytes\n    const kb_size = Math.round(size / 1000) \n    //mega bytes\n    if(kb_size > 1000){\n        const mb_size = Math.round(size / 100000) / 10 \n        // giga bytes\n        if(mb_size > 2000){\n            const gb_size = Math.round(size / 10000000) / 100 \n            return gb_size + '  GB'\n        }\n        return mb_size + '  MB'\n    }\n    return kb_size + '  KB'\n}","import Swal from 'sweetalert2'\nimport colors from './../colors'\nimport { renderToString } from 'react-dom/server'\nimport roundFileSize from '../helpers/roundFileSze';\n\n\nconst htmlLayout = (infos)=>{\n  const { mail_to, mail_user, date, use_download, use_link, files } = infos\n  let _size = 0\n  for (const file of files) {\n    _size = _size + file.file_size\n  };\n  const upload_size = 'gesamt '+ roundFileSize(_size)\n  const options = { weekday: 'long', year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric' };\n  const ds = new Date(date)\n  const is_mail = mail_user ? mail_user : 'keine Angabe'\n  const is_mail_to = mail_to === [''] ? mail_to : 'keine Angabe'\n  const is_use_download = use_download ? 'einmailger Download': 'upload wird nach 12 Std gelöscht'\n  const is_use_link = use_link ? 'upload-Link' : 'E-mail Benachrichtung'\n  return(\n    <div >\n        <div style={{fontWeight: '600',height: '1.5em'}}> Erstellt: <span style={{fontWeight: '300'}}> {ds.toLocaleDateString(\"de-DE\", options)}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Dateigröße: <span style={{fontWeight: '300'}}> {upload_size}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Absender: <span style={{fontWeight: '300'}}> {is_mail}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Empfänger: <span style={{fontWeight: '300'}}> {is_mail_to}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Speicher Option: <span style={{fontWeight: '300'}}> {is_use_download}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Übermittlungsart: <span style={{fontWeight: '300'}}> {is_use_link}</span></div>\n    </div>\n  )\n}\n\n\n//background: rgba(187, 187, 187, 0.886);\nconst infoView = (title, text, cancelBtn, okBtnText, cancelBtnText)=>{\n\n    // Alert POP UP\n    //\n    const e = Swal.fire({\n        background: 'rgba(187, 187, 187, 0.886)',\n        title: title,\n        html: text,\n        icon: 'info',\n        showCancelButton: cancelBtn,\n        cancelButtonColor: colors.red,\n        confirmButtonColor: colors.highBlue,\n        confirmButtonText: okBtnText,\n        cancelButtonText: cancelBtnText\n      }).then((result) => {\n        if (result.isConfirmed) {\n            return true\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n            return false\n        }\n      })\n      return e\n}\n\n\n\n\n\nexport const  downloadInfoView = async(infos)=>{\n  const title = 'Upload Infos'\n  const cancelBoolean = false\n  const okBtnText = 'Ok'\n  let htmlText = renderToString(htmlLayout(infos))\n  let answer =  await infoView(title, htmlText, cancelBoolean,okBtnText, null) // alert View\n  if(answer){\n      return\n      }\n}\n\nexport const  simpleInfoView = async(infos)=>{\n  const title = 'FUCK !'\n  const cancelBoolean = false\n  const okBtnText = 'Ok'\n  let htmlText = infos\n  let answer =  await infoView(title, htmlText, cancelBoolean,okBtnText, null) // alert View\n  if(answer){\n      return\n      }\n}","\n  \nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './index.css'\nimport api from './../api'\nimport ProgressBar from './../progressbar'\nimport Itemlist from './uploadFileList'\nimport FinishView from './uploadFinishView'\nimport SendView from './sendView'\nimport range from '../helpers/getRange';\nimport CancelView from './cancelView';\nimport colors from './../colors'\nimport { VscDiffAdded } from \"react-icons/vsc\";\nimport { cancelUploadSwal, newUploadSwal } from './../alertViews';\nimport { simpleInfoView } from './../infoViews';\nimport Modal from 'react-modal';\nimport roundFileSize from '../helpers/roundFileSze';\nimport axios from 'axios'\nimport axiosRetry from 'axios-retry';\n\nconst SendViewStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      border: `1px solid ${colors.black}`,\n      borderRadius: '2px',\n      background: 'rgba(236, 236, 236, 0.668)'\n    },overlay: { background: 'rgba(64, 64, 64, 0.668)' } // blur background\n};\n\n\nconst CHUNK_SIZE = 548576 //1048576 * 2// 1MB \nconst BUCKET_COUNT = 110\nconst UPLOAD_THREAD = 170\nconst source = axios.CancelToken.source();\n\nexport default class UploadView extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={ \n            files:[],\n            infos:{},\n            showProgress: false,\n            full_count: 0,\n            full_size: 0,\n            progress: 0,\n            openSendView: false,\n            mailConfirm: '',\n            upload_success: false,\n            visible: false,\n            link: '',\n            isLink: null,\n            fileLoopBreak: false,\n            majorId: null,\n            loaded: new Map(),\n            upload_begin: ''\n\n        }\n        this.baseState = this.state \n        \n    }\n  \n    \n    resetUpload = () => {\n        this.setState({\n            showProgress: false,\n            process: 0,\n            upload_success: false,\n        })\n    }\n\n    timeout=(ms)=> {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    cancelUpload = ()=>{\n        \n        if(this.state.fileLoopBreak){\n            console.log('this.cancelUpload')\n            source.cancel('post canceled.')\n            this.setState(this.baseState)\n        }\n    }\n\n    \n\n    uploadIsCancel = async(id, file)=>{\n        const filename = file.file_guid\n        await api.remove_file_detail(id, filename).then(res=>{\n            const is_remove = res.data.isSuccess\n            if(is_remove){\n                this.removeItem(file)\n                this.setState({majorId: id})\n                console.log('file gelöscht............!')\n                this.resetUpload()\n            }\n        })\n\n    }\n\n    newConnect = async(file, id, count , chunkCount )=>{\n        var connect = true\n        while (connect){\n            console.log('wiederhole verbindung')\n                try{\n                    const ping = await api.create_ping()\n                    if(ping){\n                        console.log(ping.data.is)\n                        console.log('**** CONNECT *****')\n                        connect = false\n                        await this.counterOfFile(file, id, count , chunkCount )\n\n                    }\n                }catch{\n                    if(!this.state.showProgress){\n                        connect = false\n                    }\n                    await this.timeout(3000);\n                }\n        }\n    }\n    \n\n    newUpload = async()=>{\n        const answer =  await newUploadSwal()\n        if(answer){\n            this.setState({\n                upload_success: false, \n                use_link: null,\n                use_email: null\n            })\n        }\n    }\n\n    progressAction = (progressEvent, count, fullCount)=>{\n        this.cancelUpload()\n        const chunk = ((progressEvent.loaded/10000) / (progressEvent.total/10000)) * 100\n        console.log('chunk ',count,': ',Math.floor(progressEvent.loaded/100000),  ' => ',Math.floor(progressEvent.total/100000))\n        const add = (acc, a)=>{\n            return acc + a\n        }\n        const u = Array.from(this.state.loaded.values()).reduce(add, 0)\n        this.state.loaded.set(count , chunk)\n        this.setState({progress: u / fullCount})\n    }\n\n    // ********************\n    // *******FIIE*********\n    // ********************\n    getFileContext = (e) => {\n        const files = []\n        const file_arr = Array.from(e.target.files)\n        var full_count = 0\n        var full_size = this.state.full_size\n        file_arr.forEach(file=>{\n            const _file = file;\n            const _totalCount =  Math.ceil(file.size / CHUNK_SIZE) // counts of cjunks\n            const _fileID = uuidv4() \n            const file_json = {\n                chunk_count: _totalCount,\n                file_size: _file.size,\n                origin_name: _file.name,\n                file_guid: _fileID,\n                file_data: _file,\n                chunks: []\n            }\n            full_count = full_count + _totalCount\n            full_size = full_size + _file.size\n            files.push(file_json)\n        })\n        this.setState({files: [...this.state.files, ...files], full_count: this.state.full_count + full_count, full_size})\n        \n    }\n\n\n    // ACTION\n    // user send data........\n    //\n    send = (infos)=>{\n        const {files} = this.state\n        this.setState({openSendView: false, showProgress: true, infos}, ()=>{\n            this.createMajor(files, infos)\n        })\n    }\n\n\n\n    createMajor = async (files, infos) => {\n        let majorId = this.state.majorId\n        if(!majorId){\n            const form = new FormData()\n            form.append('mail_to', infos.mail_to)\n            form.append('mail_user', infos.mail_user)\n            form.append('message', infos.message)\n            form.append('use_download', infos.useDownload)\n            form.append('use_link', infos.useLink)\n            //\n            // create Major Model\n            //\n            //\n            //\n            majorId = await api.create_major(form).then(res=>{\n                //console.log('res => ceate ', res)\n                if(res.data.isSuccess){\n                    return res.data.id\n                }else{\n                    if(res.data.clean){\n                        console.log('hier')\n                        const info = 'du hast gerade die gesamten Daten von Airchannel gelöscht !'\n                        simpleInfoView(info)\n                        this.resetUpload()\n                        \n                    }\n                    return false\n                }   \n            }) \n        }\n        \n        // start loop of  all chunks\n        if (majorId){\n            for (const file of files) {\n                this.cancelUpload()\n                this.setState({upload_begin: file.file_guid})\n                await this.upload_dispatcher(this.create_chunks(file), majorId)\n            }\n            console.log('all finish')\n            this.uploadCompleted(majorId)\n        }\n    }\n\n\n    \n\n    create_chunks= (file)=>{\n\n        let chunk_start  = 0\n        for(let i = 1; i<=file.chunk_count; i++){\n            const chunk = file.file_data.slice(chunk_start, CHUNK_SIZE + chunk_start)\n            //console.log(max_chunk_size,'........ ',chunk.size)\n            file.chunks.push(chunk)\n            chunk_start = chunk_start + chunk.size\n        }\n        return file\n    }\n\n    \n    \n    upload_dispatcher = async(file, id)=>{\n        console.log(file)\n        const promises_1 = []\n        const promises_2 = []\n        const countArr = [...range(1, file.chunk_count)]\n        console.log(countArr)\n        var i,j, countlist, chunk = UPLOAD_THREAD;\n        for (i = 0,j = countArr.length; i < j; i += chunk) {\n            countlist =countArr.slice(i, i + chunk);\n            this.cancelUpload()\n            //console.log(countlist)\n            for(let i of countlist){\n                const count = parseInt(i) + 1\n                this.cancelUpload()\n                //console.log(count)\n                promises_1.push(this.createFile(file, id, count,file.chunks[i].size))\n            }\n            const urlList = await Promise.all(promises_1)\n            promises_1.length = 0 \n            for(let e of urlList){\n                this.cancelUpload()\n                promises_2.push(this.uploadFileToS3(e, file.chunks, parseInt(e.bucket), file.file_guid, id))\n            }\n            await Promise.all(promises_2)\n            promises_2.length = 0\n        }\n        console.log('finish')\n        this.removeItem(file)\n           \n    }\n\n    \n    createFile = async(file, id, count, chunkSize) => {\n        try {\n            const form = new FormData()\n            form.append('id', id)\n            form.append('chunks', count)\n            form.append('filename', file.file_guid)\n            form.append('file_size', file.file_size)\n            form.append('chunk_size', chunkSize)\n            form.append('origin_name', file.origin_name)\n            form.append('extension', file.file_data.name.split('.').slice(-1)[0])\n            \n            return await api.create_file(form).then(res=>{\n                const presignedPostData = res.data.s3\n                return presignedPostData\n            })\n           \n        }catch (error) {\n            //debugger\n            console.log('error', error)\n        }\n    } \n \n  \n\n\n    uploadFileToS3 = async(presignedPostData, chunks, count, filename, id) => {\n        // create a form obj\n        const formData = new FormData();\n        // append the fields in presignedPostData in formData         \n        Object.keys(presignedPostData.fields).forEach(key => {\n                      formData.append(key, presignedPostData.fields[key]);\n                    });           \n        \n        // append the file\n        console.log(count - 1)\n        formData.append(\"file\", chunks[count - 1]);\n        // post the data on the s3 url\n\n        const config = {\n            onUploadProgress: progressEvent => this.progressAction(progressEvent, count, chunks.length)  /*console.log('chunk', count,' ',Math.floor(progressEvent.loaded/100000),  ' => ',Math.floor(progressEvent.total/100000))*/,\n            headers: {\n                'Content-Type': \"multipart/form-data\",\n             },\n             cancelToken: source.token\n          \n\n        }\n        //console.log(presignedPostData.url)\n\n        axiosRetry(axios, { retries: 8, retryCondition: (_error) => true});\n        await axios.post(presignedPostData.url, formData, config)\n        .then(res=>{\n            \n            console.log(' res ', count, ' : ', res)\n            //this.fileSetStorage(filename, count) \n            \n            \n        }).catch(err=>{\n            if (axios.isCancel(err)) {\n                console.log(err.message);\n                formData.delete('file')\n              }\n            return \n        })\n             \n    }\n\n    fileSetStorage = (filename, count)=>{\n        api.filed(filename,count).then(res=>{\n            console.log(count,' =>  ', res.data.isSuccess)\n        })\n    }\n\n    uploadCompleted = async (id) => {\n        \n        if(this.state.fileLoopBreak){\n            this.setState({fileLoopBreak: false})\n            return\n        }\n        const response = await api.upload_detail(id)\n        const data = response.data;\n        if (data.isSuccess) {\n            if(data.link){\n                \n                const download_link =  data.link\n                if (typeof window !== 'undefined') {\n                    const path = window.location.protocol + '//' + window.location.host +'/'+  download_link; \n                    //console.log('show download link ', download_link)\n                    this.setState({upload_success: true, link: path, isLink: true})\n                }\n            }\n            if(data.email){\n                const sended_mail =  data.email\n                console.log('show download email', sended_mail)\n                this.setState({upload_success: true, mailConfirm: sended_mail, isLink: false})\n            }\n            this.resetUpload()\n            this.setState({upload_success: true})\n        }else{\n            if(data.list){\n                console.log('... es wurde nicht alles gespeichert !!!!')\n                console.log(data.list)\n                //this.resetUpload()\n            }\n        }\n    }\n    \n      \n\n\n    \n\n    // removed item from list \n    // .file_guid = uuid name from upload file\n    // stste new list \n    removeItem = (uploadFile)=>{\n        let full_size = this.state.full_size\n        full_size = full_size - uploadFile.file_size\n        const fileList = this.state.files\n        const removed_list = fileList.filter(file=>{ \n            if(file.file_guid != uploadFile.file_guid){\n               return file\n           }\n        })\n        this.setState({files: removed_list, full_size, progress: 0})\n    }\n\n    \n\n    // if file in Upload list\n    // show button to open send menu\n    readyToSend = ()=>{\n        return(\n            <div className='ready_to_send_div'> \n                <button className='start_upload_btn' hidden={this.state.openSendView} onClick={()=>this.setState({openSendView: true})}>senden</button>\n            </div>\n        )\n    }\n\n    \n\n    bottomView = (files)=>{\n        const {full_size, upload_success} = this.state\n        const upload_size = 'gesamt '+ roundFileSize(full_size)\n        if(upload_success){\n            return(\n                <div className='div_input_upload' onClick={()=>this.newUpload()}>\n                    <label className='label_input_upload'>\n                        <VscDiffAdded size={50} color={colors.black}/>\n                    </label>\n                    <div className='text_input_upload'>hinzufügen von Dateien</div>\n                </div>\n            )\n        }else{\n            const show_text = files.length>0 ? upload_size : 'hinzufügen von Dateien'\n            return(\n                <div className='div_input_upload'>\n                    <label className='label_input_upload'>\n                        <input  className='input_upload'   type='file' multiple onChange={this.getFileContext} />\n                        <VscDiffAdded size={50} color={colors.black}/>\n                    </label>\n                    <div className='text_input_upload_size'>{show_text}</div>\n                    {files.length>0 ? this.readyToSend() : null}\n                    <div className='rodal_div' >\n                        <Modal\n                            style={SendViewStyles}\n                            isOpen={this.state.openSendView} \n                            onRequestClose={()=>this.setState({openSendView: false})}\n                            ariaHideApp={false}\n                \n                        >\n                            <SendView \n                                open={this.state.openSendView} \n                                close={()=>this.setState({openSendView: false})} \n                                infos={(infos)=>this.send(infos)} \n                                mobile={this.props.mobile} \n                                newOpen={()=>this.setState({openSendView: true})}\n                            />\n                        </Modal>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    \n\n\n    render(){\n        const {showProgress, files, progress, upload_begin, link, upload_success, mailConfirm, isLink} = this.state\n        return (\n            <div className='frame_input_upload'>\n                {!showProgress?\n                    this.bottomView(files)\n                    :\n                    <div>{!showProgress? null: \n                        <div className='progressbar_view'>\n                            <ProgressBar counter={progress} bgcolor={colors.accentColor}/>\n                            <div className='cancel_place'><CancelView loopBreak={()=>this.setState({fileLoopBreak: true})} /></div>\n                        </div>}\n                    </div>\n                }\n                {files.length>0 ? <div className='upload_list'><Itemlist items={files} load={upload_begin} removeItem={(e)=>this.removeItem(e)}/></div> : null}\n                {upload_success ? <div className='upload_finish'><FinishView link={link} mailConfirm={mailConfirm} isLink={isLink} /></div> : null}    \n            </div>\n        )\n    }\n}\n\n\n","\nexport default function range(start, end){\n    return Array.from({ length: end - start + 1 }, (_, i) => i)\n}","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash } from \"react-icons/vsc\";\n\n\n\n\n\nexport default class Item extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n            filename: '',\n\n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n  \n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const item =  this.props.item\n        return(\n            <div className='download_item_frame'>\n                <div className='download_item_icon_div'>\n                    <div className='download_item_icon'><VscFile size={30}/></div>\n                </div>\n                <div className='download_item_name_div'>\n                    <div className='download_item_name'>{item.origin_name}</div>\n                </div>\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport Item from './item'\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"list_item\">{props.value}</div>\n            </div>);\n}\n\nexport default class DownloadFileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      //console.log(prevProps, '   prevprps')\n      if(this.props.items.length !== prevProps.items.length){\n        console.log('items length änderung')\n      }\n    }\n\n    create_list=()=>{\n        const lines = [] \n        this.props.items.forEach(item => {\n            lines.push(\n              <Item \n                item={item}\n\n                />\n              )\n        });\n\n\n\n\n        const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item) } />);\n        return listItems; \n\n        \n    }\n  \n  \n  \n    render(){\n      return (\n        <div className='File_list_frame'>{this.create_list()}</div>\n      )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\n\n\n\nexport default class DownloadFileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          backcolor: 'transparent'\n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    /*\n    setBackground = ()=>{\n      const color = this.state.backcolor = 'transparent' ? 'white' : 'transparent'\n      this.setState({backcolor: color})\n    }\n    */\n  \n  \n  \n    render(){\n      return (\n        <div className='download_mess_frame' >{this.props.message}</div>\n      )\n    }\n      \n    \n  \n  \n  }","\n\nimport React from 'react';\nimport './index.css'\nimport api from './../api'\nimport axios from 'axios'\nimport ProgressBar from './../progressbar'\nimport colors from './../colors'\nimport DownloadFileList from './downloadFileList'\nimport DownloadMessageView from './downloadMessView'\nimport { VscArrowDown, VscInfo, VscCheck } from \"react-icons/vsc\";\nimport { downloadInfoView} from '../infoViews';\nimport { saveAs } from 'file-saver';\n\n\n\nexport default class DownloadView extends React.Component{\n\n  constructor(props){\n      super(props);\n      this.state={    \n         progress: 0,\n         loaded: 0,\n         total:0,\n         showProgress: false,\n         files: [],\n         majorInfo: {},\n         message: '',\n         isContent:false,\n         link:this.props.match.params.id,\n         complete: false,\n         openInfoView: false\n\n\n      }\n  }\n  componentDidMount(){\n    console.log(' DOWNLOAD VIEW ')\n    const link = this.props.match.params.id\n    this.checkLink(link)\n\n  }\n\n  progressAction = (progressEvent,fileSize)=>{\n    const {loaded, total} = this.state\n    if(progressEvent.loaded === progressEvent.total){\n      this.setState({loaded: loaded + progressEvent.loaded, total: total + progressEvent.total })\n    }\n    console.log(loaded + progressEvent.loaded, '  /  ', fileSize)\n    const progress =  (loaded + progressEvent.loaded) /  fileSize  * 100 \n    this.setState({progress: progress})\n  }\n\n  \n\n  infoView = async()=>{\n    const { mail_to, mail_user, date, use_download, use_link } = this.state.majorInfo\n    const {files} = this.state\n    const infos = {mail_to, mail_user, date, use_download, use_link, files }\n    let answer =  await downloadInfoView(infos) // alert View\n    if(answer){\n        return\n        }\n\n    \n\n}\n\n  checkLink = async(link)=>{\n    await api.is_major_detail(link).then(res=>{\n      if(res.data.isSuccess){\n        const data = res.data\n        this.setState({isContent: true, files: data.fileList, message: data.message, majorInfo: data.majorInfo})\n        //console.log(res.data)\n      }\n    })\n  }\n\n\n\n  deleteBucket=async()=>{\n    const {link} = this.state\n    await api.download_delete_detail(link).then(res=>{\n      if(res){\n        this.setState({showProgress: false, })\n      }\n\n    })\n  }\n\n  \n\n  \n\n// test file  \n// http://localhost:3000/2a5af97c23ef66b824b893f583acfcdf5e613f36c4a1df27b020b4465ec9ffb4\n\n\n  file_loop = async () => {\n    const {files} = this.state\n\n    for (const file of files) {\n      const chunks = file.count\n      let start = 0\n      const promises = []\n      for(let i=1; i<=chunks; i++){\n        if(i%100==0 || i== chunks){\n          console.log(start, ' : ', i )\n          promises.push( await this.downloadFiles(file, start, i))\n          start = start + 100\n\n        }\n      }\n      const resBuffers = await Promise.all(promises)\n      saveAs(new Blob([...resBuffers], {\n        type: 'application/octet-stream'\n      }),file.origin_name)\n      //\n      this.removeItem(file)\n       \n    }\n    //this.deleteBucket()\n    this.setState({showProgress: false, })\n  } \n\n\n  downloadFiles = async(file, start, end)=>{ \n    const params = `/${start}/${end}`\n    const isLocal = window.location.hostname=='localhost'\n    const _url = isLocal? 'http://127.0.0.1:8000/transmit/' :  process.env.REACT_APP_API_BASE_URL\n    const autori = isLocal? 'local' : process.env.REACT_APP_AUTORI\n    const {filename, file_size } = file\n    this.setState({showProgress:true})\n    const configDownload = {\n      responseType: 'arraybuffer',\n      onDownloadProgress:(progressEvent)=> {\n        this.progressAction(progressEvent, file_size)\n        //this.setState({counter: percentage})\n      },\n      url: _url + 'download/' + filename + params,\n      method: 'get',\n      headers:{\n        'Authorization': `${autori}`,\n      }\n      \n    }\n    return await axios(configDownload)\n        .then(res => {\n          /** \n          const blob = new Blob([res.data], {\n            type: 'application/octet-stream'\n          })\n          */\n          return res.data\n            //let extension = 'zip';\n            //let tempFileName = `${this.state['selectedCommunity']}`\n            //let fileName = `${tempFileName}.${extension}`;\n            /*\n            const blob = new Blob([res.data], {\n              ((type: 'application/octet-stream'\n            })\n\n            saveAs(blob, fileName)\n            */\n        })\n        .catch(error => {\n            console.log(error.message);\n        });\n\n    \n  }\n\n  removeItem = (item)=>{\n    const fileList = this.state.files\n    const removed_list = fileList.filter(file=>{ \n        if(file.filename != item.filename){\n           return file\n       }else{\n           console.log('gefunden !!!!')\n       }\n    })\n    this.setState({files: removed_list})\n\n  }\n\n  messageView = ()=>{\n    const {message} = this.state\n    return(\n        <div>\n        {message.length>0 ? \n          <div className='download_message_view'>\n            <div className='download_message_text'> Eine Nachricht für dich </div>\n            <DownloadMessageView message={message} />\n          </div>\n          : null}\n        </div>\n            \n    )\n  }\n\n\n\n\n  infoBtnView = ()=>{\n    return (\n      <div className= 'download_info_btn_div' onClick={()=>this.infoView()}><VscInfo size={30} color={colors.black}/></div>\n    )\n  }\n\n  \n\n  changeDownloadView =()=>{\n    const complete = this.state.counter === 100\n    return(\n      <div>\n      {!complete?\n        <div className='div_input_upload'>\n            <div className='download_icon_div' onClick={()=>this.file_loop()}><VscArrowDown size={35} color={colors.black}/></div>\n            <div className='text_input_upload'>starte den download</div>\n            {this.infoBtnView()}\n        </div>\n        :\n        <div className='div_input_upload'>\n          <div className='download_icon_div' ><VscCheck size={35} color={colors.black}/></div>\n          <div className='text_input_upload'>download complete</div>\n        </div>\n      }\n      </div>\n    )\n  }\n\n  \n\n\n  render(){\n    const {isContent, showProgress, progress, files} = this.state\n    if(isContent){\n      return (\n        <div className='frame_input_upload' >\n          {!showProgress?\n            this.changeDownloadView():<div>{!showProgress? null: <div className='progressbar_view_download' ><ProgressBar counter={progress} bgcolor={colors.accentColor}/></div>}</div>\n          }\n          {files.length>0 ? <div className='download_list_view'>{this.messageView()}<DownloadFileList items={files} /></div> : null}\n          \n        </div>\n      );\n    }else{\n      return (\n        <div className='frame_input_upload' >\n            <div className='div_input_upload'>\n              <div className='text_input_upload_NO_CONTENT'>NO CONTENT</div>\n            </div>\n        </div>\n      );\n    }\n    \n  }\n}\n\n","export default __webpack_public_path__ + \"static/media/AIR_1024px.e442824d.png\";","import React, {Suspense} from 'react'\nimport {useImage} from 'react-image'\n \nfunction MyImageComponent() {\n    const _width = window.screen.width\n    const _height = window.screen.height\n    //console.log( 'w . ', _width, ' h . ', _height)\n    \n    const {src} = useImage({\n        srcList: `https://picsum.photos/${_width}/${_height}?random=1`,\n    })\n\n    \n    return <img src={src} />\n}\n //<MyImageComponent />\nexport default function Appbackground() {\n  return (\n    <Suspense fallback={<div style={{height: '100%', width:'100%', background:'black'}}></div>}>\n      <MyImageComponent />\n    </Suspense>\n  )\n}","import React from 'react';\nimport './App.css';\nimport { Route, Switch} from 'react-router-dom';\nimport UploadView from './uploadView'\nimport DownloadView from './downloadView'\nimport { VscThreeBars } from \"react-icons/vsc\";\nimport colors from './colors'\nimport air from './AIR_1024px.png'\nimport Bg from './background'\nimport api from './api'\n\n\n\nconst Beta = <div className='open_beta'>open beta</div>\n\n\n\n\nexport default class App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      mobile: false,\n      height: '',\n      backend: false,\n    }\n      \n\n    }\n  \n  componentDidMount(){\n    this.createPing()\n    window.addEventListener(\"resize\", this.updateWindowDimensions());\n    this.setState({height: window.innerHeight + \"px\"})\n  }\n\n  \n\n  updateWindowDimensions() {\n    const mobile = window.innerWidth<=600\n    document.documentElement.style.setProperty('--vh', `${window.innerHeight/100}px`);\n    this.setState({ mobile: mobile});\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  createPing = async()=>{\n    await api.create_ping().then(res=>{\n      if(res.data.is === 'pong'){\n        this.setState({backend: true})\n      }\n    })\n  }\n\n\n  routing = ()=> {\n    return (\n        <Switch>\n          <Route exact path=\"/\" render={(props) => (\n              <UploadView {...props} mobile={this.state.mobile} backend={this.state.backend} />\n              )}></Route>\n          <Route  path=\"/:id\" render={(props) => (\n              <DownloadView {...props} mobile={this.state.mobile} backend={this.state.backend} />\n              )}></Route>\n        </Switch> \n    );\n  }\n\n\n  \n\n  \n  render(){\n    return (\n      <div className='app_window' style={{height: this.state.height}}>\n        <div className='head_view'>\n          <div className='title'><img  className='air_icon' src={air} alt=\"Logo\"/> AIR channel{Beta}</div>\n          <div className='menu'>\n            <div className='menu_icon'><VscThreeBars size={30} color={colors.white}/> </div></div>\n        </div>\n        <div className='unkown_view'><Bg/></div>\n        <div className='actions_view'>{this.routing()}</div>\n      </div>\n    );\n  }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}