{"version":3,"sources":["api/index.js","colors/index.js","progressbar/index.js","uploadView/uploadFileList/item.js","uploadView/uploadFileList/index.js","uploadView/uploadFinishView/index.js","alertViews/index.js","sendView/index.js","helpers/roundFileSze.js","uploadView/index.js","downloadView/downloadFileList/item.js","downloadView/downloadFileList/index.js","downloadView/downloadMessView/index.js","infoViews/index.js","downloadView/index.js","AIR_1024px.png","background/index.js","App.js","index.js"],"names":["axios","defaults","xsrfHeaderName","xsrfCookieName","is_local","window","location","hostname","_url","process","configPing","headers","configForm_","api","create","baseURL","apis","upload_detail","id","get","download_delete_detail","sender","delete","create_major","form","post","is_major_detail","download_stream","downFileName","extensionName","config","AxiosStream","download","is_mail_detail","mail","insertfile","create_ping","start_chunk_upload","color","highBlue","grey","pink","green","orange","white","black","accentColor","olive","lila","red","pastellgreen","yellow","grey_blue","background1","background2","background3","background_white","ProgressBar","props","bgcolor","counter","fillerStyles","display","justifyContent","alignItems","height","width","backgroundColor","colors","style","position","borderRadius","overflow","minWidth","fontWeight","marginRight","Math","floor","Item","state","filename","item","this","className","size","origin_name","onClick","removeItem","React","Component","ListItem","value","FileList","create_list","lines","items","forEach","push","e","map","indexOf","prevProps","length","showView","isLink","data-for","data-tip","data-event","navigator","clipboard","writeText","link","place","effect","globalEventOff","afterShow","mailConfirm","type","condition","setState","alertView","title","text","cancelBtn","okBtnText","cancelBtnText","Swal","fire","background","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","dismiss","DismissReason","cancel","ViewText","reset_state","useUserMail","useLink","useMail","useDownload","handleInput","target","name","handleMail","event","used","is_used","send_option","handleDownload","console","log","download_option","radioSwitchMail","FormControl","FormLabel","RadioGroup","onChange","FormControlLabel","control","Radio","label","useLinkOrMail","mail_user","mail_to","radioSwitchDownload","downloadOptionText","send_info","a","message","titel","cancelBoolean","close","newOpen","res","data","isSuccess","infos","visible","wrapper","createRef","open","mobile","placeholder","rows","blue","roundFileSize","kb_size","round","mb_size","customStyles","content","top","left","right","bottom","transform","border","CHUNK_SIZE","UploadView","hide","openSendView","resetChunkProperties","showProgress","progress","beginingOfTheChunk","endOfTheChunk","resetUpload","newFileUpload","upload_success","use_link","use_email","getFileContext","files","file_arr","Array","from","full_count","full_size","file","_file","_totalCount","_fileID","uuidv4","file_json","file_size","file_guid","chunk_count","file_data","createMajor","FormData","append","majorId","counterOfFile","chunk_size_start","count","percentage","chunk","slice","chunk_loop","uploadCompleted","uploadFirstChunk","uploadChunks","split","response","download_link","path","protocol","host","email","sended_mail","uploadFile","removed_list","filter","send","allChunkCounts","reduce","b","readyToSend","hidden","bottomView","upload_size","show_text","multiple","isOpen","onRequestClose","ariaHideApp","DownloadFileList","backcolor","infoView","html","DownloadView","htmlText","majorInfo","date","use_download","_size","ds","Date","is_mail","is_mail_to","is_use_download","is_use_link","toLocaleDateString","weekday","year","month","day","hour","renderToString","checkLink","isContent","fileList","deleteBucket","file_loop","downloadFiles","isLocal","autori","configDownload","responseType","onDownloadProgress","progressEvent","loaded","total","url","method","messageView","infoBtnView","changeDownloadView","complete","match","params","openInfoView","MyImageComponent","_width","screen","_height","src","useImage","srcList","Appbackground","fallback","Beta","App","createPing","backend","routing","exact","render","addEventListener","updateWindowDimensions","innerHeight","innerWidth","document","documentElement","setProperty","removeEventListener","air","alt","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3bcccf30.chunk.js","sourcesContent":["\n\n/*\n.catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\n  \n*/\n\n\nimport axios from 'axios'\nimport AxiosStream from \"axios-stream\";\n\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\nconst is_local = window.location.hostname ==='localhost'\n\nconst hostUrl = process.env.REACT_APP_API_BASE_URL \nconst autori = is_local? 'local' : process.env.REACT_APP_AUTORI\nconst _url = is_local? 'http://127.0.0.1:8000/transmit/' : hostUrl \n\n\n\nconst configPing = {\n  headers: { \n    'Content-Type': 'multipart/form-data;boundary=boundary',\n    'Accept': 'application/json;text/plain'\n  }\n}\n\nconst configForm_ = {\n  headers: { \n    'Authorization': `${autori}`,\n    'Content-Type': 'multipart/form-data;boundary=boundary',\n    'Accept': 'application/json;text/plain'\n  }\n}\n\n\n\n\n\nconst api = axios.create({\n    baseURL: _url\n\n})\n\nexport const create_ping = () => api.get(`ping/`, configPing)\n\nexport const create_major = form => api.post(`major/`, form, configForm_)\nexport const is_major_detail = sender => api.get(`major/${sender}`, configForm_)\n\nexport const start_chunk_upload = form => api.post(`preparation/`,form , configForm_)\n\nexport const insertfile = form => api.post(`upload/`,form , configForm_)\nexport const get_Item = form => api.get(`upload/`, form, configForm_)\nexport const upload_detail = id => api.get(`upload/${id}`, configForm_)\n\nexport const download_delete_detail = sender => api.delete(`remove/${sender}`, configForm_)\nexport const is_mail_detail = mail => api.get(`mailvali/${mail}`, configForm_)\n\nexport const download_stream = (downFileName,extensionName, config) => AxiosStream.download(downFileName, extensionName, config);\n\n\n\n\n\nconst apis = {\n  upload_detail,\n  download_delete_detail,\n  create_major,\n  is_major_detail,\n  download_stream,\n  is_mail_detail,\n  insertfile,\n  create_ping,\n  start_chunk_upload\n\n    \n}\n\n\nexport default apis","\n \n// colors\nconst highBlue = '#5ba3c7'\nconst grey = '#f0f0f0'\nconst pink = '#e8c8c8'\nconst green = '#a3c49f'\nconst orange = '#ebd7b7'\nconst white = '#ffffff'\nconst black = '#212121'\nconst olive = '#c4d184'\nconst lila = '#9397d9'\nconst red = '#d993a0'\nconst pastellgreen = '#98b8a7'\nconst yellow = '#f0df48'\nconst cosmos_grey = '#353535'\n//const accentColor =  '#ff757e' \nconst accentColor =  '#62bce3'//  '#819cdb'//'#84c4ba' \nconst background1 = '#505a66'\nconst background2 = '#404954'\nconst background3 = '#606b78'\nconst background_white = 'rgba(187, 187, 187, 0.886)'\nconst beige = '#baaea2'\nconst grey_blue = '#505a66'\nconst color = {\n    highBlue, \n    grey, \n    pink, \n    green, \n    orange, \n    white, \n    black, \n    accentColor, \n    olive, \n    lila, \n    red, \n    pastellgreen, \n    yellow , \n    grey_blue,\n    background1,\n    background2,\n    background3,\n    background_white\n} \n\nexport default color\n","\n/*\n\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n    */\n\nimport colors from './../colors'\nconst ProgressBar = (props) => {\n    const { bgcolor, counter } = props;\n  \n    const containerStyles = {\n      //position: 'absolute',\n      height: '6vh',\n      width: '90%',\n      backgroundColor: \"rgba(255, 255, 255, 0.512)\",\n      borderRadius: '3vh',\n      overflow: 'hidden',\n      \n    }\n  \n    const fillerStyles = {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      height: '100%',\n      width: `${counter}%`,\n      backgroundColor: colors.black,\n    }\n  \n    const labelStyles = {\n      position: 'absolute',\n      color: 'white',\n      height: 'auto',\n      minWidth: '50px',\n      fontWeight: 'bold',\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      marginRight: '5px',\n    }\n    \n    const progressDiv = {\n      position: 'absolute',\n      height: '100%',\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }\n \n\n\n\n    return (\n      <div style={progressDiv}>\n        <div style={containerStyles}>\n          <div style={fillerStyles}>\n            <span style={labelStyles}>{`${Math.floor(counter)} %`}</span>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  export default ProgressBar;","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash } from \"react-icons/vsc\";\n\n\n\n\n\nexport default class Item extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n            filename: '',\n\n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n  \n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const item =  this.props.item\n\n        return(\n            <div className='download_item_frame'>\n                <div className='item_icon_div'>\n                    <div className='item_icon'><VscFile size={30}/></div>\n                </div>\n                <div className='item_name_div'>\n                    <div className='item_name'>{item.origin_name}</div>\n                </div>\n                <div className='item_remove_div'>\n                    <button className='item_remove' onClick={()=>this.props.removeItem(item)}><VscTrash size ={18}/></button>\n                </div>\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport Item from './item'\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"list_item\">{props.value}</div>\n            </div>);\n}\n\nexport default class FileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      if(this.props.items.length !== prevProps.items.length){\n      }\n    }\n\n    create_list=()=>{\n        const lines = [] \n        this.props.items.forEach(item => {\n            lines.push(\n              <Item \n                item={item}\n                removeItem={(e)=>this.props.removeItem(e)}\n\n                />\n              )\n        });\n\n\n\n\n        const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item) } />);\n        return listItems; \n\n        \n    }\n  \n  \n  \n    render(){\n      return (\n        <div className='File_list_frame'>{this.create_list()}</div>\n      )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport ReactTooltip from \"react-tooltip\";\n\n\nexport default class FileList extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      place: \"top\",\n      type: \"dark\",\n      effect: \"float\",\n      condition: false\n    };\n  }\n\n  changePlace(place) {\n    this.setState({\n      place: place\n    });\n  }\n\n  changeType(type) {\n    this.setState({\n      type: type\n    });\n  }\n\n  changeEffect(effect) {\n    this.setState({\n      effect: effect\n    });\n  }\n\n  _onClick() {\n    this.setState({\n      condition: true\n    });\n  }\n\n  \n  \n  showView = ()=>{\n    if(!this.props.isLink){\n      return(\n        <div className='div_link'>\n            <div className='link_text'>der Downloadlink wurde erfolgreich an </div>\n            <div className='email_text'>{this.props.mailConfirm} </div>\n            <div className='link_text'>gesendet. </div>\n            <div className='link_text_2'>dein Download bleibt 12 Stunden lang gespeichert</div>\n            <div className='link_text_2'>alle Daten werden nach ablauf unwiederuflich gelöscht</div>\n          </div>\n      )\n    }else{\n      return(\n        <div className='div_link'>\n            <div className='link_text'> hier ist der link zum kopieren</div>\n            <a className='link_copy'\n                  data-for=\"custom-event\"\n                  data-tip=\"link wurde kopiert\"\n                  data-event=\"click focus\"\n                  onClick={() => {navigator.clipboard.writeText(this.props.link)}}\n                >\n                  {this.props.link}\n                </a>\n                <ReactTooltip id=\"custom-event\" place=\"right\" effect=\"solid\" globalEventOff=\"click\" afterShow={()=>{navigator.clipboard.writeText(this.props.link)}} />\n                <div className='link_text_2'>dein Download bleibt 12 Stunden lang gespeichert</div>\n                <div className='link_text_2'>alle Daten werden nach ablauf unwiederuflich gelöscht</div>\n          </div>\n      )\n    }\n  }\n\n\n\n\n\n  \n  \n  render(){\n    return (\n        <div className='view_finish'>\n          {this.showView()}\n        </div>\n    )\n  }\n    \n  \n  \n  }","import Swal from 'sweetalert2'\nimport colors from './../colors'\n\n\n\n\n\n\n//background: rgba(187, 187, 187, 0.886);\nexport const alertView = (title, text, cancelBtn, okBtnText, cancelBtnText)=>{\n\n    // Alert POP UP\n    //\n    const e = Swal.fire({\n        background: 'rgba(187, 187, 187, 0.886)',\n        title: title,\n        text: text,\n        icon: 'warning',\n        showCancelButton: cancelBtn,\n        cancelButtonColor: colors.red,\n        confirmButtonColor: colors.highBlue,\n        confirmButtonText: okBtnText,\n        cancelButtonText: cancelBtnText\n      }).then((result) => {\n        if (result.isConfirmed) {\n            return true\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n            return false\n        }\n      })\n      return e\n}","import React from 'react';\nimport './index.css';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { alertView } from '../alertViews';\nimport api from './../api'\nimport { colors } from '@material-ui/core';\n\n\nconst placeholder = ' schreibe eine Nachricht an den Empfänger...'\n\n\n\n\n\nexport class ViewText extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            useLink: true,\n            useDownload: true,\n            message: '',\n            mail_user: '',\n            mail_to: '',\n            send_option:'link',\n            download_option: 'einmalig',\n            visible: true\n\n        }\n        this.wrapper = React.createRef();\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.open !== prevProps.open) {\n            this.reset_state()\n        }\n    }\n\n    reset_state = () => {\n        this.setState({\n            useUserMail: false,\n            useLink: true,\n            useMail: false,\n            useDownload: true\n        })\n    }\n\n    handleInput = ({ target }) => {\n        this.setState({ [target.name]: target.value })\n\n        \n    }\n\n    handleMail = (event) => {\n        const used = event.target.value\n        const is_used = used == 'mail'? false : true\n        this.setState({send_option: used, useLink: is_used});\n    };\n\n    handleDownload = (event) => {\n        const used = event.target.value\n        const is_used = used == '12'? false : true\n        console.log('radio ', used, '  is ', is_used)\n        this.setState({download_option: used, useDownload: is_used});\n    };\n    \n\n\n\n\n\n\n\n\n\n\n\n    radioSwitchMail = ()=>{\n        return(\n            <div className='send_view_change_zone_div'>\n                <div className='send_view_radio_div'>\n                    <FormControl >\n                        <FormLabel className='send_view_formlabel'>Übermittlungsart</FormLabel>\n                        <RadioGroup  value={this.state.send_option} onChange={this.handleMail}>\n                            <FormControlLabel value=\"link\" control={<Radio color=\"default\"/>} label=\"Link\" />\n                            <FormControlLabel value=\"mail\" control={<Radio color=\"default\"/>} label=\"Link per mail\" />\n                        </RadioGroup>\n                    </FormControl>\n                </div>\n                {this.useLinkOrMail()}\n            </div>\n        )\n    }\n\n    useLinkOrMail = () => {\n        const { send_option } = this.state\n        switch(send_option){\n            case 'mail':\n                return (\n                    <div className='send_view_show_options'>\n                        <div className='send_view_div_input'>E-mail des Absenders:\n                            <input className='send_view_input' type='email' name='mail_user' value={this.state.mail_user} onChange={this.handleInput}></input>\n                        </div>\n                        <div className='send_view_div_input'>E-mail des Empfänger:\n                            <input className='send_view_input' type='email' name='mail_to' value={this.state.mail_to} onChange={this.handleInput}></input>\n                        </div>\n                        \n                    </div>\n                )\n            case 'link':\n                return (\n                    <div className='send_view_show_options'>\n                        <div className='send_view_div'>\n                            <div className='send_view_div_linktext'>Erhalte einen Link nach dem Upload</div>\n                        </div>\n                    </div>\n                )\n        }\n    }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    radioSwitchDownload = ()=>{\n        return(\n            <div className='send_view_change_zone_div'>\n                <div className='send_view_radio_div'>\n                    <FormControl >\n                        <FormLabel className='send_view_formlabel'>Download</FormLabel>\n                        <RadioGroup  value={this.state.download_option} onChange={this.handleDownload}>\n                            <FormControlLabel value=\"einmalig\" control={<Radio color=\"default\"  />} label=\"einmaliger Download\" />\n                            <FormControlLabel value=\"12\" control={<Radio color=\"default\"/>} label=\"innerhalb 12 Stunden\" />\n                        </RadioGroup>\n                    </FormControl>\n                </div>\n                {this.downloadOptionText()}\n            </div>\n        )\n    }\n\n    downloadOptionText = () => {\n        const { download_option } = this.state\n        switch(download_option){\n            case '12':\n                return (\n                    <div className='sendview_info_text'> \"Dein Upload wird 12 Stunden gespeichert, er steht so oft und zur jeder Zeit zum Download bereit\"</div>\n                )\n            case 'einmalig':\n                return (\n                    <div className='sendview_info_text'> \"Nach dem erstem Dowload werden alle Daten der Übertragung gelöscht, kein weiter Download mehr möglich. Automatisch wird dein Upload nach 7 Tagen gelöscht!\"</div>\n                )\n        }\n    }\n\n    send_info = async()=>{\n        const { mail_to, mail_user, message, useDownload, send_option, useLink  } = this.state\n        const titel = 'E-mail exestiert nicht'\n        const cancelBoolean = false\n        const okBtnText = 'Ok'\n\n        \n        // sending option => use mail\n        if(send_option === 'mail'){\n\n            // validate.... no input im E-mail field\n            if(!mail_user || !mail_to){\n                this.props.close()\n                let text = 'Pflichtfelder sind nicht ausgefüllt !'\n                const new_title = 'keine Eingabe'\n                let answer =  await alertView(new_title, text, cancelBoolean,okBtnText, null) // alert View\n                if(answer){\n                    this.props.newOpen()\n                    return\n                }\n            }\n            // validate.... e-mail Absender\n            const is_mail_user = await api.is_mail_detail(mail_user).then(res=>{return res.data.isSuccess})\n            if(!is_mail_user){\n                this.props.close()\n                let text = 'bitte überprüfen deine    Absender    Adresse'\n                let answer =  await alertView(titel, text, cancelBoolean,okBtnText, null) // alert View\n                if(answer){\n                    this.props.newOpen()\n                    return\n                }\n            }\n            // validate.... e-mail Empfänger\n            const is_mail_to = await api.is_mail_detail(mail_to).then(res=>{return res.data.isSuccess})\n            if(!is_mail_to){\n                this.props.close()\n                let text = 'bitte überprüfen deine   Empfänger   Adresse'\n                let answer =  await alertView(titel, text, cancelBoolean,okBtnText, null) // alert View\n                if(answer){\n                    this.props.newOpen()\n                    return\n                }\n            }\n        }\n\n        \n        this.props.infos({ mail_user, mail_to, message, useDownload, useLink })\n\n    }\n\n\n    hide() {\n        this.setState({ visible: false });\n    }\n    \n\n    render() {\n        \n        return (\n            <div className={this.props.mobile?'send_view_dialog_mobile':'send_view_dialog'}>\n                <div className={this.props.mobile?'send_view_frame_mobile':'send_view_frame_mobile'}>\n                    <div className='send_view_title_div'>\n                        Datenübertragung\n                    </div>\n                    <div className='send_view_change_zone'>{this.radioSwitchDownload()}</div>\n                    <div className='send_view_change_zone'>{this.radioSwitchMail()}</div>\n                    <div className='send_view_div'>\n                        <textarea className='send_view_message' placeholder={placeholder} rows={6} type='text' name='message' value={this.state.message} onChange={this.handleInput}></textarea>\n                    </div>\n                    <div className='send_view_btn_div'>\n                        <button className='send_btn' onClick={() => this.props.close()}>abbruch</button>\n                        <button className='send_btn' style={{color: colors.blue}} onClick={() => this.send_info()}>senden</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ViewText;\n\n\n\n","\nexport default function roundFileSize(size){\n    // kilo bytes\n    const kb_size = Math.round(size / 1000) \n    //mega bytes\n    if(kb_size > 1000){\n        const mb_size = Math.round(size / 100000) / 10 \n        // giga bytes\n        if(mb_size > 2000){\n            const gb_size = Math.round(size / 10000000) / 100 \n            return gb_size + '  GB'\n        }\n        return mb_size + '  MB'\n    }\n    return kb_size + '  KB'\n}","\n  \nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './index.css'\nimport api from './../api'\nimport ProgressBar from './../progressbar'\nimport Itemlist from './uploadFileList'\nimport FinishView from './uploadFinishView'\nimport SendView from './../sendView'\nimport colors from './../colors'\nimport { VscDiffAdded } from \"react-icons/vsc\";\nimport { alertView } from '../alertViews';\nimport Modal from 'react-modal';\nimport roundFileSize from '../helpers/roundFileSze';\n\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      border: 'none',\n      borderRadius: '12px'\n    },\n};\n\n\n\n\n\nconst CHUNK_SIZE = 1048576 * 3;//its 3MB, increase the number measure in mb\n\n\n \nexport default class UploadView extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={ \n            files:[],\n            showProgress: false,\n            counter: 0,\n            full_count: 0,\n            full_size: 0,\n            beginingOfTheChunk: 0,\n            endOfTheChunk: CHUNK_SIZE,\n            progress: 0,\n            openSendView: false,\n            mailConfirm: '',\n            upload_success: false,\n            visible: false,\n            link: '',\n            isLink: null,\n\n        }\n        \n    }\n\n    hide=()=> {\n        console.log('close')\n        this.setState({openSendView: false})\n        \n    }\n  \n  \n    resetChunkProperties = () => {\n        this.setState({\n            showProgress: true,\n            progress: 0,\n            counter: 0,\n            beginingOfTheChunk: 0,\n            endOfTheChunk: CHUNK_SIZE\n        })\n    }\n    \n\n\n    resetUpload = () => {\n        this.setState({\n            showProgress: false,\n            process: 0,\n            counter: 0,\n            beginingOfTheChunk: 0\n        })\n    }\n    \n    \n    newFileUpload = async()=>{\n\n        // Alert POP UP\n        //\n        const titel = 'Neuer Upload?'\n        const text = 'sind Sie Sicher, Sie haben keine möglichkeit mehr an den Downloadlink zu kommen!'\n        const cancelBoolean = true\n        const okBtnText = 'Ja, ich habe den link kopiert'\n        const cancelBtnText = 'Nein, ich kopiere mir den link nochmal'\n\n        const answer =  await alertView(titel, text, cancelBoolean, okBtnText, cancelBtnText)\n        if(answer){\n            this.setState({\n                upload_success: false, \n                use_link: null,\n                use_email: null\n            })\n        }\n        \n    }\n\n\n    getFileContext = (e) => {\n\n        const files = []\n        const file_arr = Array.from(e.target.files)\n        var full_count = 0\n        var full_size = this.state.full_size\n        file_arr.forEach(file=>{\n            const _file = file;\n            const _totalCount = _file.size % CHUNK_SIZE === 0 ? _file.size / CHUNK_SIZE : Math.floor(_file.size / CHUNK_SIZE) + 1; // Total count of chunks will have been upload to finish the file\n            const _fileID = uuidv4() //+ get_ext(_file.name.split('.'));\n            const file_json = {\n                file_size: _file.size,\n                origin_name: _file.name,\n                file_guid: _fileID,\n                chunk_count: _totalCount,\n                file_data: _file\n            }\n            full_count = full_count + _totalCount\n            full_size = full_size + _file.size\n            files.push(file_json)\n\n            \n        })\n        \n        this.setState({files: [...this.state.files, ...files], full_count: this.state.full_count + full_count, full_size})\n        \n    }\n\n\n\n\n\n\n\n    createMajor = async (files, infos) => {\n        const form = new FormData()\n        form.append('mail_to', infos.mail_to)\n        form.append('mail_user', infos.mail_user)\n        form.append('message', infos.message)\n        form.append('use_download', infos.useDownload)\n        form.append('use_link', infos.useLink)\n        //\n        // create Major Model\n        //\n        //\n        //\n        const majorId = await api.create_major(form).then(res=>{\n            //console.log('res => ceate ', res)\n            if(res.data.isSuccess){\n                return res.data.id\n            }else{\n                return null\n            }\n        }) \n        // start loop of  all chunks\n        if (majorId){\n            for (const file of files) {\n                // this file begins\n                await this.counterOfFile(file, majorId)\n               \n            }\n        }\n         \n    }\n\n\n\n\n    counterOfFile = async(file, id) => {\n        var chunk_size_start = 0\n\n        for (var count=1; ; count++ ) {\n            var percentage = (count / file.chunk_count) * 100;\n\n            const chunk = file.file_data.slice(chunk_size_start, CHUNK_SIZE + chunk_size_start);\n            this.setState({progress: percentage})\n\n            const isUpload = await this.chunk_loop(chunk, file,id, count)\n            if(!isUpload){\n                console.log('upload error')\n                break\n            }\n\n            chunk_size_start = chunk_size_start + chunk.size\n            if(count === file.chunk_count){\n                await this.uploadCompleted(id);\n                this.removeItem(file)\n                break\n            }\n        }\n    }\n\n\n\n    chunk_loop = async (chunk, file, id, count) => {\n        if(count === 1){\n            return await this.uploadFirstChunk(chunk, count, file, id)\n        }else{\n            return await this.uploadChunks(chunk, count, file, id)\n        }\n    }           \n    \n    \n    uploadFirstChunk = async (chunk, count, file, id) => {\n        try {\n            const form = new FormData()\n            form.append('id', id)\n            form.append('chunk', chunk)\n            form.append('chunk_size', chunk.size)\n            form.append('counter', count)\n            form.append('filename', file.file_guid)\n            form.append('file_size', file.file_size)\n            form.append('origin_name', file.origin_name)\n            form.append('extension', file.file_data.name.split('.').slice(-1)[0])\n           \n            const response = await api.start_chunk_upload(form).then(res=>{\n                return res.data.isSuccess\n            })\n            return response\n\n        }catch (error) {\n            //debugger\n            console.log('error', error)\n            return false\n        }\n    }\n\n    uploadChunks = async (chunk, count, file, id) => {\n        try {\n            const form = new FormData()\n            form.append('id', id)\n            form.append('chunk', chunk)\n            form.append('chunk_size', chunk.size)\n            form.append('counter', count)\n            form.append('filename', file.file_guid)\n           \n            const response = await api.insertfile(form).then(res=>{\n                return res.data.isSuccess\n            })\n            return response\n\n        }catch (error) {\n            //debugger\n            console.log('error', error)\n            return false\n        }\n    }\n\n\n    \n    uploadCompleted = async (id) => {\n        const response = await api.upload_detail(id)\n        const data = response.data;\n        if (data.isSuccess) {\n            if(data.link){\n                const download_link =  data.link\n                if (typeof window !== 'undefined') {\n                    const path = window.location.protocol + '//' + window.location.host +'/'+  download_link; \n                    //console.log('show download link ', download_link)\n                    this.setState({upload_success: true, link: path, isLink: true})\n                }\n            }\n            if(data.email){\n                const sended_mail =  data.email\n                console.log('show download email', sended_mail)\n                this.setState({upload_success: true, mailConfirm: sended_mail, isLink: false})\n            }\n            // finish Upload\n            //setTimeout(()=>this.resetUpload(), 2000)\n            this.resetUpload()\n            this.setState({upload_success: true})\n        }\n    }\n    \n      \n\n\n    \n\n    // removed item from list \n    // .file_guid = uuid name from upload file\n    // stste new list \n    removeItem = (uploadFile)=>{\n        let full_size = this.state.full_size\n        full_size = full_size - uploadFile.file_size\n        const fileList = this.state.files\n        const removed_list = fileList.filter(file=>{ \n            if(file.file_guid != uploadFile.file_guid){\n               return file\n           }\n        })\n        this.setState({files: removed_list, full_size})\n\n    }\n\n    send = (infos)=>{\n\n        const {files} = this.state\n        //console.log(infos, ' => infos')\n        //console.log(files, ' => files')\n        //console.log(this.state, ' => state')\n        const countOfFiles = files.map(file=>{\n            return file.chunk_count\n        })\n        const allChunkCounts = countOfFiles.reduce((a, b) => a + b, 0)\n        console.log(allChunkCounts, ' full counts')\n        this.setState({openSendView: false, showProgress: true}, ()=>{\n            this.createMajor(files, infos)\n        })\n        \n        \n    }\n\n    \n    \n\n    \n  \n  \n    // if file in Upload list\n    // show button to open send menu\n    readyToSend = ()=>{\n        return(\n            <div className='ready_to_send_div'> \n                <button className='start_upload_btn' hidden={this.state.openSendView} onClick={()=>this.setState({openSendView: true})}>senden</button>\n            </div>\n        )\n    }\n\n    \n\n    bottomView = (files)=>{\n        const {full_size, upload_success} = this.state\n        const upload_size = 'gesamt '+ roundFileSize(full_size)\n        if(upload_success){\n            return(\n                <div className='div_input_upload' onClick={()=>this.newFileUpload()}>\n                    <label className='label_input_upload'>\n                        <VscDiffAdded size={50} color={colors.black}/>\n                    </label>\n                    <div className='text_input_upload'>hinzufügen von Dateien</div>\n                </div>\n            )\n        }else{\n            const show_text = files.length>0 ? upload_size : 'hinzufügen von Dateien'\n            return(\n                <div className='div_input_upload'>\n                    <label className='label_input_upload'>\n                        <input  className='input_upload'   type='file' multiple onChange={this.getFileContext} />\n                        <VscDiffAdded size={50} color={colors.black}/>\n                    </label>\n                    <div className='text_input_upload_size'>{show_text}</div>\n                    {files.length>0 ? this.readyToSend() : null}\n                    <div className='rodal_div' >\n                        <Modal\n                            style={customStyles}\n                            isOpen={this.state.openSendView} \n                            onRequestClose={this.hide}\n                            ariaHideApp={false}\n                \n                        >\n                            <SendView \n                                open={this.state.openSendView} \n                                close={this.hide} \n                                infos={(infos)=>this.send(infos)} \n                                mobile={this.props.mobile} \n                                newOpen={()=>this.setState({openSendView: true})}\n                            />\n                        </Modal>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    \n\n\n    render(){\n        const {showProgress, files, progress,  link, upload_success, mailConfirm, isLink} = this.state\n            return (\n                \n                <div className='frame_input_upload'>\n                    {!showProgress?\n                        this.bottomView(files)\n                        :\n                        <div>{!showProgress? null: <ProgressBar counter={progress} bgcolor={colors.accentColor}/>}</div>\n                    }\n                    {files.length>0 ? <div className='upload_list'><Itemlist items={files} removeItem={(e)=>this.removeItem(e)}/></div> : null}\n                    {upload_success ? <div className='upload_finish'><FinishView link={link} mailConfirm={mailConfirm} isLink={isLink} /></div> : null}\n                    \n                </div>\n            )\n    }\n      \n    \n  \n  \n  }\n\n\n","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash } from \"react-icons/vsc\";\n\n\n\n\n\nexport default class Item extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n            filename: '',\n\n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n  \n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const item =  this.props.item\n        return(\n            <div className='download_item_frame'>\n                <div className='download_item_icon_div'>\n                    <div className='download_item_icon'><VscFile size={30}/></div>\n                </div>\n                <div className='download_item_name_div'>\n                    <div className='download_item_name'>{item.origin_name}</div>\n                </div>\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport Item from './item'\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"list_item\">{props.value}</div>\n            </div>);\n}\n\nexport default class DownloadFileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      //console.log(prevProps, '   prevprps')\n      if(this.props.items.length !== prevProps.items.length){\n        console.log('items length änderung')\n      }\n    }\n\n    create_list=()=>{\n        const lines = [] \n        this.props.items.forEach(item => {\n            lines.push(\n              <Item \n                item={item}\n\n                />\n              )\n        });\n\n\n\n\n        const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item) } />);\n        return listItems; \n\n        \n    }\n  \n  \n  \n    render(){\n      return (\n        <div className='File_list_frame'>{this.create_list()}</div>\n      )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\n\n\n\nexport default class DownloadFileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          backcolor: 'transparent'\n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    /*\n    setBackground = ()=>{\n      const color = this.state.backcolor = 'transparent' ? 'white' : 'transparent'\n      this.setState({backcolor: color})\n    }\n    */\n  \n  \n  \n    render(){\n      return (\n        <div className='download_mess_frame' >{this.props.message}</div>\n      )\n    }\n      \n    \n  \n  \n  }","import Swal from 'sweetalert2'\nimport colors from './../colors'\n\n\n\n\n\n\n//background: rgba(187, 187, 187, 0.886);\nexport const infoView = (title, text, cancelBtn, okBtnText, cancelBtnText)=>{\n\n    // Alert POP UP\n    //\n    const e = Swal.fire({\n        background: 'rgba(187, 187, 187, 0.886)',\n        title: title,\n        html: text,\n        icon: 'info',\n        showCancelButton: cancelBtn,\n        cancelButtonColor: colors.red,\n        confirmButtonColor: colors.highBlue,\n        confirmButtonText: okBtnText,\n        cancelButtonText: cancelBtnText\n      }).then((result) => {\n        if (result.isConfirmed) {\n            return true\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n            return false\n        }\n      })\n      return e\n}","\n\nimport React from 'react';\nimport './index.css'\nimport api from './../api'\nimport ProgressBar from './../progressbar'\nimport colors from './../colors'\nimport DownloadFileList from './downloadFileList'\nimport DownloadMessageView from './downloadMessView'\nimport { VscArrowDown, VscInfo, VscCheck } from \"react-icons/vsc\";\nimport { infoView } from '../infoViews';\nimport { renderToString } from 'react-dom/server'\nimport roundFileSize from '../helpers/roundFileSze';\n\n\n\n\n\nexport default class DownloadView extends React.Component{\n\n  constructor(props){\n      super(props);\n      this.state={    \n         counter: 1,\n         showProgress: false,\n         files: [],\n         majorInfo: {},\n         message: '',\n         isContent:false,\n         link:this.props.match.params.id,\n         complete: false,\n         openInfoView: false\n\n\n      }\n  }\n  componentDidMount(){\n    console.log(' DOWNLOAD VIEW ')\n    const link = this.props.match.params.id\n    this.checkLink(link)\n\n  }\n\n  htmlText = ()=>{\n    const { mail_to, mail_user, date, use_download, use_link } = this.state.majorInfo\n    let _size = 0\n    for (const file of this.state.files) {\n      _size = _size + file.file_size\n    };\n    const upload_size = 'gesamt '+ roundFileSize(_size)\n    const options = { weekday: 'long', year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric' };\n    const ds = new Date(date)\n    const is_mail = mail_user ? mail_user : 'keine Angabe'\n    const is_mail_to = mail_to === [''] ? mail_to : 'keine Angabe'\n    const is_use_download = use_download ? 'einmailger Download': 'upload wird nach 12 Std gelöscht'\n    const is_use_link = use_link ? 'upload-Link' : 'E-mail Benachrichtung'\n    return(\n      <div >\n          <div style={{fontWeight: '600',height: '1.5em'}}> Erstellt: <span style={{fontWeight: '300'}}> {ds.toLocaleDateString(\"de-DE\", options)}</span></div>\n          <div style={{fontWeight: '600',height: '1.5em'}}> Dateigröße: <span style={{fontWeight: '300'}}> {upload_size}</span></div>\n          <div style={{fontWeight: '600',height: '1.5em'}}> Absender: <span style={{fontWeight: '300'}}> {is_mail}</span></div>\n          <div style={{fontWeight: '600',height: '1.5em'}}> Empfänger: <span style={{fontWeight: '300'}}> {is_mail_to}</span></div>\n          <div style={{fontWeight: '600',height: '1.5em'}}> Speicher Option: <span style={{fontWeight: '300'}}> {is_use_download}</span></div>\n          <div style={{fontWeight: '600',height: '1.5em'}}> Übermittlungsart: <span style={{fontWeight: '300'}}> {is_use_link}</span></div>\n      </div>\n    )\n  }\n\n  infoView = async()=>{\n    const title = 'Upload Infos'\n    const cancelBoolean = false\n    const okBtnText = 'Ok'\n    let htmlText = renderToString( this.htmlText())\n    let answer =  await infoView(title, htmlText, cancelBoolean,okBtnText, null) // alert View\n    if(answer){\n        return\n        }\n\n    \n\n}\n\n  checkLink = async(link)=>{\n    await api.is_major_detail(link).then(res=>{\n      if(res.data.isSuccess){\n        const data = res.data\n        this.setState({isContent: true, files: data.fileList, message: data.message, majorInfo: data.majorInfo})\n        console.log(res.data)\n      }\n    })\n  }\n\n\n\n  deleteBucket=async()=>{\n    const {link} = this.state\n    console.log('delete api')\n    await api.download_delete_detail(link).then(res=>{\n      if(res){\n        this.setState({showProgress: false, })\n      }\n\n    })\n  }\n\n  \n\n\n\n  file_loop = async () => {\n    const {files} = this.state\n\n    for (const file of files) {\n        console.log(file)\n        await this.downloadFiles(file)\n       \n    }\n    this.deleteBucket()\n    \n  } \n\n\n  downloadFiles = async(file)=>{ \n    const isLocal = window.location.hostname=='localhost'\n    const _url = isLocal? 'http://127.0.0.1:8000/transmit/' :  process.env.REACT_APP_API_BASE_URL\n    const autori = isLocal? 'local' : process.env.REACT_APP_AUTORI\n    const {origin_name, filename } = file\n    this.setState({showProgress:true})\n    const configDownload = {\n      responseType: 'arraybuffer',\n      onDownloadProgress:(progressEvent)=> {\n        const percentage = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n        this.setState({counter: percentage})\n      },\n      url: _url + 'download/' + filename,\n      method: 'get',\n      headers:{\n        'Authorization': `${autori}`,\n      }\n      \n    }\n    const empty_ext = ''\n    await api.download_stream(origin_name, empty_ext, configDownload).then(res=>{\n      this.removeItem(file)\n\n    })\n  }\n\n  removeItem = (item)=>{\n    const fileList = this.state.files\n    const removed_list = fileList.filter(file=>{ \n        if(file.filename != item.filename){\n           return file\n       }else{\n           console.log('gefunden !!!!')\n       }\n    })\n    this.setState({files: removed_list})\n\n  }\n\n  messageView = ()=>{\n    const {message} = this.state\n    return(\n        <div>\n        {message.length>0 ? \n          <div className='download_message_view'>\n            <div className='download_message_text'> Eine Nachricht für dich </div>\n            <DownloadMessageView message={message} />\n          </div>\n          : null}\n        </div>\n            \n    )\n  }\n\n\n\n\n  infoBtnView = ()=>{\n    return (\n      <div className= 'download_info_btn_div' onClick={()=>this.infoView()}><VscInfo size={30} color={colors.black}/></div>\n    )\n  }\n\n  \n\n  changeDownloadView =()=>{\n    const complete = this.state.counter === 100\n    return(\n      <div>\n      {!complete?\n        <div className='div_input_upload'>\n            <div className='download_icon_div' onClick={()=>this.file_loop()}><VscArrowDown size={35} color={colors.black}/></div>\n            <div className='text_input_upload'>starte den download</div>\n            {this.infoBtnView()}\n        </div>\n        :\n        <div className='div_input_upload'>\n          <div className='download_icon_div' ><VscCheck size={35} color={colors.black}/></div>\n          <div className='text_input_upload'>download complete</div>\n        </div>\n      }\n      </div>\n    )\n  }\n\n  \n\n\n  render(){\n    const {isContent, showProgress, counter, files} = this.state\n    if(isContent){\n      return (\n        <div className='frame_input_upload' >\n          {!showProgress?\n            this.changeDownloadView():<div>{!showProgress? null: <ProgressBar counter={counter} bgcolor={colors.accentColor}/>}</div>\n          }\n          {files.length>0 ? <div className='download_list_view'>{this.messageView()}<DownloadFileList items={files} /></div> : null}\n          \n        </div>\n      );\n    }else{\n      return (\n        <div className='frame_input_upload' >\n            <div className='div_input_upload'>\n              <div className='text_input_upload'>NO CONTENT</div>\n            </div>\n        </div>\n      );\n    }\n    \n  }\n}\n\n","export default __webpack_public_path__ + \"static/media/AIR_1024px.e442824d.png\";","import React, {Suspense} from 'react'\nimport {useImage} from 'react-image'\n \nfunction MyImageComponent() {\n    const _width = window.screen.width\n    const _height = window.screen.height\n    //console.log( 'w . ', _width, ' h . ', _height)\n    \n    const {src} = useImage({\n        srcList: `https://picsum.photos/${_width}/${_height}?random=1`,\n    })\n\n    \n    return <img src={src} />\n}\n \nexport default function Appbackground() {\n  return (\n    <Suspense fallback={<div style={{height: '100%', width:'100%', background:'rgba(187, 187, 187, 0.486)'}}></div>}>\n      <MyImageComponent />\n    </Suspense>\n  )\n}","import React from 'react';\nimport './App.css';\nimport { Route, Switch} from 'react-router-dom';\nimport UploadView from './uploadView'\nimport DownloadView from './downloadView'\nimport { VscThreeBars } from \"react-icons/vsc\";\nimport colors from './colors'\nimport air from './AIR_1024px.png'\nimport Bg from './background'\nimport api from './api'\n\n\n\nconst Beta = <div className='open_beta'>open beta</div>\n\n\n\n\nexport default class App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      mobile: false,\n      height: '',\n      backend: false,\n    }\n      \n\n    }\n  \n  componentDidMount(){\n    this.createPing()\n    window.addEventListener(\"resize\", this.updateWindowDimensions());\n    this.setState({height: window.innerHeight + \"px\"})\n  }\n\n  \n\n  updateWindowDimensions() {\n    const mobile = window.innerWidth<=600\n    document.documentElement.style.setProperty('--vh', `${window.innerHeight/100}px`);\n    this.setState({ mobile: mobile});\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  createPing = async()=>{\n    await api.create_ping().then(res=>{\n      if(res.data.isSuccess){\n        this.setState({backend: true})\n      }\n    })\n  }\n\n\n  routing = ()=> {\n    return (\n        <Switch>\n          <Route exact path=\"/\" render={(props) => (\n              <UploadView {...props} mobile={this.state.mobile} backend={this.state.backend} />\n              )}></Route>\n          <Route  path=\"/:id\" render={(props) => (\n              <DownloadView {...props} mobile={this.state.mobile} backend={this.state.backend} />\n              )}></Route>\n        </Switch> \n    );\n  }\n\n\n  \n\n  \n  render(){\n    return (\n      <div className='app_window' style={{height: this.state.height}}>\n        <div className='head_view'>\n          <div className='title'><img  className='air_icon' src={air} alt=\"Logo\"/> AIR channel{Beta}</div>\n          <div className='menu'>\n            <div className='menu_icon'><VscThreeBars size={30} color={colors.white}/> </div></div>\n        </div>\n        <div className='unkown_view'><Bg/></div>\n        <div className='actions_view'>{this.routing()}</div>\n      </div>\n    );\n  }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}