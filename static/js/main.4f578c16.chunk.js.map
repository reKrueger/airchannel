{"version":3,"sources":["api/index.js","colors/index.js","progressbar/index.js","uploadView/uploadFileList/item.js","uploadView/uploadFileList/folder.js","uploadView/uploadFileList/index.js","uploadView/uploadFinishView/index.js","alertViews/index.js","uploadView/sendView/index.js","text/index.js","uploadView/fileHandle/fileContext.js","uploadView/cancelView/index.js","helpers/roundFileSze.js","infoViews/index.js","uploadView/index.js","helpers/getRange.js","downloadView/downloadFileList/item.js","downloadView/downloadFileList/folder.js","downloadView/downloadFileList/index.js","downloadView/downloadMessView/index.js","downloadView/index.js","dropdownMenu/index.js","AIR_1024px.png","background/index.js","App.js","index.js"],"names":["axios","defaults","xsrfHeaderName","xsrfCookieName","is_local","window","location","hostname","_url","process","configForm_","headers","api","create","baseURL","axiosRetry","retries","apis","upload_detail","id","get","download_delete_detail","sender","delete","create_major","form","post","is_major_detail","download_stream","downFileName","extensionName","config","AxiosStream","download","is_mail_detail","mail","create_ping","create_file","multi_part_create","remove_file_detail","filename","filed","count","multi_part_persigned","multi_part_complete","color","highBlue","grey","pink","green","orange","white","black","accentColor","olive","lila","red","pastellgreen","yellow","grey_blue","background1","background2","background3","background_white","ProgressBar","props","bgcolor","counter","containerStyles","height","width","backgroundColor","borderRadius","overflow","fillerStyles","display","justifyContent","alignItems","colors","labelStyles","border","textShadow","fontSize","fontWeight","marginLeft","style","Math","floor","Item","item","this","is_load","load","className","loading","size","origin_name","onClick","removeItem","React","Component","Folder","foldername","folder","ListItem","value","FileList","lines","items","forEach","push","e","file_guid","map","indexOf","FileListOfItem","FolderList","state","open","i","folder_name","length","removeFolder","prevProps","hierarchy","showView","isLink","data-for","data-tip","data-event","navigator","clipboard","writeText","link","place","effect","globalEventOff","afterShow","mailConfirm","type","condition","setState","alertView","title","text","cancelBtn","okBtnText","cancelBtnText","Swal","fire","background","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","dismiss","DismissReason","cancel","cancelUploadSwal","a","newUploadSwal","sendAlerts","alert","cancelBoolean","answer","ViewText","reset_state","useUserMail","useLink","useMail","useDownload","handleInput","target","name","handleMail","is_used","handleDownload","radioSwitchMail","valueR","FormControl","FormLabel","RadioGroup","onChange","FormControlLabel","control","Radio","label","useLinkOrMail","mail_user","mail_to","radioSwitchDownload","Switch","checked","downloadOptionText","send_info","message","res","data","isSuccess","infos","send_option","visible","wrapper","createRef","mobile","placeholder","rows","close","blue","CHUNK_SIZE","fileContext","input","files","file_arr","Array","from","file","_file","_totalCount","ceil","_fileID","uuidv4","_folderName","webkitRelativePath","split","file_json","pop","chunk_count","file_size","file_data","chunks","getFileContextFolder","getFileContext","CancelView","uploadCancel","loopBreak","roundFileSize","kb_size","round","mb_size","htmlLayout","date","use_download","use_link","_size","upload_size","ds","Date","is_mail","is_mail_to","is_use_download","is_use_link","toLocaleDateString","weekday","year","month","day","hour","infoView","html","downloadInfoView","htmlText","renderToString","simpleInfoView","SendViewStyles","content","top","left","right","bottom","marginRight","transform","overlay","source","CancelToken","UploadView","resetUpload","showProgress","upload_success","timeout","ms","Promise","resolve","setTimeout","cancelUpload","fileLoopBreak","console","log","baseState","inputHandle","context","filesSize","concat","uploadIsCancel","majorId","newConnect","chunkCount","connect","ping","is","counterOfFile","newUpload","use_email","progressAction","progressEvent","fullCount","fileSize","loadedFromCHunk","loaded","total","eventArr","progress","reduce","b","send","openSendView","createMajor","FormData","append","clean","upload_begin","upload_dispatcher","create_chunks","uploadCompleted","chunk_start","chunk","slice","countListLoop","countlist","promises","parseInt","createFile","s3UrlLoop","u","uploadFileToS3","bucket","countArr","start","end","_","j","all","chunkSize","JSON","stringify","s3","presignedPostData","formData","Object","keys","fields","key","onUploadProgress","cancelToken","token","retryCondition","_error","url","catch","err","isCancel","fileSetStorage","response","download_link","path","protocol","host","email","sended_mail","list","uploadFile","full_size","removed_list","filter","fileList","readyToSend","hidden","bottomView","inputFolder","show_text","multiple","directory","webkitdirectory","msdirectory","odirectory","isOpen","onRequestClose","ariaHideApp","newOpen","DownloadFileList","folderList","backcolor","DownloadView","majorInfo","checkLink","isContent","deleteBucket","file_loop","downloadFiles","folderPath","join","resBuffers","saveAs","Blob","params","isLocal","autori","configDownload","responseType","onDownloadProgress","method","error","messageView","infoBtnView","changeDownloadView","complete","match","openInfoView","options","DropdownMenu","onSelect","arrowClosed","arrowOpen","placeholderClassName","placeHolderValue","MyImageComponent","_width","screen","_height","src","useImage","srcList","Appbackground","fallback","Beta","App","createPing","backend","routing","exact","render","addEventListener","updateWindowDimensions","innerHeight","innerWidth","document","documentElement","setProperty","removeEventListener","air","alt","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4f578c16.chunk.js","sourcesContent":["\n\n/*\n.catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\n  \n*/\n\n\nimport axios from 'axios'\nimport AxiosStream from \"axios-stream\";\nimport axiosRetry from 'axios-retry';\n\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\nconst is_local = window.location.hostname ==='localhost'\n\nconst hostUrl = process.env.REACT_APP_API_BASE_URL \nconst autori = is_local? 'local' : process.env.REACT_APP_AUTORI\nconst _url = is_local? 'http://127.0.0.1:8000/transmit/' : hostUrl \n\n\n\n\n\nconst configForm_ = {\n  headers: { \n    'Authorization': `${autori}`,\n    'Content-Type': 'multipart/form-data;boundary=boundary',\n    'Accept': 'application/json;text/plain'\n  }\n}\n\n\n\n\n\nconst api = axios.create({\n    baseURL: _url\n\n})\naxiosRetry(api, { retries: 3 });\nexport const create_ping = () => api.get(`ping/`, configForm_)\n\nexport const create_major = form => api.post(`major/`, form, configForm_)\nexport const is_major_detail = sender => api.get(`major/${sender}`, configForm_)\n\nexport const create_file = form => api.post(`file/`,form , configForm_)\nexport const multi_part_create = form => api.post(`multipartcreate/`,form , configForm_) // ....UNSUSED\nexport const multi_part_persigned = form => api.post(`multipartpersigned/`,form , configForm_) // ....UNSUSED\nexport const multi_part_complete = form => api.post(`multipartcomplete/`,form , configForm_) // ....UNSUSED\nexport const filed = (filename, count) => api.get(`file/${filename}-${count}`, configForm_)\n\nexport const upload_detail = id => api.get(`upload/${id}`, configForm_)\nexport const download_delete_detail = sender => api.delete(`remove/${sender}`, configForm_)\nexport const remove_file_detail = (id, filename) => api.delete(`removefile/${id}/${filename}`, configForm_)\nexport const is_mail_detail = mail => api.get(`mailvali/${mail}`, configForm_)\n\nexport const download_stream = (downFileName,extensionName, config) => AxiosStream.download(downFileName, extensionName, config);\n\n\n\n\n\nconst apis = {\n  upload_detail,\n  download_delete_detail,\n  create_major,\n  is_major_detail,\n  download_stream,\n  is_mail_detail,\n  create_ping,\n  create_file,\n  multi_part_create,\n  remove_file_detail,\n  filed,\n  multi_part_persigned,\n  multi_part_complete\n\n    \n}\n\n\nexport default apis","\n \n// colors\nconst highBlue = '#5ba3c7'\nconst grey = '#f0f0f0'\nconst pink = '#e8c8c8'\nconst green = '#a3c49f'\nconst orange = '#ebd7b7'\nconst white = '#ffffff'\nconst black = '#212121'\nconst olive = '#c4d184'\nconst lila = '#9397d9'\nconst red = '#d993a0'\nconst pastellgreen = '#98b8a7'\nconst yellow = '#f0df48'\nconst cosmos_grey = '#353535'\n//const accentColor =  '#ff757e' \nconst accentColor =  '#62bce3'//  '#819cdb'//'#84c4ba' \nconst background1 = '#505a66'\nconst background2 = '#404954'\nconst background3 = '#606b78'\nconst background_white = 'rgba(187, 187, 187, 0.886)'\nconst beige = '#baaea2'\nconst grey_blue = '#505a66'\nconst color = {\n    highBlue, \n    grey, \n    pink, \n    green, \n    orange, \n    white, \n    black, \n    accentColor, \n    olive, \n    lila, \n    red, \n    pastellgreen, \n    yellow , \n    grey_blue,\n    background1,\n    background2,\n    background3,\n    background_white\n} \n\nexport default color\n","\n/*\n\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n    */\n\nimport colors from './../colors'\nconst ProgressBar = (props) => {\n    const { bgcolor, counter } = props;\n  \n    const containerStyles = {\n      //position: 'absolute',\n      height: '6vh',\n      width: '100%',\n      backgroundColor: \"rgba(255, 255, 255, 0.512)\",\n      borderRadius: '0vh',\n      overflow: 'hidden',\n      borderRadius: '2px',\n      marginRight: '2em',\n      marginLeft: '2em'\n      \n    }\n  \n    const fillerStyles = {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      height: '100%',\n      width: `${counter}%`,\n      backgroundColor: colors.black,\n      \n    }\n  \n    const labelStyles = {\n      color: 'black',\n      height: '6vh',\n      width: '5em',\n      border: '1px solid rgba(151, 151, 151, 0.812)',\n      textShadow: `1px 1px ${colors.grey}`,\n      //paddingLeft:'3vw',\n      fontSize: '150%',\n      //minWidth: '50px',\n      fontWeight: 'bold',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginLeft: '30px',\n      backgroundColor: \"rgba(255, 255, 255, 0.512)\",\n      borderRadius: '2px',\n    }\n    \n    const progressDiv = {\n      height: '100%',\n      width: '94%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }\n    \n \n\n\n\n    return (\n      <div style={progressDiv}>\n        <div style={labelStyles}>{`${Math.floor(counter)} %`}</div>\n        <div style={containerStyles}>\n          <div style={fillerStyles}>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  export default ProgressBar;","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash } from \"react-icons/vsc\";\nimport SquareLoader from \"react-spinners/SquareLoader\";\nimport color from '../../colors';\nimport { colors } from '@material-ui/core';\n\n\n\n\nexport default class Item extends React.Component{\n\n    \n\n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const item =  this.props.item\n        const is_load = this.props.load\n\n        return(\n            <div className='download_item_frame'>\n                <div className='item_icon_div'>\n                    <div className='item_icon'>{is_load? <SquareLoader color={color.black} loading={true}  size={26} />:<VscFile size={30}/>}</div>\n                </div>\n                <div className='item_name_div'>\n                    <div className='item_name'>{item.origin_name}</div>\n                </div>\n                <div className='item_remove_div'>\n                    <button className='item_remove' onClick={()=>this.props.removeItem(item)}><VscTrash size ={18}/></button>\n                </div>\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash, VscFolder } from \"react-icons/vsc\";\nimport SquareLoader from \"react-spinners/SquareLoader\";\nimport color from '../../colors';\nimport { colors } from '@material-ui/core';\n\n\n\n\n\nexport default class Folder extends React.Component{\n\n\n    \n\n    \n\n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const foldername =  this.props.folder\n        const is_load = this.props.load\n\n        return(\n            <div className='folder_frame_div'>\n                <div className='item_icon_div'>\n                    <div className='item_icon'>{is_load? <SquareLoader color={color.black} loading={true}  size={26} />:<VscFolder size={30}/>}</div>\n                </div>\n                <div className='item_name_div'>\n                    <div className='item_name'>{foldername}</div>\n                </div>\n                <div className='item_remove_div'>\n                    <button className='item_remove' onClick={()=>this.props.removeItem(foldername)}><VscTrash size ={18}/></button>\n                </div>\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport Item from './item'\nimport Folder from './folder'\n\n\nfunction ListItem(props) {\n  return (<div>\n              <div className= \"list_item_folder\">{props.value}</div>\n          </div>);\n}\n\nexport default class FileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n          open:'', \n          \n  \n        }\n        \n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      if(this.props.items.length !== prevProps.items.length){\n      }\n    }\n\n    \n\n    \n\n    FileList=()=>{\n        const lines = [] \n        this.props.items.forEach(item => {\n          \n            lines.push(\n              <Item \n                item={item}\n                removeItem={(e)=>this.props.removeItem(e)}\n                load={this.props.load===item.file_guid? true: false}\n\n                />\n              )\n        });\n\n\n\n\n        const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item) } />);\n        return listItems; \n\n        \n    }\n    FileListOfItem=(item)=>{\n      const file = \n            <Item \n              item={item}\n              removeItem={(e)=>this.props.removeItem(e)}\n              load={this.props.load===item.file_guid? true: false}\n\n              />;\n      return file; \n\n      \n  }\n\n    \n\n\n    \n\n    FolderList=()=>{\n      const name = this.state.open\n      const lines = [] \n      var folder = ''\n      \n      for(let i of this.props.items){\n        if(i.folder_name.length<=0){\n          lines.push(this.FileListOfItem(i))\n          continue\n        }\n\n        \n        if(folder !== i.folder_name[0]){\n          lines.push(\n            <Folder\n              folder={i.folder_name[0]}\n              item={i}\n              removeItem={(e)=>this.props.removeFolder(e)}\n              load={this.props.load===i.file_guid? true: false}\n\n              />\n            )\n        }\n        folder = i.folder_name[0]\n      }\n\n\n\n\n      const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item)} />);\n      return listItems; \n\n      \n  }\n\n  \n  \n  \n  \n    render(){\n      const {hierarchy} = this.state\n      return (\n        <div className='File_list_frame'>\n          \n          {this.FolderList()}\n          \n        </div>\n      )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport ReactTooltip from \"react-tooltip\";\n\n\nexport default class FileList extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      place: \"top\",\n      type: \"dark\",\n      effect: \"float\",\n      condition: false\n    };\n  }\n\n  changePlace(place) {\n    this.setState({\n      place: place\n    });\n  }\n\n  changeType(type) {\n    this.setState({\n      type: type\n    });\n  }\n\n  changeEffect(effect) {\n    this.setState({\n      effect: effect\n    });\n  }\n\n  _onClick() {\n    this.setState({\n      condition: true\n    });\n  }\n\n  \n  \n  showView = ()=>{\n    if(!this.props.isLink){\n      return(\n        <div className='div_link'>\n            <div className='link_text'>der Downloadlink wurde erfolgreich an </div>\n            <div className='email_text'>{this.props.mailConfirm} </div>\n            <div className='link_text'>gesendet. </div>\n            <div className='link_text_2'>dein Download bleibt 12 Stunden lang gespeichert</div>\n            <div className='link_text_2'>alle Daten werden nach ablauf unwiederuflich gelöscht</div>\n          </div>\n      )\n    }else{\n      return(\n        <div className='div_link'>\n            <div className='link_text'> hier ist der link zum kopieren</div>\n            <a className='link_copy'\n                  data-for=\"custom-event\"\n                  data-tip=\"link wurde kopiert\"\n                  data-event=\"click focus\"\n                  onClick={() => {navigator.clipboard.writeText(this.props.link)}}\n                >\n                  {this.props.link}\n                </a>\n                <ReactTooltip id=\"custom-event\" place=\"right\" effect=\"solid\" globalEventOff=\"click\" afterShow={()=>{navigator.clipboard.writeText(this.props.link)}} />\n                <div className='link_text_2'>dein Download bleibt 12 Stunden lang gespeichert</div>\n                <div className='link_text_2'>alle Daten werden nach ablauf unwiederuflich gelöscht</div>\n          </div>\n      )\n    }\n  }\n\n\n\n\n\n  \n  \n  render(){\n    return (\n        <div className='view_finish'>\n          {this.showView()}\n        </div>\n    )\n  }\n    \n  \n  \n  }","import Swal from 'sweetalert2'\nimport colors from './../colors'\n\n\n\n\n\n\n//background: rgba(187, 187, 187, 0.886);\nconst alertView = (title, text, cancelBtn, okBtnText, cancelBtnText)=>{\n\n    // Alert POP UP\n    //\n    const e = Swal.fire({\n        background: 'rgba(187, 187, 187, 0.886)',\n        title: title,\n        text: text,\n        icon: 'warning',\n        showCancelButton: cancelBtn,\n        cancelButtonColor: colors.black,\n        confirmButtonColor: colors.black,\n        confirmButtonText: okBtnText,\n        cancelButtonText: cancelBtnText\n      }).then((result) => {\n        if (result.isConfirmed) {\n            return true\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n            return false\n        }\n      })\n      return e\n}\n\n\nexport const cancelUploadSwal=async()=>{\n  // Alert POP UP\n //\n const titel = 'Abbruch?'\n const text = 'sind Sie Sicher, das Sie den Upload abbrechen möchten !'\n const cancelBoolean = true\n const okBtnText = 'Ja, abbrechen'\n const cancelBtnText = 'Nein, weiter hochladen'\n\n const answer =  await alertView(titel, text, cancelBoolean, okBtnText, cancelBtnText)\n if(answer){\n     return true\n }\n \n}\n\nexport const newUploadSwal = async()=>{\n\n  // Alert POP UP\n  //\n  const titel = 'Neuer Upload?'\n  const text = 'sind Sie Sicher, Sie haben keine möglichkeit mehr an den Downloadlink zu kommen!'\n  const cancelBoolean = true\n  const okBtnText = 'Ja, ich habe den link kopiert'\n  const cancelBtnText = 'Nein, ich kopiere mir den link nochmal'\n\n  const answer =  await alertView(titel, text, cancelBoolean, okBtnText, cancelBtnText)\n  if(answer){\n      return true\n  }\n  \n}\n\n\nexport const sendAlerts = async(alert)=>{\n  const title = 'E-mail exestiert nicht'\n  const cancelBoolean = false\n  const okBtnText = 'Ok'\n\n  switch(alert){\n    case 'mailuser':\n      var text = 'bitte überprüfen deine    Absender    Adresse'\n      var answer =  await alertView(title, text, cancelBoolean,okBtnText, null) // alert View\n      return answer\n\n    case 'mailto':\n      var text = 'bitte überprüfen deine   Empfänger   Adresse'\n      var answer =  await alertView(title, text, cancelBoolean,okBtnText, null) // alert View\n      return answer\n\n    case 'empty':\n      var text = 'Pflichtfelder sind nicht ausgefüllt !'\n      const new_title = 'keine Eingabe'\n      var answer =  await alertView(new_title, text, cancelBoolean,okBtnText, null) // alert View\n      return answer\n  }\n}","import React from 'react';\nimport './index.css';\nimport Radio from '@material-ui/core/Radio';\nimport Switch from '@material-ui/core/Switch';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport {sendAlerts} from './../../alertViews';\nimport api from './../../api'\nimport {colors} from '@material-ui/core';\nimport {USE_DOWNLOAD, USE_NOT_DOWNLOAD, PLACEHOLDER_TEXT} from './../../text'\n\n\n\n\n\n\n\nexport class ViewText extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            useLink: true,\n            useDownload: false,\n            message: '',\n            mail_user: '',\n            mail_to: '',\n            send_option:'link',\n            visible: true\n\n        }\n        this.wrapper = React.createRef();\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.open !== prevProps.open) {\n            this.reset_state()\n        }\n    }\n\n    reset_state = () => {\n        this.setState({\n            useUserMail: false,\n            useLink: true,\n            useMail: false,\n            useDownload: true\n        })\n    }\n\n    handleInput = ({ target }) => {\n        this.setState({ [target.name]: target.value })\n\n        \n    }\n\n    handleMail = () => {\n        const is_used = this.state.useLink? false : true\n        this.setState({ useLink: is_used});\n    };\n\n    handleDownload = () => {\n        //const used = event.target.value\n        const is_used = this.state.useDownload? false : true\n        this.setState({useDownload: is_used});\n    };\n\n    \n\n\n\n\n\n\n\n\n\n\n\n    radioSwitchMail = ()=>{\n        const valueR = this.state.useLink? 'link' : 'mail'\n        return(\n            <div className='send_view_change_zone_div'>\n                <div className='send_view_radio_div'>\n                    <FormControl >\n                        <FormLabel className='send_view_formlabel'>Übermittlungsart</FormLabel>\n                        <RadioGroup value={valueR} onChange={this.handleMail} >\n                            <FormControlLabel value=\"link\" control={<Radio color=\"default\"/>} label=\"Link\" />\n                            <FormControlLabel value=\"mail\" control={<Radio color=\"default\"/>} label=\"Link per mail\" />\n                        </RadioGroup>\n                    </FormControl>\n                </div>\n                {this.useLinkOrMail()}\n            </div>\n        )\n    }\n\n    useLinkOrMail = () => {\n        const { useLink } = this.state\n        if(!useLink){\n            return (\n                <div className='send_view_show_options'>\n                    <div className='send_view_div_input'>E-mail des Absenders:\n                        <input className='send_view_input' type='email' name='mail_user' value={this.state.mail_user} onChange={this.handleInput}></input>\n                    </div>\n                    <div className='send_view_div_input'>E-mail des Empfänger:\n                        <input className='send_view_input' type='email' name='mail_to' value={this.state.mail_to} onChange={this.handleInput}></input>\n                    </div>\n                </div>\n            )\n        }else{\n            return (\n                <div className='send_view_show_options'>\n                    <div className='send_view_div'>\n                        <div className='send_view_div_linktext'>Erhalte einen Link nach dem Upload</div>\n                    </div>\n                </div>\n            )\n        }\n                \n          \n    }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    radioSwitchDownload = ()=>{\n        return(\n            <div className='send_view_change_zone_div'>\n                <div className='send_view_radio_div'>\n                    <FormControl >\n                    <FormLabel className='send_view_formlabel'>Download</FormLabel>\n                    <FormControlLabel control={\n                        <Switch size=\"medium\" color='primary' checked={this.state.useDownload} onChange={this.handleDownload} />}\n                        label=\"einmaliger Download\"\n                        />\n                    </FormControl>\n                </div>\n                {this.downloadOptionText()}\n            </div>\n        )\n    }\n\n    downloadOptionText = () => {\n        const { useDownload } = this.state\n        if(useDownload){\n            return (\n                <div className='sendview_info_text'>{USE_DOWNLOAD}</div>\n            )\n        }else{\n            return (\n                <div className='sendview_info_text'>{USE_NOT_DOWNLOAD}</div>\n            )\n        }\n        \n    }\n\n\n\n\n\n\n\n\n\n    send_info = async()=>{\n        const { mail_to, mail_user, message, useDownload, useLink  } = this.state\n        // sending option => use mail\n        if(!useLink){\n            // validate.... no input im E-mail field\n            if(!mail_user || !mail_to){\n                let answer =  await sendAlerts('empty')\n                if(answer){\n                    return\n                }\n            }\n            // validate.... e-mail Absender\n            const is_mail_user = await api.is_mail_detail(mail_user).then(res=>{return res.data.isSuccess})\n            if(!is_mail_user){\n                let answer =  await sendAlerts('mailuser')\n                if(answer){\n                    return\n                }\n            }\n            // validate.... e-mail Empfänger\n            const is_mail_to = await api.is_mail_detail(mail_to).then(res=>{return res.data.isSuccess})\n            if(!is_mail_to){\n                let answer =  await sendAlerts('mailto')\n                if(answer){\n                    return\n                }\n            }\n        }\n        this.props.infos({ mail_user, mail_to, message, useDownload, useLink })\n\n    }\n\n\n    hide() {\n        this.setState({ visible: false });\n    }\n    \n\n    render() {\n        \n        return (\n            <div className={this.props.mobile?'send_view_dialog_mobile':'send_view_dialog'}>\n                <div className={this.props.mobile?'send_view_frame_mobile':'send_view_frame'}>\n                    <div className='send_view_title_div'>\n                        Datenübertragung\n                    </div>\n                    <div className='send_view_change_zone'>{this.radioSwitchDownload()}</div>\n                    <div className='send_view_change_zone'>{this.radioSwitchMail()}</div>\n                    <div className='send_view_div'>\n                        <textarea className='send_view_message' placeholder={PLACEHOLDER_TEXT} rows={6} type='text' name='message' value={this.state.message} onChange={this.handleInput}></textarea>\n                    </div>\n                    <div className='send_view_btn_div'>\n                        <button className='send_btn' onClick={() => this.props.close()}>abbruch</button>\n                        <button className='send_btn' style={{color: colors.blue}} onClick={() => this.send_info()}>senden</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ViewText;\n\n\n\n","// Fix strings in App\n\nexport const USE_DOWNLOAD = \" Nach dem ersten Dowload werden alle Daten der Übertragung gelöscht und es ist kein weiter Download mehr möglich! \"\nexport const USE_NOT_DOWNLOAD = \" Nach dem Upload werden alle deine Daten, 12 Std lang in einer Cloud gespeichert und können abgerufen werden!  \"\nexport const PLACEHOLDER_TEXT = '...schreibe eine Nachricht an den Empfänger ? '","\nimport { v4 as uuidv4 } from 'uuid';\n\nconst CHUNK_SIZE = 1048576 * 1 // 1 MB \n\n // ********************\n    // *******FIIE*********\n    // ********************\nexport default function fileContext(input){\n    if(input.target.files.length>1){\n        return getFileContextFolder(input)\n    }else{\n        return getFileContext(input)\n    }\n}\n\nfunction getFileContext(input){\n        const files = []\n        const file_arr = Array.from(input.target.files)\n        var size = 0\n        file_arr.forEach(file=>{\n            const _file = file;\n            const _totalCount =  Math.ceil(file.size / CHUNK_SIZE) // counts of cjunks\n            const _fileID = uuidv4() \n            const file_json = {\n                chunk_count: _totalCount,\n                file_size: _file.size,\n                origin_name: _file.name,\n                file_guid: _fileID,\n                file_data: _file,\n                folder_name:[],\n                chunks: []\n            }\n            files.push(file_json)\n            size = size + _file.size\n        })\n        return {files, size}\n        \n    }\n\n    // ********************\n    // *******FOLDER*********\n    // ********************\nfunction getFileContextFolder(input){\n        const files = []\n        const file_arr = Array.from(input.target.files)\n        var size = 0\n        file_arr.forEach(file=>{\n            const _file = file;\n            const _totalCount =  Math.ceil(file.size / CHUNK_SIZE) // counts of cjunks\n            const _fileID = uuidv4() \n            const _folderName = file.webkitRelativePath.split(\"/\")\n            const popped = _folderName.pop()\n            const file_json = {\n                chunk_count: _totalCount,\n                file_size: _file.size,\n                origin_name: _file.name,\n                file_guid: _fileID,\n                file_data: _file,\n                folder_name: _folderName,\n                chunks: []\n            }\n            files.push(file_json)\n            size = size + _file.size\n        })\n        return {files, size}\n        \n    }","\n  \nimport React from 'react';\nimport './index.css'\nimport { cancelUploadSwal, newUploadSwal } from './../../alertViews';\n\n\n\n\nexport default class CancelView extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={ \n            \n\n        }\n        \n    }\n  \n    uploadCancel = async()=>{\n        const answer =  cancelUploadSwal\n        if(answer){\n            this.props.loopBreak()\n        }\n        \n    }\n\n    \n    render(){\n            return (\n                <div className='progressbar_btn_div'>\n                    <button onClick={()=>this.uploadCancel()}  className='upload_cancel'>STOP UPLOAD</button>\n                </div>\n            )\n    }\n      \n    \n  \n  \n  }\n\n\n","\nexport default function roundFileSize(size){\n    // kilo bytes\n    const kb_size = Math.round(size / 1000) \n    //mega bytes\n    if(kb_size > 1000){\n        const mb_size = Math.round(size / 100000) / 10 \n        // giga bytes\n        if(mb_size > 2000){\n            const gb_size = Math.round(size / 10000000) / 100 \n            return gb_size + '  GB'\n        }\n        return mb_size + '  MB'\n    }\n    return kb_size + '  KB'\n}","import Swal from 'sweetalert2'\nimport './index.css'\nimport colors from './../colors'\nimport { renderToString } from 'react-dom/server'\nimport roundFileSize from '../helpers/roundFileSze';\nimport color from './../colors';\n\n\nconst htmlLayout = (infos)=>{\n  const { mail_to, mail_user, date, use_download, use_link, files } = infos\n  let _size = 0\n  for (const file of files) {\n    _size = _size + file.file_size\n  };\n  const upload_size = 'gesamt '+ roundFileSize(_size)\n  const options = { weekday: 'long', year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric' };\n  const ds = new Date(date)\n  const is_mail = mail_user ? mail_user : 'keine Angabe'\n  const is_mail_to = mail_to === [''] ? mail_to : 'keine Angabe'\n  const is_use_download = use_download ? 'einmailger Download': 'upload wird nach 12 Std gelöscht'\n  const is_use_link = use_link ? 'upload-Link' : 'E-mail Benachrichtung'\n  return(\n    <div >\n        <div style={{fontWeight: '600',height: '1.5em'}}> Erstellt: <span style={{fontWeight: '300'}}> {ds.toLocaleDateString(\"de-DE\", options)}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Dateigröße: <span style={{fontWeight: '300'}}> {upload_size}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Absender: <span style={{fontWeight: '300'}}> {is_mail}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Empfänger: <span style={{fontWeight: '300'}}> {is_mail_to}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Speicher Option: <span style={{fontWeight: '300'}}> {is_use_download}</span></div>\n        <div style={{fontWeight: '600',height: '1.5em'}}> Übermittlungsart: <span style={{fontWeight: '300'}}> {is_use_link}</span></div>\n    </div>\n  )\n}\n\nconst test = {\n  backgroundColor: 'yellow',\n  color: 'black'\n  \n}\n\n//background: rgba(187, 187, 187, 0.886);\nconst infoView = (title, text, cancelBtn, okBtnText, cancelBtnText)=>{\n\n    // Alert POP UP\n    //\n    const e = Swal.fire({\n        background: 'rgba(187, 187, 187, 0.886)',\n        title: title,\n        html: text,\n        icon: 'info',\n        showCancelButton: cancelBtn,\n        cancelButtonColor: colors.black,\n        confirmButtonColor: colors.black,\n        confirmButtonText: okBtnText,\n        cancelButtonText: cancelBtnText,\n      }).then((result) => {\n        if (result.isConfirmed) {\n            return true\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n            return false\n        }\n      })\n      return e\n}\n\n\n\n\n\nexport const  downloadInfoView = async(infos)=>{\n  const title = 'Upload Infos'\n  const cancelBoolean = false\n  const okBtnText = 'Ok'\n  let htmlText = renderToString(htmlLayout(infos))\n  let answer =  await infoView(title, htmlText, cancelBoolean,okBtnText, null) // alert View\n  if(answer){\n      return\n      }\n}\n\nexport const  simpleInfoView = async(infos)=>{\n  const title = 'FUCK !'\n  const cancelBoolean = false\n  const okBtnText = 'Ok'\n  let htmlText = infos\n  let answer =  await infoView(title, htmlText, cancelBoolean,okBtnText, null) // alert View\n  if(answer){\n      return\n      }\n}","\n  \nimport React from 'react';\nimport './index.css'\nimport api from './../api'\nimport ProgressBar from './../progressbar'\nimport Itemlist from './uploadFileList'\nimport FinishView from './uploadFinishView'\nimport SendView from './sendView'\nimport fileContext from './fileHandle/fileContext'\nimport range from '../helpers/getRange';\nimport CancelView from './cancelView';\nimport colors from './../colors'\nimport { VscDiffAdded, VscFolder, VscFolderActive } from \"react-icons/vsc\";\nimport { cancelUploadSwal, newUploadSwal } from './../alertViews';\nimport { simpleInfoView } from './../infoViews';\nimport Modal from 'react-modal';\nimport roundFileSize from '../helpers/roundFileSze';\nimport axios from 'axios'\nimport axiosRetry from 'axios-retry';\nimport { file } from 'jszip';\n\nconst SendViewStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      border: `1px solid ${colors.black}`,\n      borderRadius: '2px',\n      background: 'rgba(236, 236, 236, 0.668)'\n    },overlay: { background: 'rgba(64, 64, 64, 0.668)' } // blur background\n};\n\n\nconst CHUNK_SIZE = 1048576 * 1 // 1 MB \nconst UPLOAD_THREAD = 40\nconst source = axios.CancelToken.source();\n\nexport default class UploadView extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={ \n            files:[],\n            filesSize:0,\n            infos:{},\n            showProgress: false,\n            progress: 0,\n            openSendView: false,\n\n            mailConfirm: '',\n            upload_success: false,\n            visible: false,\n            link: '',\n            isLink: null,\n            fileLoopBreak: false,\n            majorId: null,\n            upload_begin: '',\n            inputFolder: false,\n            eventArr :[],\n\n        }\n        this.baseState = this.state \n        \n    }\n  \n    \n    resetUpload = () => {\n        this.setState({\n            showProgress: false,\n            process: 0,\n            upload_success: false,\n        })\n    }\n\n    timeout=(ms)=> {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    cancelUpload = ()=>{\n        if(this.state.fileLoopBreak){\n            console.log('this.cancelUpload')\n            source.cancel('post canceled.')\n            this.setState(this.baseState)\n        }\n    }\n\n    inputHandle=(input)=>{\n        const context = fileContext(input)\n        const {files, filesSize} = this.state\n        this.setState({files: files.concat([...context.files]), filesSize: filesSize + context.size})\n    }\n\n    \n\n    uploadIsCancel = async(id, file)=>{\n        const filename = file.file_guid\n        await api.remove_file_detail(id, filename).then(res=>{\n            const is_remove = res.data.isSuccess\n            if(is_remove){\n                this.removeItem(file)\n                this.setState({majorId: id})\n                console.log('file gelöscht............!')\n                this.resetUpload()\n            }\n        })\n\n    }\n\n    newConnect = async(file, id, count, chunkCount )=>{\n        var connect = true\n        while (connect){\n            console.log('wiederhole verbindung')\n                try{\n                    const ping = await api.create_ping()\n                    if(ping){\n                        console.log(ping.data.is)\n                        console.log('**** CONNECT *****')\n                        connect = false\n                        await this.counterOfFile(file, id, count , chunkCount )\n\n                    }\n                }catch{\n                    if(!this.state.showProgress){\n                        connect = false\n                    }\n                    await this.timeout(3000);\n                }\n        }\n    }\n    \n\n    newUpload = async()=>{\n        const answer =  await newUploadSwal()\n        if(answer){\n            this.setState({\n                upload_success: false, \n                use_link: null,\n                use_email: null\n            })\n        }\n    }\n\n    \n    progressAction = (progressEvent,count, fullCount , fileSize)=>{\n        const loadedFromCHunk = (progressEvent.loaded / progressEvent.total) * 100\n        const {eventArr} = this.state\n        eventArr[count - 1] = loadedFromCHunk\n        var sum = eventArr.reduce(function(a, b){\n            return a + b;\n        }, 0);\n        \n        const progress = sum / fullCount\n        this.setState({progress: progress, eventArr: eventArr})\n        \n        \n      }\n\n   \n\n\n    // ACTION\n    // user send data........\n    //\n    send = (infos)=>{\n        const {files} = this.state\n        this.setState({openSendView: false, showProgress: true, infos}, ()=>{\n            this.createMajor(files, infos)\n        })\n    }\n\n\n\n    createMajor = async (files, infos) => {\n        let majorId = this.state.majorId\n        if(!majorId){\n            const form = new FormData()\n            form.append('mail_to', infos.mail_to)\n            form.append('mail_user', infos.mail_user)\n            form.append('message', infos.message)\n            form.append('use_download', infos.useDownload)\n            form.append('use_link', infos.useLink)\n            //\n            // create Major Model\n            majorId = await api.create_major(form).then(res=>{\n                //console.log('res => ceate ', res)\n                if(res.data.isSuccess){\n                    return res.data.id\n                }else{\n                    if(res.data.clean){\n                        console.log('hier')\n                        const info = 'du hast gerade die gesamten Daten von Airchannel gelöscht !'\n                        simpleInfoView(info)\n                        this.resetUpload()\n                        \n                    }\n                    return false\n                }   \n            }) \n        }\n        \n        // start loop of  all chunks\n        if (majorId){\n            for (const file of files) {\n                this.cancelUpload()\n                this.setState({upload_begin: file.file_guid})\n                await this.upload_dispatcher(this.create_chunks(file), majorId)\n                this.setState({process:0,loaded:0, total:0, eventArr:[]})\n            }\n            console.log('all finish')\n            this.uploadCompleted(majorId)\n        }\n    }\n\n\n    \n\n    create_chunks= (file)=>{\n        let chunk_start  = 0\n        for(let i = 1; i<=file.chunk_count; i++){\n            const chunk = file.file_data.slice(chunk_start, CHUNK_SIZE + chunk_start)\n            file.chunks.push(chunk)\n            chunk_start = chunk_start + chunk.size\n        }\n        return file\n    }\n\n\n\n    countListLoop=(countlist, file,id)=>{\n        const promises = []\n        for(let i of countlist){\n            const count = parseInt(i) + 1\n            this.cancelUpload()\n            promises.push(this.createFile(file, id, count, file.chunks[i].size))\n        }\n        return promises\n    }\n\n    s3UrlLoop=async(countlist, file, id)=>{\n        const promises = []\n        for(let e of countlist){\n            const count = parseInt(e) + 1\n            console.log(count)\n            const u = await this.createFile(file, id, count, file.chunks[e].size)\n            this.cancelUpload()\n            promises.push(this.uploadFileToS3(u, file.chunks, parseInt(u.bucket), file.file_guid, file.file_size))\n        }\n        return promises\n    }\n    \n    \n    upload_dispatcher = async(file, id)=>{\n        const countArr = [...range(1, file.chunk_count)]\n        var i,j, countlist, chunk = UPLOAD_THREAD;\n        for (i = 0,j = countArr.length; i < j; i += chunk) {\n            countlist =countArr.slice(i, i + chunk);\n            this.cancelUpload()\n            await Promise.all(await this.s3UrlLoop(countlist, file, id))\n        }\n        this.removeItem(file)\n           \n    }\n\n    \n    createFile = async(file, id, count, chunkSize) => {\n        try {\n            const form = new FormData()\n            form.append('id', id)\n            form.append('chunks', count)\n            form.append('filename', file.file_guid)\n            form.append('file_size', file.file_size)\n            form.append('chunk_size', chunkSize)\n            form.append('origin_name', file.origin_name)\n            form.append('extension', file.file_data.name.split('.').slice(-1)[0])\n            if(file.folder_name){\n                form.append('folder', JSON.stringify(file.folder_name))\n            }\n            \n            return await api.create_file(form).then(res=>{\n                const presignedPostData = res.data.s3\n                return presignedPostData\n            })\n           \n        }catch (error) {\n            //debugger\n            console.log('error', error)\n        }\n    } \n \n  \n\n\n    uploadFileToS3 = async(presignedPostData, chunks, count, filename, fileSize) => {\n        // create a form obj\n        const formData = new FormData();\n        // append the fields in presignedPostData in formData         \n        Object.keys(presignedPostData.fields).forEach(key => {\n                      formData.append(key, presignedPostData.fields[key]);\n                    });           \n        \n        formData.append(\"file\", chunks[count - 1]);\n        // post the data on the s3 url\n\n        const config = {\n            onUploadProgress: progressEvent => this.progressAction(progressEvent, count, chunks.length, fileSize )  /*console.log('chunk', count,' ',Math.floor(progressEvent.loaded/100000),  ' => ',Math.floor(progressEvent.total/100000))*/,\n            headers: {\n                'Content-Type': \"multipart/form-data\",\n             },\n             cancelToken: source.token\n          \n\n        }\n        //console.log(presignedPostData.url)\n\n        axiosRetry(axios, { retries: 8, retryCondition: (_error) => true});\n        await axios.post(presignedPostData.url, formData, config)\n        .catch(err=>{\n            if (axios.isCancel(err)) {\n                console.log(err.message);\n                formData.delete('file')\n              }\n            return \n        })\n        //console.log('____________')\n        this.fileSetStorage(filename, count)\n             \n    }\n\n    fileSetStorage = (filename, count)=>{\n        api.filed(filename,count).then(res=>{\n            console.log(count,' =>  ', res.data.isSuccess)\n        })\n    }\n\n    uploadCompleted = async (id) => {\n        \n        if(this.state.fileLoopBreak){\n            this.setState({fileLoopBreak: false})\n            return\n        }\n        const response = await api.upload_detail(id)\n        const data = response.data;\n        if (data.isSuccess) {\n            if(data.link){\n                \n                const download_link =  data.link\n                if (typeof window !== 'undefined') {\n                    const path = window.location.protocol + '//' + window.location.host +'/'+  download_link; \n                    //console.log('show download link ', download_link)\n                    this.setState({upload_success: true, link: path, isLink: true})\n                }\n            }\n            if(data.email){\n                const sended_mail =  data.email\n                console.log('show download email', sended_mail)\n                this.setState({upload_success: true, mailConfirm: sended_mail, isLink: false})\n            }\n            this.resetUpload()\n            this.setState({upload_success: true})\n        }else{\n            if(data.list){\n                console.log('... es wurde nicht alles gespeichert !!!!')\n                console.log(data.list)\n                //this.resetUpload()\n            }\n        }\n    }\n    \n      \n\n\n    \n\n    // removed item from list \n    // .file_guid = uuid name from upload file\n    // stste new list \n    removeItem = (uploadFile)=>{\n        let full_size = this.state.full_size\n        full_size = full_size - uploadFile.file_size\n        const fileList = this.state.files\n        const removed_list = fileList.filter(file=>{ \n            if(file.file_guid != uploadFile.file_guid){\n               return file\n           }\n        })\n        this.setState({files: removed_list, full_size, progress: 0})\n    }\n\n    // removed item from list \n    // .file_guid = uuid name from upload file\n    // stste new list \n    removeFolder = (foldername)=>{\n        const fileList = this.state.files\n        var full_size = 0\n        const removed_list = fileList.filter(file=>{ \n            \n            if(file.folder_name[0] !== foldername){\n                full_size = full_size + file.file_size\n                return file\n           }\n        })\n        \n        \n        this.setState({files: removed_list, full_size, progress: 0})\n    }\n\n    \n\n    // if file in Upload list\n    // show button to open send menu\n    readyToSend = ()=>{\n        return(\n            <div className='ready_to_send_div'> \n                <button className='start_upload_btn' hidden={this.state.openSendView} onClick={()=>this.setState({openSendView: true})}>senden</button>\n            </div>\n        )\n    }\n\n    \n    \n\n    bottomView = ()=>{\n        const {mobile} = this.props\n        const {upload_success, inputFolder, files,filesSize} = this.state\n        const upload_size = 'gesamt '+ roundFileSize(filesSize)\n        if(upload_success){\n            return(\n                <div className='div_input_upload' onClick={()=>this.newUpload()}>\n                    <label className='label_input_upload'>\n                        <VscDiffAdded size={50} color={colors.black}/>\n                    </label>\n                    <div className='text_input_upload'>hinzufügen von Dateien</div>\n                </div>\n            )\n        }else{\n            const show_text = files.length>0 ? upload_size : 'hinzufügen von Dateien'\n            return(\n                <div className='div_input_upload'>\n                    <label className='label_input_upload'>\n                        {inputFolder? <input  className='input_upload' type='file' multiple onChange={this.inputHandle}  directory=\"\" webkitdirectory=\"\" msdirectory=\"\" odirectory=\"\"/> : <input  className='input_upload' type='file' multiple onChange={this.inputHandle}/> }\n                        <VscDiffAdded size={50} color={colors.black}/>\n                    </label>\n                    <div className='text_input_upload_size'  >{show_text}</div>\n                    {files.length>0 ? this.readyToSend() : null}\n                    {mobile? null: <div className='change_input_div' onClick={()=>this.setState({inputFolder: inputFolder? false:true})}>{inputFolder? <VscFolderActive size={30}/>:<VscFolder size={30}/>}</div>}\n                    <div className='rodal_div' >\n                        <Modal\n                            style={SendViewStyles}\n                            isOpen={this.state.openSendView} \n                            onRequestClose={()=>this.setState({openSendView: false})}\n                            ariaHideApp={false}\n                \n                        >\n                            <SendView \n                                open={this.state.openSendView} \n                                close={()=>this.setState({openSendView: false})} \n                                infos={(infos)=>this.send(infos)} \n                                mobile={this.props.mobile} \n                                newOpen={()=>this.setState({openSendView: true})}\n                            />\n                        </Modal>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    \n\n    \n\n\n    render(){\n        const {showProgress, files, progress, upload_begin, link, upload_success, mailConfirm, isLink} = this.state\n        return (\n            <div className='frame_input_upload'>\n                {!showProgress?\n                    this.bottomView()\n                    :\n                    <div>{!showProgress? null: \n                        <div className='progressbar_view'>\n                            <ProgressBar counter={progress} bgcolor={colors.accentColor}/>\n                            <div className='cancel_place'><CancelView loopBreak={()=>this.setState({fileLoopBreak: true})} /></div>\n                        </div>}\n                    </div>\n                }\n                {files.length>0 ? <div className='upload_list'><Itemlist items={files} load={upload_begin} removeItem={(e)=>this.removeItem(e)} removeFolder={(e)=>this.removeFolder(e)}/></div> : null}\n                {upload_success ? <div className='upload_finish'><FinishView link={link} mailConfirm={mailConfirm} isLink={isLink} /></div> : null}    \n            </div>\n        )\n    }\n}\n\n\n","\nexport default function range(start, end){\n    return Array.from({ length: end - start + 1 }, (_, i) => i)\n}","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash } from \"react-icons/vsc\";\n\n\n\n\n\nexport default class Item extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n            filename: '',\n\n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n  \n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const item =  this.props.item\n        return(\n            <div className='download_item_frame'>\n                <div className='download_item_icon_div'>\n                    <div className='download_item_icon'><VscFile size={30}/></div>\n                </div>\n                <div className='download_item_name_div'>\n                    <div className='download_item_name'>{item.origin_name}</div>\n                </div>\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport { VscFile, VscTrash, VscFolder } from \"react-icons/vsc\";\nimport SquareLoader from \"react-spinners/SquareLoader\";\nimport color from '../../colors';\nimport { colors } from '@material-ui/core';\n\n\n\n\n\nexport default class Folder extends React.Component{\n\n\n    \n\n    \n\n  \n  \n    render(){\n        //console.log(this.props.item  , '  item')\n        const foldername =  this.props.folder\n        const is_load = this.props.load\n\n        return(\n            <div className='folder_frame_div'>\n                <div className='item_icon_div'>\n                    <div className='item_icon'>{is_load? <SquareLoader color={color.black} loading={true}  size={26} />:<VscFolder size={30}/>}</div>\n                </div>\n                <div className='item_name_div'>\n                    <div className='item_name'>{foldername}</div>\n                </div>\n                <div className='item_remove_div'>\n                    <button className='item_remove' onClick={()=>this.props.removeItem(foldername)}><VscTrash size ={18}/></button>\n                </div>\n            </div>\n        )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\nimport Item from './item'\nimport Folder from './folder'\n\n\nfunction ListItem(props) {\n    return (<div>\n                <div className= \"list_item\">{props.value}</div>\n            </div>);\n}\n\nexport default class DownloadFileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          \n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    componentDidUpdate(prevProps){\n      //console.log(prevProps, '   prevprps')\n      if(this.props.items.length !== prevProps.items.length){\n        console.log('items length änderung')\n      }\n    }\n\n\n\n\n    FileListOfItem=(item)=>{\n      const file = \n            <Item \n              item={item}\n              removeItem={(e)=>this.props.removeItem(e)}\n              load={this.props.load===item.file_guid? true: false}\n\n              />;\n      return file; \n\n      \n  }\n\n\n    folderList=()=>{\n      const lines = [] \n      var folder = ''\n      \n      for(let i of this.props.items){\n        if(i.folder.length<=0){\n          lines.push(this.FileListOfItem(i))\n          continue\n        }\n\n        \n        if(folder !== i.folder[0]){\n          lines.push(\n            <Folder\n              folder={i.folder[0]}\n              item={i}\n              removeItem={(e)=>this.props.removeFolder(e)}\n              //load={this.props.load===i.file_guid? true: false}\n\n              />\n            )\n        }\n        folder = i.folder[0]\n      }\n\n\n\n\n      const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item)} />);\n      return listItems; \n\n      \n  }\n\n\n    fileList=()=>{\n        const lines = [] \n        this.props.items.forEach(item => {\n            lines.push(\n              <Item \n                item={item}\n\n                />\n              )\n        });\n\n\n\n\n        const listItems = lines.map((item) =>\n        <ListItem value={item} key={lines.indexOf(item) } />);\n        return listItems; \n\n        \n    }\n  \n  \n  \n    render(){\n      return (\n        <div className='File_list_frame'>{this.fileList()}</div>\n      )\n    }\n      \n    \n  \n  \n  }","import React from 'react';\nimport './index.css';\n\n\n\nexport default class DownloadFileList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n          backcolor: 'transparent'\n  \n        }\n    }\n  \n  \n    componentDidMount(){\n    }\n\n    /*\n    setBackground = ()=>{\n      const color = this.state.backcolor = 'transparent' ? 'white' : 'transparent'\n      this.setState({backcolor: color})\n    }\n    */\n  \n  \n  \n    render(){\n      return (\n        <div className='download_mess_frame' >{this.props.message}</div>\n      )\n    }\n      \n    \n  \n  \n  }","\n\nimport React from 'react';\nimport './index.css'\nimport api from './../api'\nimport axios from 'axios'\nimport ProgressBar from './../progressbar'\nimport colors from './../colors'\nimport DownloadFileList from './downloadFileList'\nimport DownloadMessageView from './downloadMessView'\nimport { VscArrowDown, VscInfo, VscCheck } from \"react-icons/vsc\";\nimport { downloadInfoView} from '../infoViews';\nimport { saveAs } from 'file-saver';\n\n\n\nexport default class DownloadView extends React.Component{\n\n  constructor(props){\n      super(props);\n      this.state={    \n         progress: 0,\n         loaded: 0,\n         total:0,\n         showProgress: false,\n         files: [],\n         majorInfo: {},\n         message: '',\n         isContent:false,\n         link:this.props.match.params.id,\n         complete: false,\n         openInfoView: false\n\n\n      }\n  }\n  componentDidMount(){\n    console.log(' DOWNLOAD VIEW ')\n    const link = this.props.match.params.id\n    this.checkLink(link)\n\n  }\n\n  progressAction = (progressEvent,fileSize)=>{\n    const {loaded, total} = this.state\n    if(progressEvent.loaded === progressEvent.total){\n      this.setState({loaded: loaded + progressEvent.loaded, total: total + progressEvent.total })\n    }\n    console.log(loaded + progressEvent.loaded, '  /  ', fileSize)\n    const progress =  (loaded + progressEvent.loaded) /  fileSize  * 100 \n    this.setState({progress: progress})\n  }\n\n  \n\n  infoView = async()=>{\n    const { mail_to, mail_user, date, use_download, use_link } = this.state.majorInfo\n    const {files} = this.state\n    const infos = {mail_to, mail_user, date, use_download, use_link, files }\n    let answer =  await downloadInfoView(infos) // alert View\n    if(answer){\n        return\n        }\n\n    \n\n}\n\n  checkLink = async(link)=>{\n    await api.is_major_detail(link).then(res=>{\n      if(res.data.isSuccess){\n        const data = res.data\n        this.setState({isContent: true, files: data.fileList, message: data.message, majorInfo: data.majorInfo})\n        console.log(res.data)\n      }\n    })\n  }\n\n\n\n  removeItem = (item)=>{\n    const fileList = this.state.files\n    const {link, majorInfo} = this.state\n    if(majorInfo.use_download){\n      this.deleteBucket(link)\n    }\n    const removed_list = fileList.filter(file=>{ \n        if(file.filename != item.filename){\n           return file\n       }else{\n           console.log('gefunden !!!!')\n       }\n    })\n    this.setState({files: removed_list, progress: 0, loaded:0, total:0, showProgress: false})\n  }\n\n  deleteBucket=async(link)=>{\n    await api.download_delete_detail(link).then(res=>{\n      if(res.data.isSuccess){\n        console.log(' delete bucket is success ')\n      }else{\n        console.log('delete bucket fail')\n      }\n\n    })\n  }\n\n\n  \n\n// test file  \n// http://localhost:3000/2a5af97c23ef66b824b893f583acfcdf5e613f36c4a1df27b020b4465ec9ffb4\n\n\n  file_loop = async () => {\n    const {files} = this.state\n\n    for (const file of files) {\n      const chunks = file.count\n      let start = 0\n      const promises = []\n      for(let i=1; i<=chunks; i++){\n        if(i%100==0 || i== chunks){\n          console.log(start, ' : ', i )\n          promises.push( await this.downloadFiles(file, start, i))\n          start = start + 100\n\n        }\n      }\n      const folderPath = file.folder.join('/')\n      const filePath = folderPath +'/'+file.origin_name\n      const resBuffers = await Promise.all(promises)\n      saveAs(new Blob([...resBuffers], {\n        type: 'application/octet-stream'\n      }),file.origin_name)\n      //\n      this.removeItem(file)\n       \n    }\n    //this.deleteBucket()\n    this.setState({showProgress: false, })\n  } \n\n\n  downloadFiles = async(file, start, end)=>{ \n    const params = `/${start}/${end}`\n    const isLocal = window.location.hostname=='localhost'\n    const _url = isLocal? 'http://127.0.0.1:8000/transmit/' :  process.env.REACT_APP_API_BASE_URL\n    const autori = isLocal? 'local' : process.env.REACT_APP_AUTORI\n    const {filename, file_size } = file\n    this.setState({showProgress:true})\n    const configDownload = {\n      responseType: 'arraybuffer',\n      onDownloadProgress:(progressEvent)=> {\n        this.progressAction(progressEvent, file_size)\n        //this.setState({counter: percentage})\n      },\n      url: _url + 'download/' + filename + params,\n      method: 'get',\n      headers:{\n        'Authorization': `${autori}`,\n      }\n      \n    }\n    return await axios(configDownload)\n        .then(res => {return res.data})\n        .catch(error => {\n            console.log(error.message);\n        });\n\n    \n  }\n\n  \n\n  messageView = ()=>{\n    const {message} = this.state\n    return(\n        <div>\n        {message.length>0 ? \n          <div className='download_message_view'>\n            <div className='download_message_text'> Eine Nachricht für dich </div>\n            <DownloadMessageView message={message} />\n          </div>\n          : null}\n        </div>\n            \n    )\n  }\n\n\n\n\n  infoBtnView = ()=>{\n    return (\n      <div className= 'download_info_btn_div' onClick={()=>this.infoView()}><VscInfo size={30} color={colors.black}/></div>\n    )\n  }\n\n  \n\n  changeDownloadView =()=>{\n    const complete = this.state.counter === 100\n    return(\n      <div>\n      {!complete?\n        <div className='div_input_upload'>\n            <div className='download_icon_div' onClick={()=>this.file_loop()}><VscArrowDown size={35} color={colors.black}/></div>\n            <div className='text_input_upload'>starte den download</div>\n            {this.infoBtnView()}\n        </div>\n        :\n        <div className='div_input_upload'>\n          <div className='download_icon_div' ><VscCheck size={35} color={colors.black}/></div>\n          <div className='text_input_upload'>download complete</div>\n        </div>\n      }\n      </div>\n    )\n  }\n\n  \n\n\n  render(){\n    const {isContent, showProgress, progress, files} = this.state\n    if(isContent){\n      return (\n        <div className='frame_input_upload' >\n          {!showProgress?\n            this.changeDownloadView():<div>{!showProgress? null: <div className='progressbar_view_download' ><ProgressBar counter={progress} bgcolor={colors.accentColor}/></div>}</div>\n          }\n          {files.length>0 ? <div className='download_list_view'>{this.messageView()}<DownloadFileList items={files} /></div> : null}\n          \n        </div>\n      );\n    }else{\n      return (\n        <div className='frame_input_upload' >\n            <div className='div_input_upload'>\n              <div className='text_input_upload_NO_CONTENT'>NO CONTENT</div>\n            </div>\n        </div>\n      );\n    }\n    \n  }\n}\n\n","import React from 'react';\nimport './index.css';\nimport { VscThreeBars } from \"react-icons/vsc\";\nimport colors from './../colors'\nimport { DropdownView} from './dropdownView';\nimport Dropdown from 'react-dropdown';\n//import 'react-dropdown/style.css';\n\n\nconst options = [\n    { value: 'one', label: 'One' },\n    { value: 'two', label: 'Two', className: 'myOptionClassName' },\n    {\n     type: 'group', name: 'group1', items: [\n       { value: 'three', label: 'Three', className: 'myOptionClassName' },\n       { value: 'four', label: 'Four' }\n     ]\n    },\n    {\n     type: 'group', name: 'group2', items: [\n       { value: 'five', label: 'Five' },\n       { value: 'six', label: 'Six' }\n     ]\n    }\n  ];\n\nconst defaultOption = null;\n\nexport default class DropdownMenu extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={ \n        }\n                \n            \n  \n        \n    }\n  \n  \n    componentDidMount(){\n    }\n\n    \n\n    onSelect=(e)=>{\n        console.log(e)\n    }\n    \n      \n   \n\n  \n  //<VscThreeBars size={30} color={colors.white}/> \n  \n    render(){\n      return (\n        <div className='menu_icon'>\n            <Dropdown \n                arrowClosed={<VscThreeBars size={30} color={colors.black}/>}\n                arrowOpen={<VscThreeBars size={30} color={colors.black}/>}\n                options={options} \n                onChange={this.onSelect} \n                value=''\n                placeholder=' '\n                placeholderClassName='test' \n                placeHolderValue= {false} />\n            </div>\n        \n      )\n    }\n      \n    \n  \n  \n  }","export default __webpack_public_path__ + \"static/media/AIR_1024px.e442824d.png\";","import React, {Suspense} from 'react'\nimport {useImage} from 'react-image'\n \nfunction MyImageComponent() {\n    const _width = window.screen.width\n    const _height = window.screen.height\n    //console.log( 'w . ', _width, ' h . ', _height)\n    \n    const {src} = useImage({\n        srcList: `https://picsum.photos/${_width}/${_height}?random=1`,\n    })\n\n    \n    return <img src={src} />\n}\n //<MyImageComponent />\nexport default function Appbackground() {\n  return (\n    <Suspense fallback={<div style={{height: '100%', width:'100%', background:'black'}}></div>}>\n      <MyImageComponent />\n    </Suspense>\n  )\n}","import React from 'react';\nimport './App.css';\nimport { Route, Switch} from 'react-router-dom';\nimport UploadView from './uploadView'\nimport DownloadView from './downloadView'\nimport DropdownMenu from './dropdownMenu'\nimport air from './AIR_1024px.png'\nimport Bg from './background'\nimport api from './api'\n\n\n\nconst Beta = <div className='open_beta'>open beta</div>\n\n\n\n\nexport default class App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      mobile: false,\n      height: '',\n      backend: false,\n    }\n      \n\n    }\n  \n  componentDidMount(){\n    this.createPing()\n    window.addEventListener(\"resize\", this.updateWindowDimensions());\n    this.setState({height: window.innerHeight + \"px\"})\n  }\n\n  \n\n  updateWindowDimensions() {\n    const mobile = window.innerWidth<=600\n    document.documentElement.style.setProperty('--vh', `${window.innerHeight/100}px`);\n    this.setState({ mobile: mobile});\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions)\n  }\n\n  createPing = async()=>{\n    await api.create_ping().then(res=>{\n      if(res.data.is === 'pong'){\n        this.setState({backend: true})\n      }\n    })\n  }\n\n\n  routing = ()=> {\n    return (\n        <Switch>\n          <Route exact path=\"/\" render={(props) => (\n              <UploadView  {...props} mobile={this.state.mobile} backend={this.state.backend} />\n              )}></Route>\n          <Route  path=\"/:id\" render={(props) => (\n              <DownloadView {...props} mobile={this.state.mobile} backend={this.state.backend} />\n              )}></Route>\n        </Switch> \n    );\n  }\n\n\n  \n\n  \n  render(){\n    return (\n      <div className='app_window' style={{height: this.state.height}}>\n        <div className='head_view'>\n          <div className='title'><img className='air_icon' src={air} alt=\"Logo\"/> AIR channel{Beta}</div>\n          <div className='menu'><DropdownMenu/></div>\n        </div>\n        <div className='unkown_view'><Bg/></div>\n        <div className='actions_view'>{this.routing()}</div>\n      </div>\n    );\n  }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App/>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}